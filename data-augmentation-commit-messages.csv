text;classification
https://issues.apache.org/jira/browse/AMQ-3935 - always page in messages when browsing;non_debt
Optimize in-men cube building;non_debt
"GROOVY-5816 Add an ""encoding"" option for Groovydoc tool and Ant task";non_debt
AMBARI-5596. Jobs page: Selection of vertex in table should center vertex in UI (alexantonenko);non_debt
Bug 53145 - HTTP Sampler - function in path evaluated too early;non_debt
"Merge pull request #3094 from cloudant/use-key_docid
Fix ordering of page_size based pagination for views";non_debt
added throw new UnsupportedOperationException() for master-slave model;non_debt
TS-107: import from dev branch;non_debt
util: docstring of _sig_checker (#305);non_debt
[FLINK-8696] [shell scripts] Remove JobManager local mode from shell scripts;non_debt
try to add a unique serverID;non_debt
AMBARI-24620 Duplicate view of configurations in Add Service wizard;non_debt
"Merge pull request #106 from ahgittin/fixing-controller
Fixing controller";non_debt
"[TRAFODION-1742] Rework, misplaced parenthesis
A misplaced paranthesis caused the previous change to not work as expected.";non_debt
Merge branch 'jsfm-feature-0.16' of https://github.com/alibaba/weex into jsfm-feature-0.17;non_debt
Update README.md;non_debt
see role permissions;non_debt
updating the CHANGES.txt for multicore changes;non_debt
Merge branch 'cassandra-3.0' into cassandra-3.3;non_debt
"[Dubbo-3653] Enable etcd to support metadata center (#3943)
* Support etcd as metadata center
* Fix key format error for consul/redis and UT failure
* Fix UT failure
* Fix UT failure
* Fix UT failure";non_debt
"Use LOCAL_QUORUM for LWT operations at LOCAL_SERIAL
patch by Sankalp Kohli reviewed by jbellis for CASSANDRA-6495";non_debt
PARQUET-1556 Use try-with-resource in Apache Avro tests (#639);non_debt
Updated cep artifact folder names;non_debt
Docs: Adding documentation and translation chapter in dev guide;non_debt
"Migrate command `initnewcluster`
Descriptions of the changes in this PR:
#2046 
This closes #2047 from zymap/command-initnewcluster";non_debt
[CXF-5954] Adding JWS RSA and JWE AesHMacCbc JWK system tests;non_debt
new UI - disk offering page - implement updateDiskOffering action;non_debt
clang-format;non_debt
AMBARI-6045 Master components are missing. (atkach);non_debt
AMBARI-12927. RU: Falcon server restart failed during tar, need to add retries to command (Swapan Shridhar via alejandro);non_debt
for #1172, remove tracing for get connection and close connection;non_debt
[KARAF-5376] Woodstox doesn't like mixing access to underlying writer;non_debt
new UI - zone page - add domain in details tab.;non_debt
add javadoc @since for some methods;non_debt
GUACAMOLE-144: Fix path to LICENSE for Carlito font.;non_debt
Added some comments on CachedOutputStream;non_debt
"feat: add hook for dataset health check (#11970)
* feat: add hook for dataset health check
* add event log
* optimize datasource json data like certified data
* add unit test
* fix review comments
* extra code review comments";non_debt
"Merge pull request #336 from lukasnalezenec/protobuf
protobuf dependency version changed from 2.4.1 to 2.5.0";non_debt
GEODE-7157: Add fix for test case;non_debt
Bug 49862 - Improve SMTPSampler Request output.;non_debt
AMBARI-4469. Bulk Ops: Integrate maintenance mode. (onechiporenko);non_debt
put some docs into lazyTailArrayNode;non_debt
Upgrade Zipkin to version 2.20.1;non_debt
CAMEL-7221: Upgrade to Lucene 4.6.1;non_debt
ACCUMULO-86 fix up the LICENSE and NOTICE files;non_debt
Convert web-cluster examples etc (for interface+impl);non_debt
HADOOP-10466. Lower the log level in UserGroupInformation.  Contributed by Nicolas Liochon;non_debt
GROOVY-2429: Allow subclasses of XmlParser to customize creation of new Nodes;non_debt
bumped trunk to beta;non_debt
for #1205, remove sync for SQLExecutePrepareTemplate and recover sync for get connections on same data source, because data source map always use same hash sequence to iterator entries;non_debt
Fix error message for --print;non_debt
Merge remote-tracking branch 'origin/cassandra-2.0.0' into cassandra-2.0.0;non_debt
"TOBAGO-848: Move classes that shouldn't be used from applications into ""internal"" package.";non_debt
update release notes;non_debt
19189: fix bugs in SystemML - removed WELL1024;non_debt
KYLIN-669 add AdminLTE MIT License in LICENSE file;non_debt
tests: use fs factory for now;non_debt
AMBARI-18546. Part_2.BP format does not generate property oozie.service.JPAService.jdbc.url.(vbrodetskyi);non_debt
[BEAM-7949] Add time-based cache threshold support in the data service of the Python SDK harness.;non_debt
NIFI-4639: Updated PublishKafka 1.0 processor to use a fresh writer for each output record as well. This closes #2292.;non_debt
"Merge commit '6dc1745' into cassandra-3.0
* commit '6dc1745':
  Disable passing control to post-flush after flush failure to prevent data loss.";non_debt
fix #2410, add encrypt to other database;non_debt
Adding in isPublic property to beans and Service interface / utils for tenant isolation requirements;non_debt
[FLINK-11843] Add DispatcherRunnerImplNGFactory implementation;non_debt
"[SPARK-25533][CORE][WEBUI] AppSummary should hold the information about succeeded Jobs and completed stages only
## What changes were proposed in this pull request?
Currently, In the spark UI, when there are failed jobs or failed stages, display message for the completed jobs and completed stages are not consistent with the previous versions of spark.
Reason is because, AppSummary holds the information about all the jobs and stages. But, In the below code, it checks against the completedJobs and completedStages. So, AppSummary should hold only successful jobs and stages.
https://github.com/apache/spark/blob/66d29870c09e6050dd846336e596faaa8b0d14ad/core/src/main/scala/org/apache/spark/ui/jobs/AllJobsPage.scala#L306
 https://github.com/apache/spark/blob/66d29870c09e6050dd846336e596faaa8b0d14ad/core/src/main/scala/org/apache/spark/ui/jobs/AllStagesPage.scala#L119
So, we should  keep only completed jobs and stage information in the AppSummary, to make it consistent with Spark2.2
## How was this patch tested?
Test steps:
 bin/spark-shell
**Before fix:**
**After fix:**
Closes #22549 from shahidki31/SPARK-25533.";non_debt
"Change render_text to render( text => for sub postupdate
* traffic_ops/app/lib/UI/Server.pm
fixes #1238";non_debt
enablebool (#3056);non_debt
HIVE-17824 : msck repair table should drop the missing partitions from metastore (Janaki Lahorani, reviewed by Peter Vary, Alexander Kolbasov and Vihang Karajgaonkar);non_debt
AMBARI-5612. Unit tests for object_utils, date, ui_effects, updater. (Denis Buzhor via onechiporenko);non_debt
"[BEAM-7006] Fix some race conditions in sdf splitting.
* Splitting could be requested before operation started.
* An element could finish while we were splitting.";non_debt
HBASE-7838 HBase regionserver never stoping when running  (Damien Hardy);non_debt
[KARAF-1853] Align SNAPSHOT build number in the kar goal;non_debt
added comment for Transaction and nontransaction operator, changed the column name variable;non_debt
"Added a Heap-Slack parameter
This adds the option for users to define a fraction of the container memory that is not used for the JVM heap.
Also, some named parameters were moved out of being inner classes.";non_debt
Added test for ignite-2328.;non_debt
"THRIFT-738. java: TCompactProtocol throws RuntimeException when it can't identify a type identifier
This patch causes it to throw TProtocolException instead.";non_debt
trace dag ui seem good;non_debt
Coverity 1021954;non_debt
Fixes URISchema setFactory(..);non_debt
Update storm-elasticsearch documentation;non_debt
This closes #2104;non_debt
Expand erlang releases tested by Travis;non_debt
"GROOVY-6259: Allow to define the logger category name for the @Log
annotations";non_debt
Fixing class cast error and refining code in TopologyEventMessageListener;non_debt
[FLINK-12607][rest] Expose maxParallelism of jobs and vertices;non_debt
TS-3080: Adding stat for new tls sessions;non_debt
Sync Properties;non_debt
"NIFI-6880 Fix ranger assembly to exclude Java 11 related JARs
This closes #3892";non_debt
"[SPARK-30700][ML] NaiveBayesModel predict optimization
### What changes were proposed in this pull request?
var `negThetaSum` is always used together with `pi`, so we can add them at first
### Why are the changes needed?
only need to add one var `piMinusThetaSum`, instead of `pi` and `negThetaSum`
### Does this PR introduce any user-facing change?
No
### How was this patch tested?
existing testsuites
Closes #27427 from zhengruifeng/nb_predict.";non_debt
 HDFS-9737: libhdfs++: Create examples of consuming libhdfs++ (pt 2).  Contributed by Bob Hansen;non_debt
Merge branch 'apache-https-master' into jira/solr-8593;non_debt
[AIRFLOW-6937] Inline _get_simple_dags method in SchedulerJob (#7561);non_debt
redefine BufferServerController.;non_debt
JENA-1134: basic support for AnalyzingQueryParser;non_debt
throwing RestAPIException from the rest EP in place of ADCException;non_debt
Bumped to release version neo4j-tinkerpop-api-impl 0.7-3.2.3;non_debt
"[trace] Adapt trace util to compaction module (#3814)
Trace util is helpful for diagnosing compaction performance problems,
we can get trace log for base compaction like:
for cumulative compaction like:";non_debt
Adjusting header in libs.osgi/external/osgi-5.0-license.txt, org.osgi.compendium-4.2.0.jar is used now, not osgi.cmpn-4.2.jar.;non_debt
"[NETBEANS-1696] PHP 7.4 Support Arrow Functions 2.0
See https://wiki.php.net/rfc/arrow_functions_v2
- Fix ASTPHP5Parser.cup, ASTPHP5Scanner.flex, and Php5ColoringScanner.flex i.e. parser and lexers
- Add ArrowFunctionDeclaration as an ASTNode
- Add ArrowFunctionScope
- Add code templates for arrow functions
- Fix PHP74UnhandledError and UnusableTypesUnhandledError
- Fix GotoDeclaration and MarkOccurrences features
- Add ASTErrorExpression node to avoid that an ArrowFunctionDeclaration node is handled as an ASTError
- Add unit tests";non_debt
remove master and slave references from C++ API docs (#1140);non_debt
"[SPARK-12386][CORE] Fix NPE when spark.executor.port is set.
Closes #10339 from vanzin/SPARK-12386.";non_debt
[CAMEL-9659] Add more headers to resulting exchange;non_debt
Added ASF license.;non_debt
"ARROW-1553: [JAVA] Implement setInitialCapacity for MapWriter
 Implement setInitialCapacity for MapWriter and pass on this capacity during lazy creation of child vectors
cc @jacques-n , @StevenMPhillips
Closes #1113 from siddharthteotia/ARROW-1553 and squashes the following commits:
5a759be7 [siddharth] ARROW-1553:  Implement setInitialCapacity for MapWriter and pass on this capacity during lazy creation of child vectors";non_debt
"Merge pull request #1938 from pluskid/container
add ignore_label support for 2D softmax";non_debt
"Linear Regression:
- Return Null if no data has been seen
- static_cast for rebind() call from constructor";non_debt
"Fix handling counters in supercolumns when parsing schema
patch by Aleksey Yeschenko reviewed by Sylvain Lebresne for
CASSANDRA-10365";non_debt
[AIRFLOW-112] Change default DAG view from tree view to graph view;non_debt
"Merge branch '1684-feature-db-updates'
* 1684-feature-db-updates:
  Import couch_dbupdates from rcouch.";non_debt
AMBARI-2547. Security wizard: Successive refreshes at some point results in blank screen. (jaimin);non_debt
re generate site from template;non_debt
HBASE-20390-ADDENDUM-3: IMC Default Parameters for 2.0.0 (fix documentation);non_debt
"Merge pull request #3276 from govind-menon/master
Updates next release version to 2.3 for 2.2 release";non_debt
Merge remote-tracking branch 'upstream/dev' into dev;non_debt
Trya again;non_debt
"Start introduction of groovy-binary module
This module should basically do what remains in `assemble.gradle`:
it's about the end deliverables, which are the distribution zips,
sources, ...
It's modeled as a proper module so that we can publish it without
hacking into internal APIs.";non_debt
CLOUDSTACK-3427: UI > UCS manager > implement listUcsBlade API.;non_debt
Merge branch 'cassandra-3.0' into trunk;non_debt
"Merge pull request #752 from ma-xiao-guang-64/dev
prepare to support batch insert(insert)";non_debt
Merge branch 'master' of https://opensource.ncsa.illinois.edu/fisheye/git/dfdl.git;non_debt
AMBARI-22635: Addendum fix Ambari should create a dummy core-site.xml for Ranger plugins when namenode is not installed.;non_debt
Add dependency on freshclam for daemon;non_debt
SOLR-12090: Move DistribStateManager, NodeStateProvider and SolrCloudManager interfaces out of the autoscaling package;non_debt
Merge branch 'cassandra-2.1' into trunk;non_debt
# GG-7623 Fixed log task.;non_debt
"NIFI-2907 Fix Flow Schema Validation Errors
This closes #1587.";non_debt
HAWQ-792. Orca on causes different error message when insert null value to a not null col;non_debt
"ACCUMULO-3113 Increase the timeouts in testTimeout
Formatting also got fixed by eclipse. Should help stabilize
some failures that I was seeing from this test. It appears that
1 second was slightly too fast in some cases to get the cond mutation
committed.";non_debt
Add comments for #29.;non_debt
[CXF-1997] Update the location of where generates sources are output;non_debt
"[CARBONDATA-3351] Block bloom datamap creation on binary datatype column
Why this PR?
As per Binary Datatype design Bloom data-map creation on Binary datatype
column is not supported.
Handled the same.
This closes #3500";non_debt
"BigQueryTableRowIterator: elide columns with null values
As in 6a11a72f, this makes BigQueryIO.Read work in the
DirectPipelineRunner as it does in the DataflowPipelineRunner.
----Release Notes----
[]
-------------
MOE_MIGRATED_REVID=112496161";non_debt
Add dataseturn tag to TaskMetrics;non_debt
$self needs to be passed to these methods for dbix;non_debt
Improvements to the conda build (#2742);non_debt
Add updated invite form;non_debt
This closes #861;non_debt
Update CHANGES.md;non_debt
update company;non_debt
Merge [TRAFODION-2322] PR 811 Improve UPD STATS perf on long char cols;non_debt
fix test;non_debt
got detachedXXX itertors serializable and got Giraph working again. phew... thought I was about to go into a Hadoop-Hole. Now time to make DetachedXXX bad ass.;non_debt
"Moved test litNil7 from debug
This test now works properly
DFDL-199";non_debt
"Merge pull request #414 from mifoscontributer/MIFOSX-212-Test
Removing mandatory check for includeInBorrowerCycle for loan product";non_debt
"Merge pull request #189 from zhouxinyu/ROCKETMQ-270
[ROCKETMQ-270] Move flush position forward to first MappedFile whose start offset is non-zero";non_debt
"[BEAM-4056] Identify side inputs by transform id and local name
This is necessary to identify side inputs during portable pipeline
translation and execution.";non_debt
Upgrade Undertow to version 1.4.14.Final;non_debt
[FLINK-18160][scripts] Do not log about HADOOP_CONF_DIR if HADOOP_CLASSPATH is set;non_debt
accumulo-259 one more merge due to main branch changes before I start next phase of work;non_debt
"Merge pull request #897 from Microsoft-CISL/shravanmn_893
Fixing #893";non_debt
[RELAY] Support concatenate. (#2298);non_debt
Update to add the saga example;non_debt
#IGNITE-53: Move CacheWeakQueryIteratorsHolder to context.;non_debt
Support Windows build target;non_debt
HBASE-14344 Add timeouts to TestHttpServerLifecycle;non_debt
[HUDI-301] fix path error when update a non-partition MOR table;non_debt
Fixed relative position of nbbuild dir;non_debt
Fix race condition in thread startup.;non_debt
bump commons-math from 3.6 to 3.6.1;non_debt
more fun with forrest: these two images were in site/skin/images but not anywhere in src/site .. copying them into the images directory for our theme solved the broken links errors about them;non_debt
ignite-6590 Code review;non_debt
HBASE-1664 Disable 1058 on catalog tables;non_debt
Support for DynamicVariable in trait;non_debt
"CLOUDSTACK-6089: Implement equals() method for ResourceTagResponse
so that the java Set can properly determine if a ResourceTagResponse
is unique. This ensures we don't get duplicate resource tags showing
up any time a UserVmResponse is crafted (which can be quite often
due to the way the responses are crafted).";non_debt
"Merge pull request #927 from jpeach/fix/4785
TS-4785: Stale while revalidate plugin memory corruption.";non_debt
#1864 fix dependency and createCommand date check (#1865);non_debt
For #734, Translate elastic-job-lite-spring's java doc to English (#743);non_debt
sprint-3 Ignite-version;non_debt
fix #701: move to cache package;non_debt
[CXF-5415] Escaping service and operation names when needed;non_debt
fix to load the correct test apps;non_debt
Fixed the CS errors in camel-jms component;non_debt
Fixed pom.xml format error.;non_debt
SPARK-696: sortByKey should use 'ascending' parameter;non_debt
Avro-776. Java: SocketServer holds socket open after close.;non_debt
"[CARBONDATA-1717]Remove spark broadcast for gettting hadoop configurations
This closes #1500";non_debt
Make PackageUtil a proper class encapsulating its ExecutorService;non_debt
[DOC] Fix c++ doc build (#240);non_debt
"NIFI-3294 Adjusting nifi.sh to invoke nifi-env.sh when running as another user such that properties are preserved across environments.
This closes #1405.";non_debt
HADOOP-14371. License error in TestLoadBalancingKMSClientProvider.java. Contributed by hu xiaodong.;non_debt
CAMEL-1663: Fixed bug with using Camel and other annotations in same POJO and RouteBuilder classes.;non_debt
DISPATCH-1396 - Add starting router procedure. This closes #548;non_debt
Added needed support for the wire tap impl.. It can now inject array values into builders.;non_debt
add sbt to jenkins packages;non_debt
"[SPARK-23922][SQL] Add arrays_overlap function
## What changes were proposed in this pull request?
The PR adds the function `arrays_overlap`. This function returns `true` if the input arrays contain a non-null common element if not, it returns `null` if any of the arrays contains a `null` element, `false` otherwise.
## How was this patch tested?
added UTs
Closes #21028 from mgaido91/SPARK-23922.";non_debt
"NIFI-5427: Updating ScrollElasticsearchHttp to use POST, supporting ES6
This closes #2890";non_debt
Add agent to start RMI server for JMX;non_debt
update  api docs;non_debt
IGNITE-8353 Fixed serialVersionUID for AbstractEvictionPolicy;non_debt
"Fixed version conflict on juli dependency by downgrading to version
6.0.29 of juli for jasper and catalina.";non_debt
Setting celery workers optimization to fair;non_debt
"MINIFICPP-819 - OPC Unified Architecture Support
Approved by bakaid on GH
This closes #635";non_debt
Display enhancement in package exports command.;non_debt
CSV strings are quoted, not escaped clarify this;non_debt
"CAMEL-15624 : Refactoring WordpressComponentConfiguration.java to WordpressConfiguration.java (#4356)
This name is conflicted with auto generated camel-wordpress-starter
component configuration. By current document,
WordpressConfiguration should be correct name and it resolves the
conflicting issue on starter module. I updated doc accordingly.";non_debt
Dropping the concat methods. Moving the join(Object[]) to join(Object...). LANG-396. LANG-683. ;non_debt
[FLINK-2278] [ml] Fixes wrong Breeze sparse vector to Flink sparse vector conversion;non_debt
CAMEL-10842: Component JSon schema - JSon values should not always be string types;non_debt
additional tests for GROOVY-3323 and GROOVY-3555;non_debt
"THRIFT-4780: finish the server implementation of multi in python server
- Add default processor handling to python multi";non_debt
HDFS-8803. Move DfsClientConf to hdfs-client. Contributed by Mingliang Liu.;non_debt
for #2084, add intervalUnit_ for mysql g4;non_debt
CAMEL-13113: Remove camel-script component;non_debt
CAMEL-13182 - split camel-aws component in individual components, moved aws-ses;non_debt
days period frequency for locking savings product fixed;non_debt
CAMEL-2347: Added nagios component;non_debt
[CAMEL-13511] Introduce a Model interface to hold definitions related methods;non_debt
CAMEL-6847 Fixed the FacebookConsumer decoding issue with thanks to Dhiraj;non_debt
CAMEL-2915. Patch for camel-xstream applied with thanks to Mark;non_debt
"[sqllab] adding a sql preprocessor for Presto (#1670)
* fixing tests";non_debt
merge;non_debt
"MINIFI-193: Ensure safe UTF encoding
Since the C++ library is agnostic of UTF-8 we can safely write the bytes.
Since we won't be interpreting the UTF-8 code in the core library
we do not need any additional dependencies. Nor do we need to worry about
encoding beyond proper serialization and deserialization of the byte array.
This closes #68.";non_debt
HBASE-4218 Data Block Encoding of KeyValues (aka delta encoding / prefix compression) (Jacek, Mikhail);non_debt
Tests for GROOVY-1128 (still disabled);non_debt
[TE] Changes to make external clients independent of thirdeye database (#1397);non_debt
[FLINK-4460] Add side output ITCase for multiple side out consumers;non_debt
"Merge pull request #947 from Nakomis/process-template-extra-substitutions
Added overload of copyTemplate to allow extra substitutions";non_debt
Regen;non_debt
distinguish between planId / templateId / entityId (with yaml DslComponent referring to the first of these);non_debt
AMBARI-11739: fixed a repo creation issue when repo creation is called from multiple server simultaneously (Selvamohan Neethiraj via jluniya);non_debt
"NIFI-65:
- Adding methods to the AuthorityProvider to authorize the downloading of content.";non_debt
Add partition search tests;non_debt
KYLIN-1048 fix CPU and memory killer in Cuboid.findById();non_debt
Merge pull request #12835 [BEAM-10889] Add a note about BatchElements on GroupIntoBatches pages.;non_debt
Merge branch 'master' into ui-plugins;non_debt
CAMEL-8936: Create a test module for CDI;non_debt
CAMEL-7384 Fixed the NPE of camel-rabbitmq test;non_debt
First pass at SpiderMonkey 68 support;non_debt
LUCENE-4840: fix test to either use DV or not ... don't mix (so that we catch any bugs in SSDVFFs drill down;non_debt
AMBARI-22635: Addendum fix Ambari should create a dummy core-site.xml for Ranger plugins when namenode is not installed.;non_debt
LUCENE-2990: ArrayUtil/CollectionUtil.*Sort() methods now exit early on empty or one-element lists/arrays;non_debt
HBASE-5569 Do not collect deleted KVs when they are still in use by a scanner.;non_debt
how to become root on the vm;non_debt
ACCUMULO-3927 Commit checkstyle changes;non_debt
HDDS-976: Parse network topology from yaml file. Contributed by Junjie Chen. (#661);non_debt
"Merge pull request #1111 from jbonofre/KARAF-6682
[KARAF-6682] Upgrade to felix http.jetty 4.0.18";non_debt
AMBARI-23677. Update spring-data-commons dependency.;non_debt
Clean up as part of intergation into Jena trunk.;non_debt
"moved AbstractController to webapp project, and SSL_CONFIG exposed at that level for protocol detection.
protocol now correctly inferred (was sometimes null).";non_debt
update jetty 9.2.x version;non_debt
Updated the download page anchor;non_debt
"Merge pull request #870 from peng-yongsheng/fixed/855
Fixed/855";non_debt
List init optimize for pure data.;non_debt
"Attach names for all producers/readers in worker service (#7165)
* Attach names for all producers/readers in worker service
* Fix tests";non_debt
2.1.x to 2.2.2 DB ugrade - convert account specific vlans to account specific networks;non_debt
use a more same logging configuration for testing;non_debt
Reuse previous localVidMap if available;non_debt
"Add support targetCompactionSizeBytes for compactionTask (#6203)
* Add support targetCompactionSizeBytes for compactionTask
* fix test
* fix a bug in keepSegmentGranularity
* fix wrong noinspection comment
* address comments";non_debt
"Limit the ByteArray wrapper logic inside segment creator (#3439)
Limit the ByteArray wrapper logic in segment creator only. Use byte[] in all other places.
With this change, ByteArray become transparent outside of segment creation.
Unify the behavior of dictionary:
- Use byte[] for value insertion, value fetch
- Use ByteArray for min-value, max-value, sorted-values";non_debt
"add string de/serialize code to TokenFactory for ApplicationState's benefit.
patch by jbellis tested by nk11 and MarkR42 for CASSANDRA-114";non_debt
"Merge pull request #1154 from ustcweizhou/fix-ui-delete-sshkey-projects
[UI] fix bug: Cannot delete SSH keypairs in projectsBefore change:
error message: ProjectId and account/domainId can't be specified together
After change:
SSH keypairs can be removed
* pr/1154:
  [UI] fix bug: Cannot delete SSH keypairs in projects";non_debt
think bootstrap / restore works now;non_debt
Merge branch 'STORM-3181' of https://github.com/govind-menon/storm into STORM-3181-merge;non_debt
New/updated models to comply with JSON/API requirements;non_debt
"[SPARK-24412][SQL] Adding docs about automagical type casting in `isin` and `isInCollection` APIs
## What changes were proposed in this pull request?
Update documentation for `isInCollection` API to clealy explain the ""auto-casting"" of elements if their types are different.
## How was this patch tested?
No-Op
Closes #21519 from trvskn/sql-doc-update.";non_debt
Port 190-json-stream-parse.t etap test suite to eunit;non_debt
Consider Elasticsearch as one word in camelCase.;non_debt
Merge branch 'master' into fix/segment-cost;non_debt
SCB-85 clean bmi example because metrics sample had added in samples;non_debt
Check delete state of topic;non_debt
Adding a convenience method which passes attributes in a Map;non_debt
CAMEL-316.  Implement the Fault api as Out. Added a fault flag to Message.;non_debt
GUACAMOLE-38: Implement extension-specific REST endpoint and utilities for parsing connection.;non_debt
AMBARI-16951. Upgrade Log Search SOLR version to 5.5.1 (oleewere);non_debt
# sp-22: correct previous optimized classnames;non_debt
Karaf is released!;non_debt
added lic header;non_debt
[AIRFLOW-5702] Fix common docstring issues (#6372);non_debt
[hotfix][docs] Fix the description of bounded-of-orderness in docs/dev/event_timestamps_watermarks.md;non_debt
Made the opening of databases asynchronous, so that requests to open databases that are already in the open database cache do not have to wait on the file system.;non_debt
AMBARI-6322. Choosing bulk hosts to decommission on 120 node cluster on the hosts page just spins. (srimanth);non_debt
"THRIFT-1608 Allow servlet to be supplied TProcessor and TProtocolFactory after the init() method has finished
Patch: Kiril Raychev";non_debt
ARTEMIS-2123 Paging not stopped if there are no messages on one subscription;non_debt
Try to fix an issue into maven upload asc files for sources and javadoc;non_debt
[CXF-5075]: fixed and enabled trusted test for Java 6;non_debt
Adding dependent-scaling.drl test;non_debt
GEODE-4011: Ensure that LogWrapper is closed correctly in GfshCommandRule (#1100);non_debt
traffic_stats progress;non_debt
Returning nic details in KubernetesClusterResponse (#4456);non_debt
"Instance health web ui working with collector success.
#365";non_debt
"Automatic version increment by mint from 0.0.49 to 0.0.50.
VERSION_BUMP";non_debt
fixing a build issue;non_debt
"Configurable redirect of mem3 push jobs
In order to faciliate smoother node replacements, mem3 can be
configured to redirect push jobs intended for one node (the failed
one) to another (its replacement). e.g,
[mem3.redirects]
dbcore@db1.foo.cloudant.com = dbcore@db2.foo.cloudant.com
BugzID: 14348";non_debt
chore: upgrade to npm 7 and superset-ui 0.17.9 (#13100);non_debt
Fix NPE try 2;non_debt
"Merge pull request #462 from mateiz/conf-file-fix
Remove Typesafe Config usage and conf files to fix nested property names
With Typesafe Config we had the subtle problem of no longer allowing
nested property names, which are used for a few of our properties:
http://apache-spark-developers-list.1001551.n3.nabble.com/Config-properties-broken-in-master-td208.html
This PR is for branch 0.9 but should be added into master too.";non_debt
BIGTOP-1843: Upgrade Sqoop to 1.4.6;non_debt
[hotfix] [webfrontend] Rebuild;non_debt
TS-1617: Build cacheurl when experimental plugins are enabled;non_debt
Replace with current versions of GUI layout;non_debt
Bug 57500 - Introduce retry behavior for remote testing / fix test;non_debt
"Merge pull request #1144 from tweise/dt-dev
WebSocket option for AdsDimensionDemoWithHDS.";non_debt
Adding a new HDFS hook using a Python 3 compatible package;non_debt
Merge remote-tracking branch 'origin/ignite-459' into ignite-459;non_debt
Fixed CS errors;non_debt
remove $ tags;non_debt
Upgrade Commons Net to version 3.7.2;non_debt
Document interface;non_debt
CAMEL-14910: modify gulpfile to generate bundling of components nav;non_debt
HDFS-12235. Ozone: DeleteKey-3: KSM SCM block deletion message and ACK interactions. Contributed by Weiwei Yang and Yuanbo Liu.;non_debt
"[cli] permission cleanup on 'superset init' (#4241)
FAB sometimes creates NULL/None permissions in the database,
presumably a race condition when multiple gunicorn workers start at the
same time, and those create issues raising ""AttributeError: 'NoneType'
object has no attribute 'name'""
* Linting";non_debt
This closes https://github.com/apache/beam-site/pull/316;non_debt
added inflate and deflate methods to Holder.;non_debt
Fix for https://issues.apache.org/jira/browse/AMQ-4237;non_debt
Fix jetty test failure with j7;non_debt
"[GRIFFIN-182] fix blank flash when routing from job to metric detail
GRIFFIN-182 - fix blank flash when routing from job to metric detail
ISSUE:
currently, when navigating from ```health``` jobs to job-metric detail page, code will reload the health page to make navigation working causing blank flash
Closes #354 from icesmartjuan/fixblankflashwhenroutefromjobtometric.";non_debt
Merge branch 'STORM-1934' of https://github.com/HeartSaVioR/storm;non_debt
"Add retry mechanism to OTC for non-droppable_verbs
patch by jasobrown reviewed by jbellis for CASSANDRA-5393";non_debt
Bring grape in line with 1.6 code;non_debt
fix ecx url;non_debt
add ut;non_debt
HDFS-3341, HADOOP-8340. SNAPSHOT build versions should compare as less than their eventual release. Contributed by Todd Lipcon.;non_debt
SOLR-5473 one state.json per collection , SOLR-5474 support for one json per collection;non_debt
"Merge branch 'cassandra-2.0' into trunk
Conflicts:
	lib/licenses/slf4j-log4j12-1.7.2.txt";non_debt
HIVE-7804 : [CBO] Support semi-joins (Harish Butani);non_debt
Fix URL in javadoc;non_debt
AMQ-6147: update to proton-j 0.12.0 release;non_debt
Etag's require quotes;non_debt
"Fix ColumnCounter::countAll behaviour for reverse queries
Patch by Sam Tunnicliffe reviewed by Jason Brown for CASSANDRA-13222";non_debt
"GEODE-6142: Check JDBC mapping before destroy region (#2950)
gfsh destroy region will now fail if the region has a jdbc-mapping that
has not yet been destroyed.";non_debt
LUCENE-3531: Revert adding Reader/CoreClosedListeners in CachingWrapperFilter;non_debt
Removed link to md5 checksums in download page (#1894);non_debt
HIVE-1509. Monitor the working set of the number of files;non_debt
Add test case for new hasVariable() method on Binding.;non_debt
"ARROW-9303: [R] Linux static build should always bundle dependencies
Also adds a cmake minimum version check, per the original user report.
Closes #7699 from nealrichardson/fix-dependency-source";non_debt
ACCUMULO-580 roll back changes to add batch size to batch scanner;non_debt
properly translate nested composite transforms;non_debt
HDDS-2023. Fix rat check failures in trunk (addendum);non_debt
SOLR-10302: Solr's zkcli scripts now able to find the metrics libraries;non_debt
[RUNTIME][CRT] support DLTensor whose ndim == 0 (#5344);non_debt
DynamicShardingValueHelper = > HintShardingValueHelper;non_debt
"Add support for extra links coming from the providers (#12472)
Closes: #11431";non_debt
"PINOT-1308: Replacing internal data in test.
RB=490954
R=kgopalak,xiafu,jfim,dpatel
A=jfim";non_debt
LUCENE-4337: Add missing EOL-Style;non_debt
"Merge pull request #824 from afs/small-items
JENA-1990, JENA-1991, JENA-1992, JENA-1993: Upgrade and small items";non_debt
"bug 13356
Clear out sticky/custom data drop-down after adding policy
status 13356: resolved fixed";non_debt
refactor ShardingDataSource  implements AutoCloseable;non_debt
AMBARI-8148. Rolling Upgrade Bootstrap - Create new tables and populate during the installation of a new cluster (alejandro);non_debt
DISPATCH-640 - Additional tests to make sure both containerId and connection cannot be specified in linkRoute/autoLink;non_debt
"Refactor code
Refactored some code about new java version.
--Make a contribution to groovy every day.";non_debt
"Grant read ""line.separator"" property permission to ScriptTest.groovy";non_debt
"Raise the threshold of using MMAP for inverted index creation from 100M to 2G (#4358)
We have experienced very high GC stopping the thread time while generating huge inverted index with MMAP files
Writing to MMAP files could potentially cause super long stopping the thread time and cause the server/minion lose ZK connection
Raise the threshold to 2G (use direct memory if value buffer size is smaller than 2G) to solve the issue
Generating extremely large inverted index (over 500M values) could still face the same issue, but we want to keep the threshold to prevent running out of direct memory";non_debt
Merge branch 'tp32';non_debt
"KAFKA-9330: Skip `join` when `AdminClient.close` is called in callback thread (#7866)
The close method calls `Thread.join` to wait for AdminClient thread to
die, but if the close is called in the api completion callback, `join`
waits forever, as the thread calling `join` is same as the thread it
wants to wait to die.
This change checks for this condition and skips the join. The thread
will then return to main loop, where it will check for this condition
and exit.";non_debt
Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/incubator-phoenix;non_debt
Algebra test for custom aggregates.;non_debt
Screwed up the conflicts on rebasing.  Fixorz orz orz;non_debt
Updating RELEASE_NOTES after 1.2.0 release;non_debt
[CALCITE-4019] Visit SqlInsert with SqlShuttle cause NullPointerException (Xu ZhaoHui);non_debt
Minor changes;non_debt
Coverity CID #1021871 Dereference null return value;non_debt
Commit test to see if BJ notices CVS changes;non_debt
This closes #3057;non_debt
"Revert ""Add a first README.md file (at least to trigger the github mirroring)""
This reverts commit 11e842717f70298a4ea8436363b3101117685f60 in preparation for the initial code drop.";non_debt
"TS-898: ensure cache span probe closes file descriptors
Add a new helper class xfd (by analogy to xptr). This ensures that
the opened file descriptor is always closed in every error path.
Coverity #1196462";non_debt
Make Pool and Lease implement Closeable;non_debt
"[FLINK-5907] [java] Fix handling of trailing empty fields in CsvInputFormat.
This closes #3417.";non_debt
close merge readers before checkpoint, so IFD can delete the files;non_debt
"ARROW-7842: [Rust] [Parquet] Arrow list reader
This is a port of #6770 to the parquet-writer branch.
We'll have more of a chance to test this reader,and ensure that we can roundtrip on list types.
Closes #8449 from nevi-me/ARROW-7842-cherry";non_debt
Fix milo schema problem;non_debt
Use the released camel 1.3.0;non_debt
[hotfix][avro] Fix AvroRowSerializationSchema doesn't support TIMESTAMP type;non_debt
HIVE-8776: Generate MapredLocalWork in SparkMapJoinResolver [Spark Brach] (Chao via Xuefu);non_debt
[CXF-7201] Ending up with optionally converting a clear form UserInfo to String;non_debt
Upgrade Jackson to version 2.8.4;non_debt
fix: clean up prop type errors in jest tests (#11120);non_debt
"[SPARK-7785] [MLLIB] [PYSPARK] Add __str__ and __repr__ to Matrices
Adding __str__ and  __repr__ to DenseMatrix and SparseMatrix
Closes #6342 from MechCoder/spark-7785 and squashes the following commits:
7b9a82c [MechCoder] Add tests for greater than 16 elements
b88e9dd [MechCoder] Increment limit to 16
1425a01 [MechCoder] Change tests
36bd166 [MechCoder] Change str and repr representation
97f0da9 [MechCoder] zip is same as izip in python3
94ca4b2 [MechCoder] Added doctests and iterate over values instead of colPtrs
b26fa89 [MechCoder] minor
394dde9 [MechCoder] [SPARK-7785] Add __str__ and __repr__ to Matrices";non_debt
Include the exception from urllib in wget test;non_debt
"Merge pull request #408 from apache/christ/win_puppet_add_modules_dir
Adding in a blank folder with .keep in it to make Windows work.";non_debt
Refactored sharding to be sub package of serialization for clean dependencies.;non_debt
# gg-9470-rename;non_debt
[HOTFIX] for SYSTEMML-1731;non_debt
SOLR-10651: fix docs ...;non_debt
"Add --unparse option to performance subcommand of CLI
in order to measure performance of unparsing an infoset
DFDL-1336";non_debt
Fix npe;non_debt
Merge branch '0.12-dev' of https://github.com/apache/incubator-weex into 0.12-dev-web;non_debt
"Merge pull request #1656 from shapeblue/4.9-fk410to420fix
CLOUDSTACK-9466: Fix fk constraint failure in upgrade pathIn the 4.1.0-4.2.0 db upgrade path, it creates new tables to store secondary
the upgrade path, it first tries to migrate NFS storage pool where it excludes
storage pools which have been removed, but it migrates all the volumes without
checking if their storage pools have been removed. This causes fk constraint
failure as the volume/row being inserted refers to a storage pool which does
not exist in the image_store table.
The fix migrates all the nfs storage pools to image_store including removed
storage pools and in doing so migrates with the 'removed' field. This fixes
db upgrade for old pre-4.0 and 4.0/4.1 CloudStack clouds.
/cc @jburwell @PaulAngus @karuturi @abhinandanprateek @murali-reddy
* pr/1656:
  CLOUDSTACK-9466: Fix fk constraint failure in upgrade path";non_debt
Merge pull request #6529: [BEAM-5533] fix import error in the dependency tool;non_debt
LUCENE-7590: make (Sorted)NumericDocValuesStats public;non_debt
Use WANT for client SSL to have test working on more platforms;non_debt
"Empty task intervals, and empty lock intervals, aren't useful.
So prevent them from being created, through checks in AbstractFixedIntervalTask
and TaskLockbox.tryLock.";non_debt
Versions for 1.2.9 release;non_debt
Removed Camel-Context remaining stuff;non_debt
Merge branch 'master' of https://github.com/apache/incubator-echarts;non_debt
HDDS-1750. Add block allocation metrics for pipelines in SCM. Contributed by Lokesh Jain. (#1047);non_debt
"Merge pull request #461 from jbonofre/AMQ-7410
[AMQ-7410] Align dependencies with Apache Karaf";non_debt
Fix the gogo webconsole plugin which has been broken recently;non_debt
"THRIFT-4206: Fix decoding of strings in containers with py:dynamic and py:utf8strings
Client: py
_read_by_ttype and _write_by_ttype must be using the *element* spec
and not the container spec when determining the correct read/write
handler.
This closes #1273";non_debt
SOLR-12913: Add recip and expand percentile docs;non_debt
"Merge pull request #611 from jbonofre/KARAF-5911
[KARAF-5911] Restrict XML entities";non_debt
doc: installation steps for Mac OSX.;non_debt
Shade all jackson packages in thirdeye-hadoop (#1391);non_debt
renamed build() to create() and create() to build() for the Builder pattern throughout TP3. Updated docs as well.;non_debt
YARN-5226. Remove AHS enable check from LogsCLI#fetchAMContainerLogs. Contributed by Xuan Gong.;non_debt
popup sample;non_debt
limits :id to a number;non_debt
"[SPARK-7279] Removed diffSum which is theoretical zero in LinearRegression and coding formating
Closes #5809 from dbtsai/format and squashes the following commits:
6904eed [DB Tsai] triger jenkins
9146e19 [DB Tsai] initial commit";non_debt
"[SPARK-29456][WEBUI] Improve tooltip for Session Statistics Table column in JDBC/ODBC Server Tab
What changes were proposed in this pull request?
Some of the columns of JDBC/ODBC tab  Session info in Web UI are hard to understand.
Add tool tip for Start time, finish time , Duration and Total Execution
Why are the changes needed?
To improve the understanding of the WebUI
Does this PR introduce any user-facing change?
No
How was this patch tested?
manual test
Closes #26138 from PavithraRamachandran/JDBC_tooltip.";non_debt
"JENA-1085: Common pattern for transaction lifecycle. Always call index operations.
Merge commit 'refs/pull/108/head' of github.com:apache/jena
This closes #108.";non_debt
CAMEL-15807: Fixed regression with Simple language contains function.;non_debt
Merge branch 'master' of https://github.com/ecomfe/echarts;non_debt
"Merge pull request #181 from mistercrunch/time_grain
Dynamic time granularity on any datetime column";non_debt
"LibsvmIter Doc Updates (#8111)
* add clarification to libsvm iter
* add reset notes
* add reset notes
* also update csv iter";non_debt
kif updates + set notify to true for hipchat;non_debt
for #660: hidden positionValueMap & positionIndexMap;non_debt
"JcloudsLocation waitForSshable uses timeout for connections and sessions
Rather than only PROP_SSH_TRIES.";non_debt
# sprint-25-rc3: added test for queue/future;non_debt
contribution from Dror Matalon;non_debt
doc: add doc for how to write plugin.(#909);non_debt
Commit 2 for integrated security. [#118023915];non_debt
61183: Maven setup - Restructure for Maven Setup;non_debt
restored from master;non_debt
"[SPARK-25689][FOLLOW-UP][CORE] Get proxy user's delegation tokens
## What changes were proposed in this pull request?
This pr makes it get proxy user's delegation token, otherwise throws `AccessControlException`([full log](https://issues.apache.org/jira/browse/SPARK-25689?focusedCommentId=16780609&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-16780609)):
How to reproduce this issue:
## How was this patch tested?
Test on our production environment.
Closes #23922 from wangyum/SPARK-25689.";non_debt
LUCENE-5357: Upgrade StandardTokenizer and UAX29URLEmailTokenizer to Unicode 6.3 update UAX29URLEmailTokenizer's recognized top level domains in URLs and Emails from the IANA Root Zone Database.;non_debt
"bug 5356: Adding Started event for ROUTER.DESTROY when we destroy a domR as a part of account delete.
status 5356: resolved fixed";non_debt
"Merge branch 'cassandra-2.0' into cassandra-2.1
Conflicts:
	CHANGES.txt";non_debt
Upgrade Dropbox to version 3.0.8;non_debt
Merged in with trunk;non_debt
"Add 'src/couch_log/' from commit '194db1adeafd9d5b434ae22b06aecdcb8635863e'
git-subtree-dir: src/couch_log
git-subtree-mainline: 0166e381dd07e2566a05e90f6c18b6b86413ab0c
git-subtree-split: 194db1adeafd9d5b434ae22b06aecdcb8635863e";non_debt
SPOI-4604 #resolve #comment provide a search function;non_debt
[TE] frontend - harleyjj/packages - remove bower from frontend (#5460);non_debt
Upgrade Libphonenumber and related bundle to version 8.10.8;non_debt
ACCUMULO-4778 Fix findbugs failure;non_debt
ACCUMULO-3795 add scanner batch timeout;non_debt
Fixed CS;non_debt
AMBARI-1150. Installer Wizard - Retry feature in Deploy step (Step 9) is broken. (yusaku);non_debt
CLOUDSTACK-2650 setting vm ip null in user_ip_address when static nat ip;non_debt
"[CALCITE-1424] Druid type is called FLOAT, not DOUBLE (Jiarong Wei)
Close apache/calcite#301";non_debt
Merge branch 'cassandra-3.0' into cassandra-3.11;non_debt
Merge branch '2.0';non_debt
# IGNITE-187 Fixes after TC run.;non_debt
Update TomcatNodeIntegrationTest to work with new config mechanism for specifying the WAR file;non_debt
Merge branch 'cassandra-3.9' into trunk;non_debt
"https://issues.apache.org/jira/browse/AMQ-3182 - JAAS PropertiesLoginModule does not maintain internal validity state, so will commit in error after an invalid login attempt
https://issues.apache.org/jira/browse/AMQ-3183 - Set JMSXUserID value based on authenticated principal
Fixed up PropertiesLoginModule such that it maintains login state and only commits on success. Added attribute brokerService useAuthenticatedPrincipalForJMXUserID to indicate
that the first authenticated user principal should be used for the userName and hense by the userId broker when populateJMSXUserID is set. In the absense of a principal the
userName is unchanged.";non_debt
Component docs;non_debt
Adding condition to check the availability of groups in the application parser;non_debt
Adding macro ds_add;non_debt
Some junit assertion optimisations;non_debt
Merge branch 'FINERACT-470' into develop;non_debt
CAMEL-10141: make camel-testng tests pass on Java 9;non_debt
fixing test;non_debt
"Remove test/brooklyn.entity.proxying.MyEntity
- Instead use TestEntity";non_debt
"[SPARK-22778][KUBERNETES] Added the missing service metadata for KubernetesClusterManager
## What changes were proposed in this pull request?
This PR added the missing service metadata for `KubernetesClusterManager`. Without the metadata, the service loader couldn't load `KubernetesClusterManager`, and caused the driver to fail to create a `ExternalClusterManager`, as being reported in SPARK-22778. The PR also changed the `k8s:` prefix used to `k8s://`, which is what existing Spark on k8s users are familiar and used to.
## How was this patch tested?
Manual testing verified that the fix resolved the issue in SPARK-22778.
/cc vanzin felixcheung jiangxb1987
Closes #19972 from liyinan926/fix-22778.";non_debt
"GROOVY-9076: add NOP bytecode for debugger to support ""step into""";non_debt
Improved doxygen doco.;non_debt
" use a dojo dependency instead of unpacked files included
  added missing servlet-config (commented out)";non_debt
Pass location using parmamter in Dataflow integration (#8382);non_debt
"Merge pull request #607 from aledsage/fix/BrooklynLauncher
Fix/brooklyn launcher";non_debt
"CLOUDSTACK-2243: Add automation tests for VMs base image
 update faclity";non_debt
"ignite-4492 Add MBean for StripedExecutor
This closes #1491.";non_debt
I guess it's supposed to be called KEYS;non_debt
NUTCH-2183 Improvement to SegmentChecker for skipping non-segments present in segments directory;non_debt
Fix test to work with protocol variation.;non_debt
Applied patch with thanks to Martin;non_debt
KYLIN-1010 Fix CI, add invertedindex into coprocessor jar;non_debt
"Minor corrections to tutorial.md
Mostly grammatical/stylistic, but I found a couple of problems in the code too.
There's one that I wasn't able to figure out:
It would be nice to have a specific value for ""some symbol"", and a call of simple_bind that works correctly with it.";non_debt
Remove Protobuf guava version property;non_debt
[CAMEL-9388] Provide properties-based AMQP connection discovery.;non_debt
"KAFKA 3656: Remove logging outstanding messages when producer flush fails
Closes #1319 from Ishiihara/kafka-3656";non_debt
Correct version of xml-apis;non_debt
"Added the ability to use the STSClient in an intermediary.
 - There is a new configuration property to disable storing issued tokens per exchange
 - Caching is enabled for OnBehalfOf or ActAs tokens
Conflicts:
	rt/ws/security/src/main/java/org/apache/cxf/ws/security/policy/interceptors/IssuedTokenInterceptorProvider.java";non_debt
fixes #1900 Moves volume choosers to SPI (#1905);non_debt
For #2144, Add yaml configuring method for orchestrationEncryptDataSource;non_debt
Always add ** to key lines of load log (for extraction purposes);non_debt
Mark ExternalClusterManager as private[spark].;non_debt
"TOBAGO-1544: Revise Demo Application for Tobago 3.0
* restructure the menu (and directories)
[developed with hnoeth]";non_debt
minor refactoring;non_debt
trying to fix travis CI gcc-4.8 thing;non_debt
HDFS-6682. Add a metric to expose the timestamp of the oldest under-replicated block. (aajisaka);non_debt
# ignite-44;non_debt
GROOVY-4288: GroovyScriptEngine can't refresh class from url other than file;non_debt
AMBARI-8407. Alerts UI > Manage alert groups: add ability to edit and save notifications.(XIWANG);non_debt
"Merge pull request #2725 from entlicher/vscodeext_CodelensOutputFixes
[NETBEANS-5326] LSP codelens output fixes";non_debt
HDFS-6094. The same block can be counted twice towards safe mode threshold. (Arpit Agarwal);non_debt
Merged with Master;non_debt
merge from 2.0;non_debt
"TOMEE-385 - Complete application properties scoping
 - Ensure complete propagation of Properties at each level 
 - Ensure inheritance in Options";non_debt
YARN-771. AMRMClient support for resource blacklisting (Junping Du via bikas);non_debt
Merge remote-tracking branch 'remotes/origin/sprint-1' into ignite-6;non_debt
[KARAF-5373] Correctly attach the artifacts when inputFile doesn't exist;non_debt
IGNITE-8691 Removed jar-plugin from ignite-zookeeper module - Fixes #4118.;non_debt
update release note;non_debt
Add locks to ParallelRunner;non_debt
"[REEF-986] Switch all InterOp calls to call public get methods in Java instead of referencing private fields
JIRA:
  [REEF-986](https://issues.apache.org/jira/browse/REEF-986)
Pull request:
  This closes #669";non_debt
49765: Upgrading ExecR App with MR 2.0.4;non_debt
Merge branch 'master' into master;non_debt
"THRIFT-2348 PHP Generator: add array typehint to functions
Patch: Maurus Cuelenaere";non_debt
Removing groupScalingEnabled attribute from cartridge group;non_debt
AMQ-7271 - Update XBean;non_debt
add AggregationDistinctQueryResult();non_debt
Fix use of date command for Linux in SoftwareEffectorTest;non_debt
"Adds example with ""open loop"" policy
- Adds WebClusterDatabaseOpenLoopExample, which sends an SMS message
  when the max-pool-size cap is reached. This notification to the
  operator allows someone to manually reconfigure the AutoScaler policy
  to increase the max-pool-size, if desired.";non_debt
Update the addon's hello world tutorial to have routeObjects;non_debt
Update STATUS for 5.1.1;non_debt
Merge pull request #5412: [BEAM-4340] Enforce ErrorProne analysis in file-based-io-tests;non_debt
TOMEE-260 basic validation on rest methods;non_debt
GEODE-8326: remove 5 minutes wait to get stack dump (#5358);non_debt
[BEAM-6114] Add isBounded() to BeamRelNode and BeamSqlTable, use for JOIN;non_debt
"Retrieve relevant fields to determine PushTopic update
The check for changes in these fields was already in the code, but
the field values were not retrieved through the Salesforce REST API.";non_debt
HIVE-21836: Update apache directory server version to 1.5.7 (Zoltan Haindrich reviewed by Laszlo Bodor);non_debt
exposing complete deployment policy with the CLI;non_debt
release info for 2.0.8;non_debt
AVRO-1471. Java: Permit writing generated code in different character encodings.  Contributed by Eugene Mustaphin.;non_debt
"KAFKA-5128 Check inter broker version in transactional methods
Add check in `KafkaApis` that the inter broker protocol version is at least `KAFKA_0_11_0_IV0`, i.e., supporting transactions
Closes #3103 from dguy/kafka-5128";non_debt
"Remove dynamic_snitch boolean from example configuration
patch by jbellis reviewed by brandonwilliams for CASSANDRA-3229";non_debt
PHOENIX-4465 Default values of some of the table/column properties like max versions changed in HBase 2.0(Rajeshbabu);non_debt
"Merge pull request #3 from cloudsoft/new-constructor
Added a constructor for convenience from java.";non_debt
CAMEL-345 Applied the patch with thanks to Jonathan;non_debt
"Use Structural Value keys instead of User Values
This fixes problems with lookup by basing entirely on structural
equality.";non_debt
HBASE-19552 find-and-replace thirdparty offset;non_debt
making it possible to override process tuple;non_debt
HDFS-8822. Add SSD storagepolicy tests in TestBlockStoragePolicy#testDefaultPolicies (Contributed by Vinayakumar B);non_debt
Upgrade to optiq-0.4.16. Add a test case for Optiq issue https://github.com/julianhyde/optiq/issues/69.;non_debt
Use Libphonenumer bundle in camel-cm-sms Karaf feature;non_debt
[KARAF-553] - Get place of jetty config with mvn url in sync;non_debt
HDFS-14625. Make DefaultAuditLogger class in FSnamesystem to Abstract. Contributed by hemanthboyina.;non_debt
Fix Javadoc bug;non_debt
Merge branches 'gg-9164' and 'sprint-28' of https://github.com/ggprivate/ggprivate into gg-9164;non_debt
[typing] superset/models/core.py (#8284);non_debt
https://issues.apache.org/jira/browse/AMQ-5775 - encode queueGraph.jsp;non_debt
[FLINK-11086][docs] Make HADOOP_CLASSPATH approach more prominent in docs;non_debt
HBASE-18141 Regionserver fails to shutdown when abort triggered during RPC call;non_debt
utils: add HttpUtils test;non_debt
"[HOTFIX] Exclude netty-all in lower version which could conflict with higher version
Why is this PR needed?
exclude netty-all in lower version which could conflict with higher version
What changes were proposed in this PR?
pom is modified
Does this PR introduce any user interface change?
No
Is any new testcase added?
No
This closes #3666";non_debt
ACCUMULO-1800 fix deletes, added test;non_debt
Update jcache & ehcache3 versions;non_debt
appendInsertValuesToken();non_debt
Use counting inside and outside a transaction to see what's happened.;non_debt
Only apply sensor display value transform for non-JSON or batch API calls;non_debt
rename ContextConfiguration parameters to match the new API;non_debt
Fix VM component tests;non_debt
"Add support for + and - operations on dates
patch by Benjamin Lerer reviewed by Alex Petrov for CASSANDRA-11936";non_debt
ARTEMIS-2969 / ARTEMIS-2937 Dealing with Connection Timeout properly on AMQP Broker Connections;non_debt
"[SPARK-16941] Use concurrentHashMap instead of scala Map in SparkSQLOperationManager.
## What changes were proposed in this pull request?
ThriftServer will have some thread-safe problem in **SparkSQLOperationManager**.
Add a SynchronizedMap trait for the maps in it to avoid this problem.
Details in [SPARK-16941](https://issues.apache.org/jira/browse/SPARK-16941)
## How was this patch tested?
NA
Closes #14534 from SaintBacchus/SPARK-16941.";non_debt
Merge branch '1662' into dt-dev;non_debt
"compute: fix create sshkeypair account input (#340)
Fixes #335";non_debt
delete ColumnsTag;non_debt
[CXF-8191]align dom4j bundle version to 2.1.1;non_debt
"DataflowRunner will raise an exception on failures.
This is the same behavior as before.";non_debt
"SOLR-14253 Replace sleep calls with ZK waits (#1297)
Co-Authored-By: markrmiller <markrmiller@apache.org>";non_debt
Moving myfaces-api (optional) from parent POM to the individual POMs, because otherwise it will be used in the example when defining -Djsf=xxx.;non_debt
other tables for clean delete of hosts;non_debt
layout;non_debt
Added Stream Config EIP base docs;non_debt
"Merge pull request #13742 from apache/fix-types
fix(decal): fix types and improve test cases";non_debt
Merge branch 'master' into scala-2.9;non_debt
"MINOR: Update consumer javadoc for invalid operations on unassigned partitions  (#5005)
Document cases where  `IllegalStateException` is raised when attempting an invalid operation on an unassigned partition. Also change `position()` to raise `IllegalStateException` when called on an unassigned partition for consistency.";non_debt
HIVE-19513 : ptest version in pom.xml should be 1.0 (Vihang Karajgaonkar reviewed by Sahil Takiar);non_debt
"Merge branch 'tp32' into tp33
Conflicts:
	giraph-gremlin/pom.xml
	gremlin-archetype/gremlin-archetype-dsl/pom.xml
	gremlin-archetype/gremlin-archetype-server/pom.xml
	gremlin-archetype/gremlin-archetype-tinkergraph/pom.xml
	gremlin-archetype/pom.xml
	gremlin-console/bin/gremlin.sh
	gremlin-console/pom.xml
	gremlin-core/pom.xml
	gremlin-dotnet/pom.xml
	gremlin-dotnet/src/Gremlin.Net/Gremlin.Net.csproj
	gremlin-dotnet/src/pom.xml
	gremlin-dotnet/test/pom.xml
	gremlin-driver/pom.xml
	gremlin-groovy-test/pom.xml
	gremlin-groovy/pom.xml
	gremlin-javascript/pom.xml
	gremlin-javascript/src/main/javascript/gremlin-javascript/package.json
	gremlin-python/pom.xml
	gremlin-server/pom.xml
	gremlin-shaded/pom.xml
	gremlin-test/pom.xml
	gremlin-tools/gremlin-benchmark/pom.xml
	hadoop-gremlin/pom.xml
	neo4j-gremlin/pom.xml
	pom.xml
	spark-gremlin/pom.xml
	tinkergraph-gremlin/pom.xml";non_debt
Merge branch 'dev' into website;non_debt
TOBAGO-1633: TS refactoring: ts-lint;non_debt
For #673: add AbstractBaseSQLParsingEngineTest;non_debt
Assert entire graph after deserialization.;non_debt
"CLOUDSTACK-4539: [VMWARE] vmware.create.full.clone is set to true in upgraded setupdefault nature of vms are full clone
Description:
    Set the criterion for overriding/preserving the vmware.create.full.clone
    flag so that if past version deployments have any deployments (data centers),
    this flag will be set to false. Else, it will be set to true.
    The earlier criterion to set this flag was based on the CS version numbers,
    but that is not a good business logic to serve as a basis to set the flag.";non_debt
fix crash when comparing supercolumns (since they cannot be sorted by time);non_debt
# ignite-648: Implemented.;non_debt
demo: prepare importConstants;non_debt
Attempt to migrate from hsql to Derby (hsql should no longer be needed, but still is possibly);non_debt
# GG-9208 minor;non_debt
java doc;non_debt
GUACAMOLE-47: Store remote address and hostname within Credentials.;non_debt
DISPATCH-1439 - Additional fix to failing test system_test_one_router;non_debt
Switch to whitelisted action potiuk/cancel-workflow-runs;non_debt
[FLINK-11719] Factor HeartbeatManager creation out into separate methods;non_debt
Provide some detail on configuring XA datasources;non_debt
Merge branch 'APEXCORE-349' of https://github.com/davidyan74/incubator-apex-core;non_debt
#1172, fix test case;non_debt
Updated to rhino-1.7.10 (from +rhino-1.7.7.2);non_debt
Automate release branch cut process;non_debt
61184: SystemML Engine Enhancements - added help for l2svm;non_debt
"make TokenMetadata.relocatingTokens a ConcurrentMap
patch by jbellis reviewed by brandonwilliams for CASSANDRA-5634";non_debt
GEODE-2788 Document defn of pool attr socket-connect-timeout (#798);non_debt
AMBARI-8336. Add Security State to Ambari database. (Robert Levas via rnettleton);non_debt
Merge branches 'master' and '0.16-dev' of https://git-wip-us.apache.org/repos/asf/incubator-weex into wip-us-master;non_debt
bug 10811: public_hostname and public_ipv4 are set same as that of local_hostname, local_ipv4 only for Basic network;non_debt
"Merge pull request #445 from jlowin/sql_params
Use SQL params in DBApiHook";non_debt
"[FLINK-6489] [shell scripts] Remove local mode from Windows start-local.bat
Instead, this uses 'start' to start JobManager and TaskManager background processes.";non_debt
GROOVY-5980: Finally executes twice on NPE while casting method result;non_debt
HADOOP-8500. Fix javadoc jars to not contain entire target directory.;non_debt
"TOBAGO-1842 Wrong content if using tc:tabGroup with tc:style
* add to QUnitTests";non_debt
"[hotfix] [docs] Update checkstyle version in documentation
This closes #5061";non_debt
"DRILL-7696: EVF v2 scan schema resolution
Provides the mechanism to resolve the scan schema from a
projection list, provided schema, early reader schema and
actual reader schema.";non_debt
"Try to fix test cover. (#2331)
* Try to fix test cover.
* Update .travis.yml
* Set for test only
* Try again
* Try new setting.";non_debt
reformat the code in gce config.sh;non_debt
moving DruidCoordinatorSegmentKiller class out of DruidCoordinator;non_debt
"Update Maven SCM information
This commit updates the Maven SCM definitions in the top level POM to
point to the new Git repository location in preparation for a 2.12.1
release";non_debt
Add javadoc and tests for Contains.;non_debt
AMBARI-16649. RegionServer and Nimbus start failed on secure cluster due to Ranger stack changes (gborad via srimanth);non_debt
"Merge pull request #6917 from terrymanu/dev
 Refactor SpringNamespaceTest with data source and rules";non_debt
"THRIFT-2340 Generated server implementation does not send response type EXCEPTION on the Thrift.TApplicationExceptionType.UNKNOWN_METHOD exception
Patch: Tomasz A. Biczel";non_debt
PHOENIX-4277 Treat delete markers consistently with puts for point-in-time scans;non_debt
Update support.md;non_debt
[FLINK-1956] [streaming] Proper opening of rich windowfunctions;non_debt
Pass catched exception to the throwing exception;non_debt
"Fix non-reproducible output of the compiler for closure shared variables
This commit fixes the variable scope collector, to make sure that the collected variables
are always collected _in the same order_. Without this, the compiler may generate different
bytecode for the same sources. The problem is that if the bytecode is used as a cache key,
like in Gradle, the same sources producing different bytecode becomes an issue.";non_debt
HIVE-7561 - StarterProject: Move from assert to Guava Preconditions.* in Hive on Spark (Chao via Brock) [Spark Branch];non_debt
"[SPARK-32292][SPARK-32252][INFRA] Run the relevant tests only in GitHub Actions
### What changes were proposed in this pull request?
This PR mainly proposes to run only relevant tests just like Jenkins PR builder does. Currently, GitHub Actions always run full tests which wastes the resources.
In addition, this PR also fixes 3 more issues  very closely related together while I am here.
1. The main idea here is: It reuses the existing logic embedded in `dev/run-tests.py` which Jenkins PR builder use in order to run only the related test cases.
2. While I am here, I fixed SPARK-32292 too to run the doc tests. It was because other references were not available when it is cloned via `checkoutv2`. With `fetch-depth: 0`, the history is available.
3. In addition, it fixes the `dev/run-tests.py` to match with `python/run-tests.py` in terms of its options. Environment variables such as `TEST_ONLY_XXX` were moved as proper options. For example,
    which is consistent with `python/run-tests.py`, for example,
4. Lastly, also fixed the formatting issue in module specification in the matrix:
    which incorrectly runs build/test the modules.
### Why are the changes needed?
By running only related tests, we can hugely save the resources and avoid unrelated flaky tests, etc.
Also, now it runs the doctest of `dev/run-tests.py` properly, the usages are similar between `dev/run-tests.py` and `python/run-tests.py`, and run `network-common`, `network-shuffle`, `launcher` and `examples` modules too.
### Does this PR introduce _any_ user-facing change?
No, dev-only.
### How was this patch tested?
Manually tested in my own forked Spark:
https://github.com/HyukjinKwon/spark/pull/7
https://github.com/HyukjinKwon/spark/pull/8
https://github.com/HyukjinKwon/spark/pull/9
https://github.com/HyukjinKwon/spark/pull/10
https://github.com/HyukjinKwon/spark/pull/11
https://github.com/HyukjinKwon/spark/pull/12
Closes #29086 from HyukjinKwon/SPARK-32292.";non_debt
Add SI postfixes to mod_generator;non_debt
No point including state in message it is fixed here.;non_debt
"Clear up for JENA-498 
Per request creation of an HttpClient is still the default due to lock-up when recycled.";non_debt
add uml class diagram generated by objectaid;non_debt
TS-3030 Restore the autoreconf -if ...;non_debt
"Logging brooklyn-persister thread Jclouds messages in a separate file
When a server with persistence to an object store enabled manages lots of
entities the Jclouds log is overwhelmed by messages logged from the
brooklyn-persister thread (in one case logging at a rate of ~ half a
million lines every four minutes).
The appender added in this commit alleviates - a little! - this logging
overload.
Anecdotal measurements of the ratio between the persister log and jclouds
log sizes, with EmptySoftwareProcess entities:
0 entities: persister log 0.01 times size of jclouds log
1 entity: 0.36
5 entities: ~1.13
10 entities: 1.75
50 entities: 8.6";non_debt
"KAFKA-8384 Leader election command integration tests (#6880)
This patch adds test cases for the leader election command added in KIP-460.";non_debt
[hotfix] [tests] Fix instability in TimestampITCase;non_debt
"[BEAM-2166] Split Coder's encode/decode methods into two methods depending on context.
This closes #2871";non_debt
resolve discovery load order and compile warning problem;non_debt
"Use tobago-dropdown only for parents of commands, not for ""normal"" links
TOBAGO-1633: TS refactoring";non_debt
chore(deps): improved dependabot config;non_debt
TOBAGO-1633: TS refactoring: sheet scroll pos, using json for hidden;non_debt
"STORM-2533 Visualization API returns ""spout"" for system components
* also fixed STORM-2534 Visualization API missing stats/instances for ""system"" components
* one thing which should be fixed in issue description is ""__system"" shouldn't be shown";non_debt
Wire CSV into Lang as well.;non_debt
Merge remote-tracking branch 'origin/master' into USERGRID-174;non_debt
[HUDI-920] Support Incremental query for MOR table (#1938);non_debt
[WIP] JAV-349 HeaderProcessor parameter change to HttpServletRequest;non_debt
Merge remote-tracking branch 'remotes/origin/gg-8872' into sprint-27;non_debt
Closing out of date PRs. This closes #95. This closes #96.;non_debt
addBatch();non_debt
Fix versionnumber format and add -dev suffix.;non_debt
Updated CHANGELOG.md;non_debt
HAWQ-495. Check null cond for explain analyse;non_debt
fix for TomcatServerSoftlayerLiveTest;non_debt
"TSocketPool changes
Summary: 1] Added empty constructor
         2] Added function to set server list
         3] Made getServers return by ref
         4] Made list of servers be a list of pointers
         The last change is so that someone can pass in the list of servers and rely on TSocketPool to change the failure time directly on the TSocketServer object
Reviewed By: aditya
Test Plan: Ran with a test search server
Revert: OK
DiffCamp Revision: 9529";non_debt
"Timeout of script execution in Gremlin Server is cancelled property #353
Failed script evaluation in Gremlin Server now triggers the cancel of the process attempting to timeout the script if it were to run too long.";non_debt
[BEAM-5389] fix the checksum assertion in the TfIdf IT;non_debt
This closes pull request #143. Thanks Ivan for the contribution;non_debt
Merge branch 'master' of bitbucket.org:malhar/core;non_debt
"Merge pull request #396 from zliu41/master
Turn on mapreduce output compression by default";non_debt
Fix a bug in the unit test.  It was not invoking the route.;non_debt
Use parameterized tests to lessen repetitive assertions;non_debt
AMBARI-19702. Switch Pig default engine to tez in HDP 2.6 (Daniel Dai via alejandro);non_debt
Fixing the assemblies to say project.version instead of version to stop '2.4.1' leaking through from the JVM properties. Also making it project.artifactId while I'm doing this. ;non_debt
"[MXNET-360]auto convert str to bytes in img.imdecode when py3 (#10697)
* change to friendly error message
* fix lint
* fix lint
* fix lint
* update raise message";non_debt
HADOOP-10527. Fix incorrect return code and allow more retries on EINTR. Contributed by Kihwal Lee.;non_debt
[CXF-3498] Starting working on wadltojava tool;non_debt
Chunk JVM support;non_debt
"Removed kettle related code and refactored
Removed carbonplugins
Added back method
Fixed test
Fixed test";non_debt
"Support auth cookies with : characters
The parts of a couchdb authentication cookie are separated by
colons. One of these parts can contain colons and, more rarely, runs
of colons. The string:tokens function silently drops any empty token,
thus giving a spurious failure for valid input. The fix changes this
mechanism to one that losslessly decodes this part.
COUCHDB-1607";non_debt
"CLOUDSTACK-6535: IAM:MS:API createVMSnapshot doesn't preserve access
rights.";non_debt
[FLINK-20129][docs] Add raw format link to index.zh.md;non_debt
Moved class to support;non_debt
MAPREDUCE-4427. Added an 'unmanaged' mode for AMs so as to ease development of new applications. Contributed by Bikas Saha.;non_debt
HAWQ-1485. fix exception of decryptPassword twice in lookupResource();non_debt
[AIRFLOW-4084] fix ElasticSearch log download (#5177);non_debt
Use data motion service to implement copy template.;non_debt
ignoring test output dirs;non_debt
Upgrade Spring Cloud Netflix to version 1.3.5.RELEASE;non_debt
"fix MobileNetV2 structure according to 1801.04381 v3 (#10603)
* fix net structure according to 1801.04381 v3. the struct is:
input shape     stride  output shape
224x224x3       2       112x112x32
112x112x32      1       112x112x16
112x112x16      2       56x56x24
56x56x24        1       56x56x24
56x56x24        2       28x28x32
28x28x32        1       28x28x32
28x28x32        1       28x28x32
28x28x32        2       28x28x64
14x14x64        1       14x14x64
14x14x64        1       14x14x64
14x14x64        1       14x14x64
14x14x64        1       14x14x96
14x14x96        1       14x14x96
14x14x96        1       14x14x96
14x14x96        2       7x7x160
7x7x160         1       7x7x160
7x7x160         1       7x7x160
7x7x160         1       7x7x320
7x7x320         1       7x7x1280
7x7x1280        _       1x1x1280
1x1x1280        _       1x1xk
* relu -> relu6 in MobileNetV2";non_debt
HADOOP-7789. Minor edits to add CHANGES.txt and yarn-default.xml to the site.;non_debt
Code improvements #112;non_debt
AVRO-2732: Fix openjdk changes by using stretch base image (#809);non_debt
fix: Modify details;non_debt
CLOUDSTACK-6694: WIP: Add front-end for internal LB subselect;non_debt
[WEEX-244][android]Weex Android Support W3c Force Api;non_debt
SOLR-6103: Test mult-valued DateRangeField (thanks Varun Thacker);non_debt
[CXF-4096] a robust in-only option with WS-A;non_debt
CAMEL-1073 Applied patch with thanks to William;non_debt
porting the user activity from the Tobago 1.0.x demo to trunk.;non_debt
HBASE-1871 Wrong type used in TableMapReduceUtil.initTableReduceJob();non_debt
"Prefer values from old tree when merging, COUCHDB-968
This commit represents a substantial refactor of the key tree merging
logic, some of which is not strictly necessary for the resolution of
COUCHDB-968.
Two etap test cases checking the ability to merge in a non-linear tree
are removed because the functionality is no longer supported.  CouchDB
only ever merged a linear revision history into an existing revision
tree.";non_debt
Make sure we can also read jakarta persistence.xml by default;non_debt
Upgrade Chronicle Queue to version 4.6.77;non_debt
Sync deps;non_debt
"Update Bazel protobuf rules (#3271)
* update genproto bzl
* no-op";non_debt
[KARAF-2549] Add pax-cdi features repository;non_debt
"Merge pull request #7011 from markflyhigh/py-fix-py3-2
[BEAM-5953] Fix DataflowRunner in Python 3 - type errors";non_debt
Merge branch 'cassandra-3.0' into cassandra-3.11;non_debt
Upgrade Artemis to version 2.7.0;non_debt
Merge remote-tracking branch 'origin/master' into cloud-agent-with-openvswitch;non_debt
"Move to Java 11 for building and running (#4706)
* Move to use JDK11 containers for running
* Switch to JDK11 for build
* Remove timestamps from generated code to work with JDK11
* Update gatling to support JDK11
* Fix up gradle tests to work with later version and JDK11
* Allow for gradle to target correct JDK";non_debt
HADOOP-7975. Add LZ4 as an entry in the default codec list, missed by HADOOP-7657 (harsh);non_debt
fix syslogging for blocky;non_debt
AMBARI-3784. Host page UI tweaks. (Jeff Sposetti via yusaku);non_debt
Fixing SOURCE_QUERYBASED_LOW_WATERMARK_BACKUP_SECS no default value (#1005);non_debt
new UI - Edit Global Settings- not to hide editable field and show readonly field until action returns success.;non_debt
fix init rpc request error;non_debt
Poke to update tests;non_debt
added property exceptions to ExceptionFactory.;non_debt
"[SQLLab] Fix the usage of Redux DevTools Enhancer (#1278)
* Fix the usage of Redux DevTools Enhancer
* Fix ESLint error";non_debt
"[GEODE-140]: QueryUsingFunctionContextDUnitTest.testQueriesWithFilterKeysOnPRWithRebalancing failed due to suspect string
Test was failing due to server being down before function executes
This is ""expected"" as it can occur based on this test.";non_debt
YARN-1474. Make schedulers services. (Tsuyoshi Ozawa via kasha);non_debt
need to update configuration;non_debt
CAMEL-6325: Add discardOnAggregationFailure option to aggregate EIP;non_debt
Update list of jars;non_debt
MAPREDUCE-6197. Cache MapOutputLocations in ShuffleHandler. Contributed by Junping Du;non_debt
[maven-release-plugin] prepare release v0.15.0-incubating-rc1;non_debt
This closes #159;non_debt
"TAJO-1140: Separate TajoClient into fine grained parts.
Closes #213";non_debt
CXF-6046: Enhance SwaggerFeature to support JAX-RS annotations. Added test cases (systests);non_debt
Fix verilog testcase (#1047);non_debt
Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/cxf;non_debt
"[FLINK-7318] [futures] Replace Flink's futures in StackTraceSampleCoordinator with Java 8 CompletableFuture
This closes #4431.";non_debt
Ticket #269: Connection permission check should actually check connections. Add generatedKey elements to generatorConfig.xml such that IDs are queried back after insert of users and connections.;non_debt
split columnClause to columnClause & selectClause for g4;non_debt
get owner for star select item.;non_debt
update core DDL + minimum reference data for deploying mifosx platform.;non_debt
checkstyle;non_debt
for #103 sharding-jdbc => sharding-jdbc-example.;non_debt
NUTCH-7. Relative links from identical(MD5) pages were treated incorrectly.;non_debt
Merge pull request #4428: Add unshaded configurations in the default profile;non_debt
[BEAM-7561] Validate correct directory matching in LocalFileSystemsTest;non_debt
Merge remote-tracking branch 'origin/master';non_debt
+ [ios] fix bug:IndicatorView will hide when show again;non_debt
Fix comments;non_debt
ACCUMULO-3213 Enable GC_FILE_ARCHIVE in MAC properties for ITs.;non_debt
HIVE-16116 : Beeline throws NPE when beeline.hiveconfvariables={} in beeline.properties (Rajesh Balamohan via Peter Vary);non_debt
Merge branch 'cassandra-3.11' into trunk;non_debt
Merge remote-tracking branch 'origin/sprint-1' into sprint-1;non_debt
"HBASE-16471 Region Server metrics context will be wrong when machine hostname contain ""master"" word (Pankaj Kumar)";non_debt
Don't interrupt threads in this test, just report thread leak errors. Should help get past the broken (?) freebsd jvm.;non_debt
"Merge branch 'TINKERPOP-1044-master'
Conflicts:
	gremlin-server/src/main/java/org/apache/tinkerpop/gremlin/server/handler/IteratorHandler.java
	gremlin-server/src/main/java/org/apache/tinkerpop/gremlin/server/handler/NioGremlinResponseEncoder.java
	gremlin-server/src/main/java/org/apache/tinkerpop/gremlin/server/handler/WsGremlinResponseEncoder.java";non_debt
brooklyn-rest-server: add org.apache package prefix;non_debt
"Fix build_ccache_wrappers: (#14631)
* Fix broken links
* Make it idempotent
fixes https://github.com/apache/incubator-mxnet/pull/13456
fixes https://github.com/apache/incubator-mxnet/issues/14117
fixes https://github.com/apache/incubator-mxnet/issues/11516";non_debt
SOLR-1602 - move XMLWriter to response;non_debt
"DDS-2100: apache common.cli GnuParser() doesn't check the number of
arguments for each option. Added a check for that otherwise
ClusterSetup() will throw ArrayOutoffBoundary exception.";non_debt
TOMEE-1434 wire users/roles in tomee embedded arquillian adapter;non_debt
Fixed ArrayIndexOutOfBoundsException;non_debt
AMBARI-7824. Slider View: Unable to create app when cluster is secured - keytab doesnt exist (srimanth);non_debt
merge from 1.1.0;non_debt
# ignite-51;non_debt
Fixing an issue with JsonMapObject parser not parsing an array of primitive values correctly;non_debt
Fix scary message about secondaries always being created at startup;non_debt
Use limit of 4GB for document PUT requests, instead of the MochiWeb default of 1MB. Closes COUCHDB-37.;non_debt
"Add Abnormal States Resolver interface and configuration item. (#1028)
The Abnormal States Resolver defines a generic interface to find and recover if the partition has any abnormal current states. For example,
- double masters
- application data out of sync
The interface shall be implemented according to the requirement.
The resolver is applied in the rebalance process according to the corresponding cluster config item. For example,
""ABNORMAL_STATES_RESOLVER_MAP"" : {
 ""MASTERSLAVE"" : ""org.apache.helix.api.rebalancer.constraint.MasterSlaveAbnormalStateReslovler""
}
The default behavior without any configuration is not doing any recovery work.";non_debt
"HADOOP-11007. Reinstate building of ant tasks support. Contributed by
Jason Lowe.";non_debt
Issue #1367: HdrHeap potential corruption;non_debt
"HBASE-19363 Tests under TestCheckAndMutate are identical
Remove testCheckAndMutateUsingNewComparisonOperatorInstead";non_debt
[hotfix] postgres issue when slice_id is missing;non_debt
Spurious commit, reverting gitignore change;non_debt
"[FLINK-17568][checkpointing] Fix the issue that task may consume input data after checkpoint barrier before checkpoint is performed for unaligned checkpoint
For unaligned checkpoint, task may consume data after the checkpoint barrier before performing checkpoint which leads to consumption of duplicated data and corruption of data stream. More specifically, when the Netty thread notifies the checkpoint barrier for the first time and enqueues a checkpointing task in the mailbox, the task thread may still in data processing loop and if it reads a new checkpoint barrier from a input channel it will not return to the mailbox and instead it will continue to read data until all data is consumed or we have a full record, meanwhile, the data after checkpoint barrier may be read and consumed which lead to inconsistency.
This commit fixes the problem by returning to mailbox each time a checkpoint barrier is processed by the task thread.";non_debt
fixed GROOVY-5408: JavaAwareCompilationUnit should have a constructor that allows to set transformLoader;non_debt
Add support for primitive types to RPC.;non_debt
"ARROW-11561: [Rust][DataFusion] Add Send + Sync to MemTable::load
This PR adds Send + Sync to the MemTable::load method to allow implementation of a `persist` method like Spark's Dataframe in an async function.
Closes #9448 from seddonm1/send-sync";non_debt
Update syntax of update-current-docs.sh CTR;non_debt
LUCENE-9509: Refine lucene/BUILD.md and top-level README (for newdevs) (#1835);non_debt
ENGR-1594  Refactored 'LocationUtils' to more appropriate place;non_debt
LUCENE-4452: test BlockPostings when only reading a subset of prox data;non_debt
"Merge pull request #1008 from junichi11/netbeans-1576-vardoc-cc
[NETBEANS-1576] PHP autocompletion partially broken";non_debt
add new logging servers;non_debt
"trying to remove webapp lib scanning from known libs
TOMEE-123: Eliminate webapp lib scanning from known libs";non_debt
"[SPARK-8654][SQL] Analysis exception when using NULL IN (...) : invalid cast
In the analysis phase , while processing the rules for IN predicate, we
compare the in-list types to the lhs expression type and generate
cast operation if necessary. In the case of NULL [NOT] IN expr1 , we end up
generating cast between in list types to NULL like cast (1 as NULL) which
is not a valid cast.
The fix is to find a common type between LHS and RHS expressions and cast
all the expression to the common type.
This patch had conflicts when merged, resolved by
Committer: Michael Armbrust <michael@databricks.com>
Closes #9036 from dilipbiswal/spark_8654_new.";non_debt
one more catch, func not var;non_debt
GUACAMOLE-670: Merge changes correcting conflicting versions of SLF4J.;non_debt
Merge branch 'master' of github.com:apigee/usergrid-stack-internal;non_debt
"Move all SDK client tests into integrationtests (FINERACT-1209)
And run the against localhost instead of https://fineract.dev";non_debt
"added batik jar related stuff.
peter";non_debt
Bug 52936 - JMS Publisher : Support sending of JMS Object Messages;non_debt
Merge branch 'prop_2_item.MLHR-1011' into ip_port.MLHR-1019;non_debt
GROOVY-7476 - Fix JSON parsing error when escape character is read at the end of the buffer (closes #46);non_debt
Changing mailinglist address to apache one;non_debt
[AIRFLOW-7089] Create kill method in AbstractDagFileProcessorProcess (#7765);non_debt
Make columns that return an exception on click unsortable. (#3417);non_debt
HBASE-6831. [WINDOWS] HBaseTestingUtility.expireSession() does not expire zookeeper session;non_debt
"Merge pull request #528 from mifoscontributer/mifosx-611
Add data validations for bulkloanreassignment";non_debt
SOLR-10373: Replace usage of #ANY in replica with a count of 0;non_debt
"Fix logic for determining DagRun states
Previously, DagRuns failed if any task failed and succeeded if all
tasks succeeded or were skipped. However, because of trigger behaviors,
that�۪s not right ��� a task can fail and another task can start up with
an ���on failed�۝ trigger.
This changes the logic to consider three termination cases:
1. Failure. If any of the root tasks fail, the dagrun fails. This is
because there is no possibility of any ���on failure�۝ trigger coming off
a root task.
2. Success. If ALL of the root nodes succeed or skip, the dagrun
succeeds. This means there can be upstream failures as long as failure
triggers are respected.
3. Deadlock ��� A dag run is deadlocked when no action is possible.
This is determined by the presence of unfinished tasks without met
dependencies. However, care must be taken when depends_on_past=True
because individual dag runs could *look* like they are deadlocked
when they are actually just waiting for earlier runs to finish.
To solve this problem, we evaluate deadlocks in two ways. First,
across all dagruns simultaneously (to account for situations with
depends_on_past=True). Second, in each individual dagrun (but only
if there are no depends_on_past relationship).";non_debt
Correct logic in travis build to ensure that deploy is only done when commit/push to master.;non_debt
bazel_configure.py will generate a scripts/env_exec.sh exporting the environment variables for bazel genrules to use - especially needed for yaml-cpp;non_debt
Merge branch 'ignite-3477-master' of https://github.com/gridgain/apache-ignite into ignite-3477-master;non_debt
fix text rect.;non_debt
This closes #1156;non_debt
Merge branch '1.0.0' into 1.1.0;non_debt
Adding feedback status and comments to anomaly details (#1584);non_debt
ACCUMULO-1595 remove mlock config entry;non_debt
"THRIFT-1277 Node.js serializes false booleans as null
Patch: Henrique Mendonca";non_debt
Merge remote-tracking branch 'origin/master';non_debt
change import for ShardingStatement.java;non_debt
HIVE-9810: Prep object registry for multi threading (Gunther Hagleitner, reviewed by Vikram Dixit K);non_debt
Merge remote-tracking branch 'remotes/origin/sprint-23' into gg-8373;non_debt
"[NETBEANS-781] Adds Maven coordinates for Ant libs
This is just the first part of a fix for NETBEANS-781.
In the end we will switch to Ant 1.10.4 which is alpha now.";non_debt
"[CXF-2501] Detect where slf4j is logging and try and do the same
Also fix version of slf4j-api jar being picked up";non_debt
HIVE-23235:Checkpointing in repl dump failing for orc format (Aasha Medhi, reviewed by Pravin Kumar Sinha);non_debt
AMBARI-332. Modify nav to easily switch between cluster management and monitoring (Contributed by Yusaku);non_debt
[maven-release-plugin] prepare release jena-3.7.0-rc2;non_debt
"Merge pull request #49 from usergrid/package-rename-only
Package rename only";non_debt
This closes #419;non_debt
"STORM-1520 Nimbus Clojure/Zookeeper issue (""stateChanged"" method not found)
* fix a bug which passes wrong type of parameter to ClusterStateListener.stateChanged()
  * we passed ConnectionState from Curator which method needs storm's ConnectionState";non_debt
Fix total_rows for _design_docs handler;non_debt
added more stringent validation rules around the host and the address;non_debt
HBASE-9008 Reenable TestReplicationKillSlaveRS.killOneSlaveRS;non_debt
ACTIVEMQ6-4 Rename HornetQ* classes to ActiveMQ*;non_debt
Merge 3327 from 0.8;non_debt
CAMEL-16068 - Use HeadBucketRequest to check if a bucket exists or not for consumer too, thanks fyi for the suggestion;non_debt
HDFS-4557. Fix FSDirectory#delete when INode#cleanSubtree returns 0.  Contributed by Jing Zhao;non_debt
Fix the failing tests;non_debt
"Bug 43450 - Listeners/Savers assume SampleResult count is always 1
fixed Generate Summary Results";non_debt
"TOBAGO-1077: Posibility to select text inside of the sheet
- removing the ""mouseup"" listener, because the ""mouseup"" event will be called before the ""click"" event: This results in an undefined mouse position in any case.";non_debt
SOLR-3355: fix bug around null shard / collection in statistics;non_debt
Merge branch 'cassandra-3.X' into trunk;non_debt
Review comment updates.;non_debt
Add app for demonstration of simple JBossClustering (though you'd only know it by checking the log files).  Updated SimpleTomcatApp to work with recent changes.;non_debt
[CXF-3330] Escaping literal pluses in URITemplate;non_debt
HADOOP-1479 Fix NPE in HStore#get if store file only has keys < passed key.;non_debt
"[FLINK-19720][table-api] Introduce new Providers and parallelism API
This closes #13694";non_debt
"Revert ""HBASE-12471 Task 4. replace internal ConnectionManager#{delete,get}Connection use with #close, #createConnection (0.98, 0.99)"" ADDENDUM";non_debt
CAMEL-8116: fix truncation logic;non_debt
HIVE-12820: Remove the check if carriage return and new line are used for separator or escape character (Aihua Xu, reviewed by Yongzhi Chen and Chaoyu Tang);non_debt
[BEAM-6346] Inspect the docker container state;non_debt
loan txn, repayment. saving txns mifosx-1015;non_debt
BROOKLYN-193 Add configuration for skipping invalid config values during rebind;non_debt
"Convert PipelineOptions to Output Type Pre-validation
Converting to the target class prior to validation ensures that all of
the properties that are required (via the @Validation.Required
annotation) and any other invocations on methods in the target class are
available to the ProxyInvocationHandler before the validation logic is
executed.
----Release Notes----
-------------
MOE_MIGRATED_REVID=97233484";non_debt
adding correct artifact path in samples/applications/single-cartridge/scripts/common/add-network-partition.sh;non_debt
"Make sure node is deleted at end of test so other test doesn't fail if
run after it.";non_debt
HIVE-3101. Drop table rollback hook always called. (Ransom Hezhiqiang via egc);non_debt
Generate alerts_types.xml document along with other xml docs.;non_debt
added comments clarifying the use of the attributes;non_debt
"[SPARK-19859][SS] The new watermark should override the old one
## What changes were proposed in this pull request?
The new watermark should override the old one. Otherwise, we just pick up the first column which has a watermark, it may be unexpected.
## How was this patch tested?
The new test.
Closes #17199 from zsxwing/SPARK-19859.";non_debt
"Revert ""[iOS] Update iOS error code. (#2522)"" (#2532)
This reverts commit 223d05f31890cdf3d55ee5fcf62559667bcec26d.";non_debt
# IGNITE-45 - Examples;non_debt
Fixed #274.;non_debt
"Revert ""CLOUDSTACK-5674: Few fixes""
This reverts commit e6b93b0a6824a3f2845fb42596c04b348ae147e2.";non_debt
Put file that is apparently referenced from some spring configs back;non_debt
replace bugzilla by bug;non_debt
ignite-341 - tests 3;non_debt
Adjust message;non_debt
"IGNITE-3549: IGFS: Switched ""accessTime"" and ""modification"" time in setTimes() method. This closes #1830.";non_debt
# GG-8491 - Client task execution;non_debt
SAMZA-287: Expose config via AM REST interface;non_debt
HAWQ-1214. Remove resource_parameters;non_debt
build.xml first test commit;non_debt
tidied up detection of stale subscriptions across a network;non_debt
"KAFKA-5668 fetch across stores in CompositeReadOnlyWindowStore & CompositeReadOnlySessionStore
Fix range queries in `CompositeReadOnlyWindowStore` and `CompositeReadOnlySessionStore` to fetch across all stores (was previously just looking in the first store)
Closes #3685 from dguy/kafka-5668";non_debt
"[FLINK-2062] [core] Fix names of memory size config parameter
This still evaluates the old parameter, if the old one is set and the new one is not set.
This closes #703";non_debt
"Revert ""AMBARI-19338 AM sizing for LLAP - min container size changes (dsen)""
This reverts commit d256e82e628a6ba86acd17a21c2b925a7b3ae9c5.";non_debt
Bumped version to 1.22.0-incubating-SNAPSHOT (#925);non_debt
Scalar: add generic rounding.;non_debt
HIVE-3253 : ArrayIndexOutOfBounds exception for deeply nested structs (Thejas Nair via Ashutosh Chauhan);non_debt
"[CXF-3790, CXF-3789] Remove some no-op crufty code
Patches from Gary Gregory applied";non_debt
add tests for isInjectable();non_debt
TOMEE-1855 default shouldnt skip injections in all web components;non_debt
Merge branch 'cassandra-2.1' into cassandra-2.2;non_debt
merge from 0.8;non_debt
[KARAF-4087] Upgrade to Aries Subsystem 2.0.4;non_debt
[KARAF-1649] Upgrade to JPA final;non_debt
Add tests in KafkaSourceTest;non_debt
add shardingProperties;non_debt
"[FLINK-8234][flip6] Cache JobExecutionResult in Dispatcher
- Introduce new JobExecutionResult used by JobMaster to forward the information in
  the already existing JobExecutionResult.
- Always cache a JobExecutionResult. Even in case of job failures. In case of
  job failures, the serialized exception is stored additionally.
- Introduce new methods to RestfulGateway to allow retrieval of cached
  JobExecutionResults
[FLINK-8234][flip6] Rename JobExecutionResult -> JobResult
[FLINK-8234][flip6] Update MiniClusterJobDispatcher
Do not store job failure exception in a separate field because the JobResult
already contains the exception.
[FLINK-8234][flip6] Make JobResult Serializable
[FLINK-8234][flip6] Add Javadoc to JobResult builder
[FLINK-8234][flip6] Add Javadoc to JobResult#serializedThrowable
[FLINK-8234][flip6] Wrap JobResults in SoftReferences
Wrap instances of JobResult stored in JobExecutionResultCache in SoftReferences
so that the GC can free them according to memory demand.
[FLINK-8234][flip6] Fix checkstyle violations
[FLINK-8234][flip6] Add Javadoc to JobResult
This closes #5184.";non_debt
"Allow reduce=false parameter in map-only views.
Patch by Jason Smith.
Closes COUCHDB-881.";non_debt
IGNITE-4717 VisorClearTask minor fix.;non_debt
"Add checkstyle rules about imports and empty lines between members (#6543)
* Add checkstyle rules about imports and empty lines between members
* Add suppressions
* Update Eclipse import order
* Add empty line
* Fix StatsDEmitter";non_debt
Fixed pulsar-spark pom version (#330);non_debt
Dashboard IE8 fixes;non_debt
[KARAF-6956] Upgrade to Spring 5.2.9.RELEASE_2;non_debt
CoGroup transforms for schemas.;non_debt
Use str.join;non_debt
[BEAM-9857] Update Spark runner page to include Docker job server;non_debt
KYLIN-1234 enable ACL check on query;non_debt
HADOOP-13042. Restore lost leveldbjni LICENSE and NOTICE changes.;non_debt
[KARAF-3709] The assembly builder should generate mvn urls for startup bundles;non_debt
"Revert ""AMBARI-21744. package_regex in get_package_from_available() can match wrong pkg (dlysnichenko)""
This reverts commit aa4807ca3a850d3275b11c9ee41a0cb6c5328b9c.";non_debt
"Merge branch 'ignite-db-wal' of https://github.com/gridgain/apache-ignite into ignite-gg-11010
Conflicts:
	modules/core/src/main/java/org/apache/ignite/internal/managers/discovery/GridDiscoveryManager.java";non_debt
SOLR-10480: fix offset param handling in JSON Facet API;non_debt
CXF-2785 Base64Utils.decode should handle/wrap all exception types, applied patch with thanks to Stan;non_debt
AMBARI-13430 Incorrect error count on Ranger userInfo tab. (ababiichuk);non_debt
AMBARI-15158. Resource Manager fails to start: IOException: /ats/active does not exist. (stoader);non_debt
add extra assert to consumer advisory test;non_debt
HADOOP-10563. Remove the dependency of jsp in trunk. Contributed by Haohui Mai.;non_debt
english javadoc for config module;non_debt
"For some reason 3.3.7 no longer grabs but 3.3.8 does.
Might be related to some dependency conflict in our more recent versions. It doesnt seem like there is anything inherently wrong with DependecyGrabber itself (certainly no code has changed there). CTR";non_debt
"[ZEPPELIN-1314] dump out the R command
This PR replaces https://github.com/apache/zeppelin/pull/1309/
Closes #1531 from snowch/snowch-patch-1 and squashes the following commits:
f5f7a70 [Chris Snow] use toString() method of CommandLine for logging
09a6d23 [Chris Snow] added missing semi-colon for statement
25e8a29 [Chris Snow] [ZEPPELIN-1314] dump out the R command";non_debt
"[SYSTEMML-2388] Fix IPA inlining of functions w/o bound returns
The IPA rewrite for inlining small functions led to invalid hops in case
of special cases of functions w/o returns and remaining transient writes
from a previously existing sequence of statement blocks that were
combined into a single block via rewrites.";non_debt
allow headers to vary during paging;non_debt
CAMEL-2653: Added unit test;non_debt
"GROOVY-5988: Reference to for-loop parameter leads to type ""Object"" instead of declared type";non_debt
GG-8491 - Disabled failing test;non_debt
HIVE-20932: Adding Vectorized support for Druid Storage Handler. (Slim Bouguerra, via Gopal V);non_debt
remove DataSourceConfig;non_debt
Fix graph default tooltip in calendar.;non_debt
local.ini must be comments only;non_debt
Merge branch '1.7' into 1.8;non_debt
More fixes to build poms in preparation for release;non_debt
gg-7779 review;non_debt
added the rest of the amq commands;non_debt
"[TE] copy changes for self serve onboarding (#2869)
* TE copy changes for self serve onboarding";non_debt
"[CODEGEN] use charp for voidp (#753)
* fx";non_debt
"Merge pull request #12428 from ibzib/flink-version
Update Flink Version Compatibility table";non_debt
misc updates;non_debt
"-- Allow specification of socket timeouts in thrift python socket code
Reviewed By: slee";non_debt
Add link to the TokenStream consumer workflow;non_debt
new archive.apachecon.com certificate;non_debt
Use 2d points too in some of these tests (1d has optimized merge, for example);non_debt
"[REEF-1766] Updated Avro from 1.7.7 to 1.8.1 for entire REEF.
JIRA: [REEF-1766](https://issues.apache.org/jira/browse/REEF-1768)
This closes  #1285";non_debt
Creation of zeppelin-interpreter submodule;non_debt
Merge branch 'two-dot-o' of https://github.com/usergrid/usergrid into two-dot-o;non_debt
removed window id;non_debt
"Call setEventHandler(null) on the jaxb unmarshaller which actually
results in a decent EventHandler being setup.  This exposed some bugs in
some of the test cases and in the CORBA binding.";non_debt
"GEODE-6053: Parameterized Queries fixed (#2859)
* Parameterized queries were throwing UnsupportedOperationExceptions.
	* This was because of trying to pre-compute values for join optimization.
	* When the query was parameterized it is not possible to compute these values and hence these exceptions are thrown
	* The fix was to prevent this computation when it is not needed or not possible.";non_debt
modify cases for tableToken;non_debt
"[FLINK-3123] [kafka] Allow custom specific start offsets for FlinkKafkaConsumer
This closes #2687.";non_debt
fix nimbus_test.clj;non_debt
Merge branch 'dev-3.0.0' of https://github.com/ecomfe/echarts into dev-3.0.0;non_debt
fixed up IO section of docs for @dkuppitz and added a new adjacency-list graphic.;non_debt
"Merge pull request #195 from amuramoto/master
Added methods to assign and remove permissions and roles to JS and node SDKs";non_debt
fix post-ByteBuffer hint delivery.  patch by Sylvain Lebresne reviewed by jbellis for CASSANDRA-1672;non_debt
"[CARBONDATA-856] Alter Table - TABLE RENAME feature documentation
The documentation for Table rename as part of the alter table feature.";non_debt
"Upgrade pex (#2314)
* upgrade pex in place";non_debt
Camel-Git: Regen docs and builders;non_debt
Add routing database only feature;non_debt
# IGNITE-709 Decrease dispersion of test results.;non_debt
Fix build after adding diagnostic stuff;non_debt
PHOENIX-4175 Convert tests using CURRENT_SCN to not use it when possible;non_debt
Fixed a bug in QueryTransformOps that incorrectly added default graphs as named graphs;non_debt
ignite-gg-12138 stop nodes after test + small test refactoring;non_debt
Log test error when assert line number after add copyright head.;non_debt
# gg-9470-rename;non_debt
"Added support for IBM zSystems architecture (s390x)
patch by Meerabo Shah reviewed by jasobrown for CASSANDRA-11054";non_debt
SOLR-8295: Fix NPE in collapse QParser when collapse field is missing from all docs in a segment;non_debt
STREAMS-105 | Code review feedback;non_debt
"ZOOKEEPER-3532: Provide a docker-based environment to work on a known OS
Just run dev/docker/run.sh and you will have a Linux environment with all that is needed to build ZooKeeper, even on MacOs.
The original idea patch was from Sijie Guo (sijie), Apache BookKeeper project.
The script creates a local image that accesses the local filesystem with the current user (UID), this way the container can work on local files without problems of ownership of files.
Closes #1075 from eolivelli/fix/docker-env";non_debt
This closes #662;non_debt
Camel-Support: Fixed CS;non_debt
SOLR-998: current lucene libs, SolrIndexReader introduction for FileFloatSource fix;non_debt
The latest JDK on Mac seems to throw a timeout exception instead of a connect exception.;non_debt
commit sample ii cube;non_debt
sbin/spark-class* -> bin/spark-class*;non_debt
[KARAF-4787] Don't use the features-generate-descriptor inside our build;non_debt
"YARN-8706.  Allow additional flag in docker inspect call.
            Contributed by Chandni Singh";non_debt
Added setProperty(name, value, default) method: sets prop unless default, removes otherwise;non_debt
HIVE-8472: Add ALTER DATABASE SET LOCATION (Mithun Radhakrishnan, reviewed by Alan Gates);non_debt
"bug 12400
Show notice if no VMs are selected in port forwarding/load balancing
 -- prevent server call from being performed and 'infinite list' from
    being generated";non_debt
"HDFS-11008. Change unit test for testing parsing ""-source"" parameter in Balancer CLI. Contributed by Mingliang Liu";non_debt
"HBASE-19148 Reevaluate default values of configurations minor ADDENDUM2
Fix a description.";non_debt
[TE] Fix runtime problem of Node.class from org.w3c is not found (#1692);non_debt
"HDDS-356. Support ColumnFamily based RockDBStore and TableStore.
Contributed by Anu Engineer.";non_debt
LUCENE-3226: revert;non_debt
adding nimbuz dependency;non_debt
config to json;non_debt
Fixing startup error;non_debt
SugarLoader Traverser.a no longer grabs from SideEffects. B_O_Traverser extends O_Traverser.;non_debt
Put usage server under Spring;non_debt
"testing
added grayscale conversion to JAITest";non_debt
be conservative allocating objects up-front;non_debt
Merge remote-tracking branch 'origin/master';non_debt
JAV-382 bug fix, CompositeSwaggerGeneratorContext change to call sorted spi api;non_debt
rebase to spring changes;non_debt
Merge branch 'android-feature-20160607' into android-feature-20160706;non_debt
add compression when writing job state to sequence file;non_debt
Location inheritance: test removing values with nulls;non_debt
ARTEMIS-1866 Fixing QuorumResultWaitTest;non_debt
added a non-null bearing toString() for RepeatStep.;non_debt
"LUCENE-8503: Call #getDelegate instead of direct member access during unwrap
Filter*Reader instances access the member or the delegate directly instead of
calling getDelegate(). In order to track access of the delegate these methods
should call #getDelegat()";non_debt
HBASE-2495 Allow record filtering with selected row key values in HBase Export;non_debt
some notes on tidying the REST API;non_debt
TS-3122: Add support for hugepages on Linux;non_debt
taskinfo: json data => serializable data;non_debt
No need to flush the sink - the parser does that.;non_debt
request proper type from DBI instead of casting;non_debt
CAMEL-6064: Fixed WiraTap EIP onPrepare. Thanks to Scott Cranton for the patch.;non_debt
CLOUDSTACK-2875: change runlevel of cloud-passwd-srvr to remove error message at systemvm startup;non_debt
#GG-8028 - Tests WIP;non_debt
fix test;non_debt
SOLR-13634:move ResponseBuilderTest to same package as ResponseBuilder;non_debt
APEXMALHAR-2135 Upgrade Kafka dependency to 0.8.2.1;non_debt
Tweak geo-DNS display string;non_debt
"[SPARK-29363][MLLIB] Make o.a.s.regression.Regressor public
### What changes were proposed in this pull request?
- Removal of `private[ml]` modifier from `Regressor`.
- Marking `Regressor` as  `DeveloperApi`.
### Why are the changes needed?
Consistency with the rest of ML API as described in [the corresponding JIRA ticket](https://issues.apache.org/jira/browse/SPARK-29363).
### Does this PR introduce any user-facing change?
Yes, as described above.
### How was this patch tested?
Existing tests.
Closes #26033 from zero323/SPARK-29363.";non_debt
detailed doc about global pool layers in Gluon (#11832);non_debt
CAMEL-10004: PollEnrich now supports bridge error handler of the consumer, so the route error handler can react on caught exception during polling.;non_debt
MIFOSX-607 - capture client atendance in collection sheet;non_debt
HDFS-13964. RBF: TestRouterWebHDFSContractAppend fails with No Active Namenode under nameservice. Contributed by Ayush Saxena.;non_debt
Added more methods for loading/saving with new Hadoop API;non_debt
no message;non_debt
#ignite-738: move GridCacheQueryCommandHandler to new query API.;non_debt
"Merge branch 'feature/GEODE-2513-13' into develop
This closes #69";non_debt
LUCENE-7290: Add support for calculating bounds for intersections.;non_debt
TOMEE-936 adding in ear lib part jsf enrichments too to ensure jsf impl can be in ear libs;non_debt
HIVE-1366. inputFileFormat error if the merge job takes a different input file format than the default output file format (Namit Jain via Ning Zhang);non_debt
FELIX-2381: The default log exception renderer does not print inner exceptions anymore;non_debt
Merge branch '2.1-release' of https://git-wip-us.apache.org/repos/asf/usergrid into 2.1-release;non_debt
"TOBAGO-1368: Create a new theme which uses Bootstrap
- fix wait animation and error symbol
- using now glyphicons for that";non_debt
KYLIN-4103: Make the user string in granting operation of project is case insensitive;non_debt
Add a event count metrics;non_debt
Shuffle journal entry reading around so checks done before attempting to use the data.;non_debt
Integrated alerts with rest of CM.  Integration test in progress.;non_debt
"KYLIN-4370 Fix ""Table or view not found"" error when build cube with spark for JDBC source at step ""Build cube by Layer""";non_debt
"ARROW-7087: [Python] Metadata disappear from pandas dataset
Related to [ARROW-7087](https://issues.apache.org/jira/browse/ARROW-7087)
There is an unexpected behavior when we write a table from pandas dataset which contains metadata. They are replaced by pandas metadata.
Therefore, I concatenated schema metadata and pandas metadata before return the schema.
Closes #6127 from francois-blanchard/ARROW-7087_metadata_disappear_from_pandas and squashes the following commits:
99e558f31 <francois-blanchard> ARROW-7087:  Table Metadata disappear when we write a partitioned dataset";non_debt
JENA-1127: Seed the start of :predicate+ better.;non_debt
"Improve display of reproducer code in RexFuzzerTest for SqlStdOperatorTable.MULTIPLY
It was displayed as SqlStdOperatorTable.*, however mul(a, b) should be used";non_debt
"Prevent NPEs
General tidyup";non_debt
"Deprecate TeardownPolicy for Dataflow service
We are moving towards supporting only TEARDOWN_ALWAYS.";non_debt
"Fix broken CI.yml (#12454)
The PR #12417 broke CI.yaml accidentally. This PR fixes it.";non_debt
Rename half_close_flag to half_close_local_flag in Http2ClientSession;non_debt
Change to 1.0-m1, fix repos and fix Features service;non_debt
Bump vlsi-release-plugins: 1.61 -> 1.65;non_debt
AMBARI-21691 Config Group filter does not reflect all the config groups in the list. (atkach);non_debt
+ [ios] add generate deviceId file;non_debt
"Merge pull request #13611 from apache/release
Merge release to master";non_debt
HPACK: send back an error to the client when the index is invalid;non_debt
HDDS-1458. Create a maven profile to run fault injection tests. Contributed by Eric Yang.;non_debt
AMBARI-16038. Delete Service: After deleting Hive, ui keeps showing hive service for long time. (onechiporenko);non_debt
Add the MaxConditionCost option;non_debt
[maven-release-plugin] prepare for next development iteration;non_debt
"ARROW-7559: [Rust] Incorrect index check assertion in StringArray and BinaryArray
Closes #6180 from paddyhoran/string-array-bug and squashes the following commits:
286bf7fae <Paddy Horan> Fixed lints.
fd8a26b8c <Paddy Horan> Fixed bug in check in `StringArray` and `BinaryArray`";non_debt
HADOOP-11217. (Addendum to allow SSLv2Hello) Disable SSLv3 in KMS. (Robert Kanter via kasha);non_debt
revise checkstyle for #1573;non_debt
[KARAF-5835] Upgrade to maven-surefire-plugin 2.22.0;non_debt
refactor select statement 11th version;non_debt
fix(lines): fix unexpected fill in polyline;non_debt
removed wicket from RegionalGeo.java;non_debt
"recalculate the capacity after overcomit change.
Conflicts:
	server/src/com/cloud/capacity/CapacityManager.java
	server/src/com/cloud/capacity/CapacityManagerImpl.java
	server/src/com/cloud/resource/ResourceManagerImpl.java
	server/src/com/cloud/vm/VirtualMachineManagerImpl.java";non_debt
SOLR-2178: make price work for paging, facets;non_debt
HIVE-11336: Support initial file option for new CLI [beeline-cli branch](Ferdinand Xu, reviewed by Xuefu Zhang);non_debt
"[CALCITE-2001] JDBC driver should return ""SYSTEM TABLE"" rather than ""SYSTEM_TABLE""";non_debt
HDFS-10744. Internally optimize path component resolution. Contributed by Daryn Sharp.;non_debt
avoiding to add twice the same url;non_debt
Added notice requirement for invalid_passwords.txt as required by CC BY SA 3.;non_debt
"Do not pass unknown_error atom to plugin
There is no reason to pass {unknown_error, Error} to plugin and force it to
implement a match on that tuple. We should pass the Error itself and let
the plugin decide what to do with it.";non_debt
"Fixed bug in middle end attribute immediatelyEnclosingModelGroup, added
unit test to illustrate and cover.
Removed corresponding test from daffodil-test as this is really a
unit-test issue.";non_debt
AMBARI-20884. Compilation error due to import from relocated package;non_debt
[FLINK-1187] [streaming] StreamingRuntimeContext added with API support for registering fault tolerant state objects for the operators;non_debt
merge from 2.0;non_debt
"Compaction lock should also be acquired during alter operation as alter and compaction on same table should not be allowed concurrently.
Handling for compaction for restructure case. Handled to completely sort the data again if any restructured block is selected for compaction
Handled review comments";non_debt
merge from  0.6;non_debt
[CAMEL-15058] Fix failing rest DSL tests (#3828);non_debt
Merge branch 'cassandra-3.X' into trunk;non_debt
"[SYSTEMDS-211] Append operations (rbind/cbind) over lists of matrices
Initial version of rbind/cbind of List of matrices
Single list of only matrices
Only local execution
Closes #63.";non_debt
Update Jackson to 2.9.7.  This changes a LOT of API's due to Jackson's package rename, but for the most part it's search/replace type changes;non_debt
GEODE-64: Fix source header;non_debt
"ARROW-7593: [CI][Python] Python datasets failing / not run on CI
Closes #6214 from jorisvandenbossche/ARROW-7593 and squashes the following commits:
7c9bb887b <Joris Van den Bossche> avoid source_partition to be NULL
bdfa549a8 <Joris Van den Bossche> undo build script
207777c26 <Joris Van den Bossche> add more ARROW_DATASET
c0f55a267 <Joris Van den Bossche> ARROW-7593:  Python datasets failing / not run on CI";non_debt
fix for USERGRID-702, poked directly on master given high-priority;non_debt
[streaming] Licensing added to LogUtils;non_debt
Merge branch '0.14.0' into 0.15.0;non_debt
"Merge pull request #322 from deeyes24/failing_cronparsertest_inIndia
NO-JIRA: CronParserTest is failing in Indian StandardTime";non_debt
Upgrade Brave Zipkin to version 4.0.6;non_debt
GEODE-5496: Refactor reaper using resources to reduce noise. (#2245);non_debt
# IGNITE-709 Improve tests: Add joinTimeout=500;non_debt
chore: Fix operator sdk download url in release workflow;non_debt
[KARAF-3248] Fix bundle refresh when no bundle is provided;non_debt
ensure we have cxf client api;non_debt
"Merge branch 'tp32' into tp33
Conflicts:
	gremlin-core/src/test/resources/log4j-silent.properties
	gremlin-core/src/test/resources/log4j-test.properties
	tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/process/TinkerGraphComputerProvider.java";non_debt
"Merge pull request #752 from RashmiDR/directoryScan2014_pull
Squashed commit of the following:";non_debt
"INFRA-4347 Add Thrift to sonar
disable some languages and components";non_debt
Fix classnames in qa start scripts;non_debt
HDFS-8056. Decommissioned dead nodes should continue to be counted as dead after NN restart. (mingma);non_debt
"Revert ""Adding the missing changes""
This reverts commit fa985691e5d6a105290717ba1adb2c4de51d969c.";non_debt
#2009, version to 4.0.0-RC1-SNAPSHOT;non_debt
Merge branch 'master' of https://github.com/ecomfe/echarts;non_debt
Preventing NPE.;non_debt
coverity 1196483: Uninitialized pointer field;non_debt
Bug 52552 - Help reference only works in English;non_debt
Move the . to the right place.;non_debt
"[FLINK-12331][network] Refactor NetworkEnvironment#setupPartition() to ResultPartitionWriter#setup()
Move partition setup from NetworkEnvironment to ResultPartition.
This eliminates tie between Task and NetworkEnvironment.
Task does not need depend on NetworkEnvironment
and can trigger setup from ResultPartitionWriter interface.";non_debt
Minor fix of javadoc.;non_debt
"https://issues.apache.org/jira/browse/AMQ-5859
fix for incorrect logic in reconnect attempt limits and also fix a case
where an NPE could occur (saw in the tests).   Based on patch provided
by Benoit Wiart";non_debt
CAMEL-14685 - Fixed CS;non_debt
"Fix RepairCoordinator test failures, after clobbering jvm-dtest refactoring (CASSANDRA-15650) and modifying classes no longer in the project
 patch by David Capwell reviewed by Benjamin Lerer, Alex Petrov for CASSANDRA-15684";non_debt
"[HOTFIX] Disabling GPU fused relu & maxpooling operator because of bug
- Fixed the timer that counts the number of times memory chunks are
  zero-ed out
- Some minor code refactoring";non_debt
[STORM-934] Add doc descriptions for the TOPOLOGY_ACKER_EXECUTORS;non_debt
"Merge branch 'USERGRID-405' into USERGRID-448-appinfofix
Conflicts:
	stack/test-utils/src/main/java/org/apache/usergrid/setup/ConcurrentProcessSingleton.java";non_debt
[SQL] BeamQueryPlanner uses BeamSqlParserImpl;non_debt
Merge remote-tracking branch 'kylin/staging' into staging;non_debt
"Revert ""SOLR-11746: Adding docs for negative existence queries.""
This reverts commit 9edb143efdc6616906972ae6c629860c91a5a2e7.";non_debt
Regen docs;non_debt
CXF example;non_debt
Merge remote-tracking branch 'upstream/branch-1.0.2' into 102;non_debt
#ignite-239: fix logger.;non_debt
[SYSTEMML-930] Warn for result size when call through MLContext;non_debt
"Revert ""fix kvm issue, for windows sever 2008, it will crash without hyperv enlightment featre enabled""
This reverts commit c9dcae548056aa477e4156a1ec2efc9a83813aed.";non_debt
OF: fake empty list if JIRA fails to respond.;non_debt
Checkin Schedule and split construction in front-end;non_debt
This closes #2759;non_debt
Document how to call arbitrary classes in Jexl;non_debt
"TINKERPOP-2338 Fixed bug in drop() of edge/meta properties
TINKERPOP-2338 Fix gherkin test runner for .NET
Default to object for Properties() method generic param
TINKERPOP-2338 Updated changelog and upgrade docs";non_debt
HAWQ-184. Add license header to source files;non_debt
Merge branch 'tp31';non_debt
"Revert ""[BEAM-5442] Pass unknown SDK pipeline options to Runner (#6557)""
This reverts commit db1e6a1c79e44b7026e78d4f0df168234a13eed7.";non_debt
[BEAM-3566] Replace apply_* hooks in DirectRunner with PTransformOverrides;non_debt
"Make sure RangeTombstone.Tracker only keeps the ranges it needs to
patch by slebresne reviewed by benedict for CASSANDRA-9486";non_debt
Move manifest factory methods (#925);non_debt
Fixed build issues with PR#45;non_debt
Add a new equal distribution strategy for assigning tasks;non_debt
IGNITE-8910 PagesList.takeEmptyPage may fail with AssertionError: type = 1 - Fixes #4294.;non_debt
Merge fix - whitespace CTR;non_debt
Configuration keys for the extractor;non_debt
amqp - support configurable transformers and populate message properties for the default native one;non_debt
AMBARI-1145. Cluster Management refactoring. (yusaku);non_debt
"Internode messaging catches OOMs and does not rethrow
patch by Yifan Cai reviewed by David Capwell, Jordan West for CASSANDRA-15214";non_debt
Merge remote-tracking branch 'neykov/yaml-promote-app' into osgi2;non_debt
[NETBEANS-451] search for git revision instead of mercurial one. (#443);non_debt
AMBARI-8249. Usability: Configs Tab UI responsiveness issues (alexantonenko);non_debt
fixed broken anchor;non_debt
Refactored builder for RequestMessage.;non_debt
GROOVY-7503: Builder with Initializer strategy and no properties results in ClassFormatError (side effect: closes #60);non_debt
Wrong key in DAGs Persistent Volume Claim (#10627);non_debt
new-style lozenge tree view;non_debt
"Merge pull request #551 from aledsage/RubyRep-comment
RubyRep postgresql failure: add comment about os x setup";non_debt
Optimize percentile_approx through radix sort (#2102) (#2107);non_debt
Jenkins: Lets skip .mavenrc config from node;non_debt
ACCUMULO-103 corresponding changes for 1.4 branch and trunk;non_debt
Changed type.getInterfaces() to Reflections.getAllInterfaces(type);non_debt
"STREAMS-552
STREAMS-552: Disable .debug() by default in org.apache.streams.twitter.api.Twitter (https://issues.apache.org/jira/browse/STREAMS-552)";non_debt
AMBARI-12657 - Cluster creates fail on larger deployments with SQL Azure DB (jonathanhurley);non_debt
"[line] growth vs factor option for 'Period Ratio' (#970)
* i18n";non_debt
Service manager's init() method now retries if unable to get application.;non_debt
modify ShardingNamespaceTest.java;non_debt
HADOOP-1941 StopRowFilter throws NPE when passed null row;non_debt
"TS-1576: reload splitdns.config at runtime
  - reload splitdns.config with traffic_line -x
  - use ConfigInfo rather than similar custom code";non_debt
[KARAF-2563] - Compilation fails with JDK 8 ea;non_debt
HDFS-12325. SFTPFileSystem operations should restore cwd. Contributed by Chen Liang.;non_debt
Create slack channel for community;non_debt
INFRA-16237 migrate gitpubsub to tlp repo for freemarker;non_debt
"fix batch insert bug
fix batch insert bug";non_debt
"HDFS-14759. HDFS cat logs an info message.
Contributed by Eric Badger.";non_debt
Enable failOnWarnings for all projects.;non_debt
AMBARI-6968 Fix server validation to load all hosts on service confg page. (ababiichuk);non_debt
add powered by page;non_debt
# sprint-24 Minor.;non_debt
"[ZEPPELIN-2688]. Upgrade ace to 1.2.7
### What is this PR for?
Ace 1.2.7 add syntax highlight for pig script. This ticket is to upgrade ace from 1.2.6 to 1.2.7
### What type of PR is it?
[Improvement]
### Todos
### What is the Jira issue?
* https://issues.apache.org/jira/browse/ZEPPELIN-2688
### How should this be tested?
Tested manually
### Screenshots (if appropriate)
Before
After
### Questions:
* Does the licenses files need update? No
* Is there breaking changes for older versions? No
* Does this needs documentation? No
Closes #2435 from zjffdu/ZEPPELIN-2688 and squashes the following commits:
99b2554 [Jeff Zhang] [ZEPPELIN-2688]. Upgrade ace to 1.2.7";non_debt
Merge branch 'NIFI-1103' of https://github.com/adamonduty/nifi;non_debt
fix index passed to BB.get in ST.isBootstrapped;non_debt
#1208, ignore case for hash and equal;non_debt
"HADOOP-16005. NativeAzureFileSystem does not support setXAttr.
Contributed by Clemens Wolff.";non_debt
Fix Kaniko build dir;non_debt
DRILL-169 Correct JSON serialization/deserialization for Project LOP;non_debt
"[Contrib] Add MKL DNN option (#4323)
* update
* update";non_debt
HBASE-12209 NPE in HRegionServer#getLastSequenceId;non_debt
PHOENIX-4624 COLLATION_KEY function cannot handle null values (Shehzaad Nakhoda);non_debt
pre-load map entry, optimize serialization by replacing map with manual arraylist/iteration;non_debt
doc updates.;non_debt
LUCENE-2858: fix tests;non_debt
Merge branch 'cassandra-3.11' into trunk;non_debt
Merge [TRAFODION-1513] PR 109 Trafodion build from source tar failing;non_debt
HDFS-14084. Need for more stats in DFSClient. Contributed by Pranay Singh.;non_debt
"Documentation: Remove section on MarkupBuilder. The section on MarkupBuilder of ""Working with XML"" is better, so link to it.
Add link to StreamingMarkupBuilder section of ""Working with XML"".";non_debt
Bug 50134 - TransactionController : Reports bad response time when it contains other TransactionControllers;non_debt
Fixed std::array initialization for older compilers;non_debt
"update ut
Closes #280 from ahutsunshine/master.";non_debt
TimeExtras: Missed MILLISECONDS;non_debt
modify checkUniformed();non_debt
Return 404 if no schema found (#1659);non_debt
"Placed a limit on python tornado dependency version
Doesn't seem to work with 5.0 with the current version of python we were supporting. CTR";non_debt
YARN-9205. When using custom resource type, application will fail to run due to the CapacityScheduler throws InvalidResourceRequestException(GREATER_THEN_MAX_ALLOCATION). Contributed by Zhankun Tang.;non_debt
added ArrayMergerTest;non_debt
refactor;non_debt
"Rewrite Users Endpoint
This commit adds/modifies:
        handlers
        password validation
        database helpers";non_debt
Attempt to further optimize scanning (and memory usage);non_debt
Add an invariants section to the developer docs added the one about no permanent data in zk;non_debt
KYLIN-1079 add time filter for job history metastore;non_debt
merging 1.17.1 into develop;non_debt
HBASE-4217 HRS.closeRegion should be able to close regions with only the encoded name;non_debt
[python] add logloss metric;non_debt
move usergrid to gitwcsub;non_debt
Revert my test back to GuiceBerry.;non_debt
"Revert ""[KARAF-4861] Upgrade to sshd 1.3.0""
This reverts commit 0ee2e638f62dd6bc8bcbb171555ab4f787ced4de.";non_debt
Merge branch 'master' into gh-pages;non_debt
Merge branch 'sprint-2' into ignite-383;non_debt
"CLOUDSTACK-8766: Fix infinite scrolling pagination for zonal template listing
Uses listViewDataProvider to implement pagination for listing templates and ISOs
in the zones tab. Dedupes isos and templates in the list views.
This closes #740";non_debt
Add some methods for creating destination queries ;non_debt
"Remove the Window.Trigger intermediate Builder class
----Release Notes----
Remove the Window.Trigger intermediate Builder class
[]
-------------
MOE_MIGRATED_REVID=98859672";non_debt
imports :8;non_debt
"Provide BookieId option for listledgers command
Descriptions of the changes in this PR:
### Motivation
While diagnosing/analyzing/debugging cluster, sometimes it would be helpful to know the list of the ledgers residing in a particular bookie. Currently there is no simple way (BookieShell command) to find out that.
### Changes
For listledgers BookieShell command, provide bookieid option, which helps us in knowing list of ledgers residing in this particular Bookie.
This closes #1555 from reddycharan/printledgersofbookie";non_debt
Avoid NPE on SoftwareProcessEntity.start(null);non_debt
"[SPARK-4308][SQL] Sets SQL operation state to ERROR when exception is thrown
In `HiveThriftServer2`, when an exception is thrown during a SQL execution, the SQL operation state should be set to `ERROR`, but now it remains `RUNNING`. This affects the result of the `GetOperationStatus` Thrift API.
Closes #3175 from liancheng/fix-op-state and squashes the following commits:
6d4c1fe [Cheng Lian] Sets SQL operation state to ERROR when exception is thrown";non_debt
This closes #3080;non_debt
Document OLM based deployment from source;non_debt
"Fix problems with async calls hanging if there is a read/connection
timeout.
Also allow passing a HTTPClientPolicy object in via request context to
set timeouts and such";non_debt
HDDS-1731. Implement File CreateFile Request to use Cache and DoubleBuffer. (#1044);non_debt
ACCUMULO-3601 transfer migration information to the metadata table filtering iterator;non_debt
This closes #1843;non_debt
"Update db_to_seq table when _replicator db deleted
If a _replicator db is deleted then recreated the db_to_seq ets
table needs to be updated, otherwise the sequence will be out of sync
and replication docs can fail to trigger.
BugzID: 12759";non_debt
"[Enhancement] Fill assignment param of bucket shuffle and colocate shuffle for debug  (#5167)
When Doris is in debug mode, function `Coordinator#traceInstance` is used to print
the physical execute plan of a fragment instance for debug.
Function  `Coordinator#traceInstance` uses param `scanRangeAssignment` to print
the detail of a fragment. But bucket shuffle join and colocate shuffle join do not fill the param.
That will cause debug not work well.
This path fill assignment param of bucket shuffle and colocate shuffle for debug.";non_debt
chord pack ecData;non_debt
[FLINK-18307][scripts] Rename 'slaves' file to 'workers';non_debt
Fix UnixMicros function (#544);non_debt
"NIFI-4473: Add support for large result sets and normalizing Avro names to SelectHiveQL
This closes #2212.";non_debt
"[FLINK-14318][travis] Compile with a single thread
Multi-threaded compilation can deadlock builds with later shade-plugin versions.";non_debt
IGNITE-11545 Logging baseline auto-adjust;non_debt
"STORM-3512 Empty implementation for the MetricStore.  (#3152)
* STORM-3512 Empty implementation for the MetricStore. Intended to be use in the config to disable monitoring.";non_debt
SOLR-11789: Add integrate Stream Evaluator;non_debt
"README: Repo has moved (#2235)
Move from git-wip-us to gitbox";non_debt
SOLR-10339: New set-trigger and remove-trigger APIs for autoscaling;non_debt
Added HexConsumer.;non_debt
Allow for old-style SVN workspaces;non_debt
Bug 14476: ESC causes UI to freeze;non_debt
"[REFACTOR][TIR][API-Change] Migrate BuildConfig to PassContext. (#5668)
This PR migrates the TIR configurations from BuildConfig to the
PassContext used by the unified IR.
Moving forward, PassContext will be the unified way to configure passes in the TVM stack.
Changes
- Refactored TVM_PASS_REGISTER_CONFIG_OPTION to take in the reference type.
- Removed BuildConfig.
- Migrated the passes to use PassContext.
* Update include/tvm/ir/attrs.h";non_debt
Upgrade AWS SDK v2 to version 2.14.3;non_debt
add a NPE checker;non_debt
change parser rule name from XXX_ to XXX (#7863);non_debt
AMBARI-11195. Need to be able to create customized graphs based on YARN queue-specific metrics. (jaimin);non_debt
Merge branch 'master' of github.com:Parquet/parquet-mr into junit_framework_to_org;non_debt
CAMEL-6117: Allow empty service_type and system_type;non_debt
Moving TsBuffer from lib/tsconfig to lib/ts.;non_debt
"Merge remote-tracking branch 'origin/TINKERPOP-1449'
Conflicts:
	CHANGELOG.asciidoc";non_debt
"LUCENE-9093: UnifiedHighlighter LengthGoalBreakIterator frag align
 Matches in passages should be centered better on average.
 Closes #1123";non_debt
ACCUMULO-383 Made TableDeletedException set message;non_debt
Removes codepaths for reading unsplit BigQuery sources;non_debt
varargs;non_debt
Add javadoc to ConsoleIO;non_debt
added RepeatStep documentation and image.;non_debt
Add serialVersionUID;non_debt
Preparing for 1.7.2-rc0.;non_debt
"Merge commit 'e430723' into reorg2
Newer PR's moved to the right place.
Conflicts:
	brooklyn-library/sandbox/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastCluster.java
	brooklyn-library/sandbox/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastClusterImpl.java
	brooklyn-library/sandbox/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastNode.java
	brooklyn-library/sandbox/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastNodeDriver.java
	brooklyn-library/sandbox/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastNodeImpl.java
	brooklyn-library/sandbox/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastNodeSshDriver.java
	brooklyn-library/sandbox/nosql/src/main/resources/org/apache/brooklyn/entity/nosql/hazelcast/hazelcast-brooklyn.xml
	brooklyn-library/sandbox/nosql/src/test/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastClusterEc2LiveTest.java
	brooklyn-library/sandbox/nosql/src/test/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastClusterSoftlayerLiveTest.java
	sandbox/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastCluster.java
	sandbox/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastClusterImpl.java
	sandbox/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastNode.java
	sandbox/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastNodeDriver.java
	sandbox/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastNodeImpl.java
	sandbox/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastNodeSshDriver.java
	sandbox/nosql/src/main/resources/org/apache/brooklyn/entity/nosql/hazelcast/hazelcast-brooklyn.xml
	sandbox/nosql/src/test/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastClusterEc2LiveTest.java
	sandbox/nosql/src/test/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastClusterSoftlayerLiveTest.java
	software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastCluster.java
	software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastClusterImpl.java
	software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastNode.java
	software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastNodeDriver.java
	software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastNodeImpl.java
	software/nosql/src/main/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastNodeSshDriver.java
	software/nosql/src/main/resources/org/apache/brooklyn/entity/nosql/hazelcast/hazelcast-brooklyn.xml
	software/nosql/src/test/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastClusterSoftlayerLiveTest.java
	software/nosql/src/test/java/org/apache/brooklyn/entity/nosql/hazelcast/HazelcastTestHelper.java";non_debt
coverity 1225199: vmware dc upgrade;non_debt
Merge branch 'jaxrs-filter-example' of https://github.com/ShermanMarshall/tomee into jaxrs-filter-example;non_debt
cut out ant, spring, and jsr173-api;non_debt
"SOLR-13890: Add ""top-level"" DV ""terms"" implementation (#1151)
{!terms} queries have a docValues-based implementation that uses per-segment DV structures.  This does well with a small to moderate (a few hundred) number of query terms, but doesn't well scale beyond that due to repetitive seeks done on each segment.
This commit introduces an implementation that uses a ""top-level"" docValues structure, which scales much better to very large {!terms} queries (many hundreds, thousands of terms).";non_debt
CXF-2421 fixed the UnsupportOperationException issue in ConfigureImpl;non_debt
"* using our existing gz method instead of ""ant.gzip"".
* fixing build issue on windows.";non_debt
HTTP COPY & MOVE for documents with tests;non_debt
CLOUDSTACK-10000: Fix remote access vpn does not work due to '#' in password (#2182);non_debt
"Revert ""[SPARK-22574][MESOS][SUBMIT] Check submission request parameters""
This reverts commit 7a51e71355485bb176a1387d99ec430c5986cbec.";non_debt
This closes https://github.com/apache/beam-site/pull/88;non_debt
IGNITE-13766 API for network connectivity check - Fixes #8500.;non_debt
Update spring version;non_debt
STORM-243:delete package-info.java path from .gitignore file;non_debt
"Merge pull request #592 from nickholub/web4_pull
Map Reduce Monitor Update (Readme, App List, History Charts)";non_debt
Move bugfix entries to version 8.5.1;non_debt
New -j option to easily change jmeter log file;non_debt
"add SASI validation for partitioner and complex columns
patch by xedin reviewed by jasobrown for CASSANDRA-11169";non_debt
"Improve stress workload realism
patch by benedict reviewed by tjake for CASSANDRA-7519";non_debt
NO-JIRA: update notice;non_debt
Added automatic restart to ES client.  We seem to get disconnected with large clusters occasionally.;non_debt
IGNITE-3202: Hadoop: Implemented user name mappers.;non_debt
"Merge pull request #3890 from apache/revert-3870-1.3.3-bug-ui-fix-3835
Revert ""[1.3.3-release][fix-3835][ui] When the tenantName contains ""<"", the tenant drop-down list is blankadd verify tenant name cannot contain special characters.""";non_debt
HDDS-1840. Fix TestSecureOzoneContainer. (#1135);non_debt
Added test on FairAffinityFunction.;non_debt
"Change <cxf:bus> processing to configure the existing bus, not create a
new one
Make Bus have properties so props (like schema-validation) can be
enabled globally";non_debt
HBASE-21277 Prevent to add same table to two sync replication peer's config;non_debt
HDFS-2568. Use a set to manage child sockets in XceiverServer. Contributed by Harsh J;non_debt
fix export result bug;non_debt
KYLIN-1752 Add an option to fail cube build job when source table is empty;non_debt
SOLR-10291: Updates CHANGES.txt;non_debt
SOLR-13953: Prometheus exporter in SolrCloud mode limited to 100 nodes;non_debt
HADOOP-15170. Add symlink support to FileUtil#unTarUsingJava. Contributed by Ajay Kumar;non_debt
"schema: fix foreign key checks for 3.0.7 to 4.1.0 upgrade path
Without this upgrades from 3.0.7 version fails.";non_debt
HIVE-4369 : Many new failures on hadoop 2 (Vikram Dixit via Ashutosh Chauhan);non_debt
AMBARI-10408: NFSGateway fails to start in blueprint installation. (jaimin);non_debt
"[hotfix][tests] Remove problematic mocking from StreamTaskTest#testAsyncCheckpointingConcurrentCloseBeforeAcknowledge
The problem was the whenNew mocking which could lead to a StackOverflowException in the
StreamTask#AsyncCheckpointRunnable.";non_debt
"[SPARK-7515] [DOC] Update documentation for PySpark on YARN with cluster mode
Now PySpark on YARN with cluster mode is supported so let's update doc.
Closes #6040 from sarutak/update-doc-for-pyspark-on-yarn and squashes the following commits:
ad9f88c [Kousuke Saruta] Brushed up sentences
469fd2e [Kousuke Saruta] Merge branch 'master' of https://github.com/apache/spark into update-doc-for-pyspark-on-yarn
fcfdb92 [Kousuke Saruta] Updated doc for PySpark on YARN with cluster mode";non_debt
"[SPARK-8918] [MLLIB] [DOC] Add @since tags to mllib.clustering
This continues the work from #8256. I removed `since` tags from private/protected/local methods/variables (see https://github.com/apache/spark/commit/72fdeb64630470f6f46cf3eed8ffbfe83a7c4659). MechCoder
Closes #8256
Closes #8288 from mengxr/SPARK-8918.";non_debt
Lang requires Java 6, update URL to JavaSE docs;non_debt
GEODE-5080: Ensure that reconnect sequence has started (#1805);non_debt
"CLOUDSTACK-7480: UI > instance page > change ""XenServer Tools Version 6.1+ field"" to ""Original XS Version is 6.1+"" because what the field really presents is the original XenServer version when a VM is initially created.";non_debt
KYLIN-1294 disabled related test cases as it is depending on Calcite-980;non_debt
"[SPARK-15952][SQL] fix ""show databases"" ordering issue
## What changes were proposed in this pull request?
Two issues I've found for ""show databases"" command:
1. The returned database name list was not sorted, it only works when ""like"" was used together (HIVE will always return a sorted list)
2. When it is used as sql(""show databases"").show, it will output a table with column named as ""result"", but for sql(""show tables"").show, it will output the column name as ""tableName"", so I think we should be consistent and use ""databaseName"" at least.
## How was this patch tested?
Updated existing test case to test its ordering as well.
Closes #13671 from bomeng/SPARK-15952.";non_debt
"Merge pull request #952 from dewrich/issue/938
Fix for Issue #938 - added back good.csv";non_debt
EtcdClientBuilder => EtcdChannelFactory;non_debt
hbase-5765 adding ImportTsv to Ops chapter;non_debt
Added 1005.;non_debt
HDFS-2225. Refactor file management so it's not in classes which should be generic. Contributed by Ivan Kelly.;non_debt
[TRAFODION-1970] UPDATE STATS CLEAR gets error 9243 on large tables;non_debt
sync r954282 and r953866 with git;non_debt
"update jdk 1.5 enforcement for release
use normal tomahawk for jsf 1.1 testing";non_debt
Give access to current SampleResult (and drop references to prev);non_debt
Merge branch '0.15.0' into 0.16.0;non_debt
Fix pep8 that broken marvin build 10 days ago :(;non_debt
"SAMZA-1611: BootstrappingChooser should use systemAdmin offsetComparator API to compare the offsets
Closes #443 from atoomula/bootstrap";non_debt
"[numpy] change unary infer type (#17254)
* cpu ok
* gpu ok
* change name
* sanity
* re-trigger";non_debt
"[SYSTEMML-656] Fix scalar input boolean addition test
Closes #162.";non_debt
AMBARI-10174 Add possibility to save configs from the model. (ababiichuk);non_debt
[storage] Merge branch 'master' of github.com:dmlc/mxnet;non_debt
Merge branch 'dev' of https://github.com/apache/incubator-shardingsphere into dev;non_debt
Merge branch 'cassandra-3.11' into trunk;non_debt
Fix extractTemplateCmd.;non_debt
[BEAM-7775] Remove job_PerformanceTests_Spark;non_debt
"Merge pull request #776 from nickholub/in1_pull
App Stats Allocated Memory Data, Installer Server-Side Error Messages";non_debt
Remove personal email info.;non_debt
"[SPARK-4787] Stop SparkContext if a DAGScheduler init error occurs
Closes #3809 from tigerquoll/SPARK-4787 and squashes the following commits:
5661e01 [Dale] [SPARK-4787] Ensure that call to stop() doesn't lose the exception by using a finally block.
2172578 [Dale] [SPARK-4787] Stop context properly if an exception occurs during DAGScheduler initialization.";non_debt
"[SPARK-33075][SQL] Enable auto bucketed scan by default (disable only for cached query)
### What changes were proposed in this pull request?
This PR is to enable auto bucketed table scan by default, with exception to only disable for cached query (similar to AQE). The reason why disabling auto scan for cached query is that, the cached query output partitioning can be leveraged later to avoid shuffle and sort when doing join and aggregate.
### Why are the changes needed?
Enable auto bucketed table scan by default is useful as it can optimize query automatically under the hood, without users interaction.
### Does this PR introduce _any_ user-facing change?
No.
### How was this patch tested?
Added unit test for cached query in `DisableUnnecessaryBucketedScanSuite.scala`. Also change a bunch of unit tests which should disable auto bucketed scan to make them work.
Closes #30138 from c21/enable-auto-bucket.";non_debt
# ignie-456;non_debt
Exclude netty and protobuf dependency from hadoop-commons-2.0.0-alpha;non_debt
bug 8571: has been resolved;non_debt
Create all versions of vid2pid ahead of time;non_debt
"[CARBONDATA-1407] Fix default end key bug for no-dictionary dimension
Now the default end key of no-dictionary dimension is 127 (0xEF), it should be 0xFF.
This closes #1290";non_debt
Site: Maryann Xue joins PMC;non_debt
Upgrade to optiq-0.6, linq4j-0.2.;non_debt
[BEAM-7720] Fix the exception type of InMemoryJobService when job id not found;non_debt
HADOOP-7134. configure files that are generated as part of the released tarball need to have executable bit set. Contributed by Roman Shaposhnik;non_debt
"GEODE-7210: Fix RedundancyLevelPart1DUnitTest
- Add awaits to assertions dependent on asynchronous calls";non_debt
#! rebased on master;non_debt
"[rpc] use callback func to do send & recv (#4147)
* fix java build
* fix min/max macro define in windows
* keep the old rpc setup for py
* add doc for CallbackChannel";non_debt
fix syntax error in patchKernel.yml (#2707);non_debt
flushing for direct channels;non_debt
"LUCENE-9309: Wait for #addIndexes merges when aborting merges (#1418)
The SegmentMerger usage in IW#addIndexes(CodecReader...) might make changes
to the Directory while the IW tries to clean-up files on rollback. This
causes issues like FileNotFoundExceptions when IDF tries to remove temp files.
This changes adds a waiting mechanism to the abortMerges method that, in addition
to the running merges, also waits for merges in addIndices(CodecReader...)";non_debt
TOMEE-444 looking in tomee.war/lib if tomee/lib doesn't contain the searched lib (used for webapp classloader enrichment);non_debt
fix(prometheus): Assume service exposition is enabled when a service already exists;non_debt
"Fixed AtmoicReference<> Example
Closes #8076 from lababidi/master and squashes the following commits:
af4553b [Mahmoud Lababidi] Fixed AtmoicReference<> Example";non_debt
"Revert ""CLOUDSTACK-4780: Changes related to checking snapshot on NFS server""
This reverts commit 33fb241fdf7f363659db918b8f6dd5744f599259.";non_debt
woops, remove nocommit;non_debt
Added a shell script to set the maven profiles in eclipse;non_debt
config: fix label to view guest networks from phy network;non_debt
In JdbcTest, ensure ResultSet is closed;non_debt
"GUACAMOLE-129: Set ""Content-Disposition: attachment"" for ""application/octet-stream"" downloads to ensure browser doesn't attempt mimetype detection.";non_debt
PHOENIX-2792 Enable PQS to use the new SPNEGO support from Avatica;non_debt
"[TRAFODION-206][TRAFODION-2018] Merge support for new catalog APIs,
PROCEDURES and PROCEDURECOLUMNS";non_debt
HBASE-19060 precommit plugin test 'hadoopcheck' should only run when java or maven files change.;non_debt
BIGTOP-2674. docker-hadoop option -C does not work correctly any more;non_debt
disable ps-lite on windows for now;non_debt
[BEAM-9281] Update commons-csv to version 1.8;non_debt
" update escheduler-api unit test (#749)
* change log level to debug
* add unit test
* update escheduler-dao unit test
* update escheduler-api unit test";non_debt
SOLR-14130: Add postlogs command line tool for indexing Solr logs;non_debt
overload ats_stringdup for string_view;non_debt
"[CXF-3924] - Support to configure keystore per SAML realm
 - Patch applied, thanks.";non_debt
add action hints;non_debt
"log actual SSL error string on failure opening connection
error buf needs to be populated before the SSL error state is cleared";non_debt
adding a new operation to rest api - getPartitionsOfPolicy;non_debt
"Merge pull request #4908: Add Protocol Buffer support
BEAM-3855";non_debt
"AVRO-892. Python: Fix an ""integer out of range"" error with snappy compression. Contributed by Michael Cooper.";non_debt
[CXF-2744] Support re-write of schema redefine elements;non_debt
CAMEL-9556: enableHangupSupport should be deprecated so old code can still compile.;non_debt
"Bump up the helix version to 0.9.8 (#6166)
Helix 0.9.8 includes the critical bug fix that would reduce
the load to ZK.
More detailed release note can be found at the following:
http://helix.apache.org/0.9.8-docs/releasenotes/release-0.9.8.html";non_debt
Merge branch 'cassandra-2.1' into trunk;non_debt
24770: Provide new versions of dml scripts for univariate and bivariate stats. - univariate and bivariate scripts for SystemMLApps;non_debt
Disable flapping limit tests: to be fixed as part of DRILL-1866;non_debt
NameManager. AttrScope withScope move from object to class;non_debt
Merge remote-tracking branch 'remotes/origin/sprint-22' into sprint-23;non_debt
"[REFACTOR][RUNTIME] Update NDArray use the Unified Object System (#4581)
Previously NDArray has its own object reference counting mechanism.
This PR migrates NDArray to the unified object protocol.
The calling convention of NDArray remained intact.
That means NDArray still has its own type_code and
its handle is still DLTensor compatible.
In order to do so, this PR added a few minimum runtime type
detection in TVMArgValue and RetValue only when the corresponding
type is a base type(ObjectRef) that could also refer to NDArray.
This means that even if we return a base reference object ObjectRef
which refers to the NDArray. The type_code will still be translated
correctly as kNDArrayContainer.
If we assign a non-base type(say Expr) that we know is not compatible
with NDArray during compile time, no runtime type detection will be performed.
This PR also adopts the object protocol for NDArray sub-classing and
removed the legacy NDArray subclass protocol.
Examples in apps/extension are now updated to reflect that.
Making NDArray as an Object brings all the benefits of the object system.
For example, we can now use the Array container to store NDArrays.
* Address review comments";non_debt
closes apache/incubator-airflow#3328 *Closed for inactivity.*;non_debt
move YamlOrchestrationConfiguration;non_debt
This closes #2326;non_debt
[karaf] update to latest blueprint snapshot;non_debt
"[SPARK-4318][SQL] Fix empty sum distinct.
Executing sum distinct for empty table throws `java.lang.UnsupportedOperationException: empty.reduceLeft`.
Closes #3184 from ueshin/issues/SPARK-4318 and squashes the following commits:
8168c42 [Takuya UESHIN] Merge branch 'master' into issues/SPARK-4318
66fdb0a [Takuya UESHIN] Re-refine aggregate functions.
6186eb4 [Takuya UESHIN] Fix Sum of GeneratedAggregate.
d2975f6 [Takuya UESHIN] Refine Sum and Average of GeneratedAggregate.
1bba675 [Takuya UESHIN] Refine Sum, SumDistinct and Average functions.
917e533 [Takuya UESHIN] Use aggregate instead of groupBy().
1a5f874 [Takuya UESHIN] Add tests to be executed as non-partial aggregation.
a5a57d2 [Takuya UESHIN] Fix empty Average.
22799dc [Takuya UESHIN] Fix empty Sum and SumDistinct.
65b7dd2 [Takuya UESHIN] Fix empty sum distinct.";non_debt
"Put active-ack consumers in their own consumer-groups. (#3337)
Just like with the invoker consumers, it doesn't make sense to have those in one group as crash of one will cause a rebalancing pause for the other.";non_debt
"NIFI-6040: Fixed ExecuteSQL processors when Output Batch Size is set
This closes #3355.";non_debt
Split history main/java/groovy/util/GroovyTestSuite.java to main/java/groovy/test - rename file to target-name;non_debt
"Zip entries use UNIX style (relative) paths by standard.
Why the leading dot though?";non_debt
Sharding-Proxy config and integrate metrics.;non_debt
"THRIFT-2130 D library/test: parts of ""make check"" code do not compile with recent dmd-2.062 through dmd-2.064alpha
Patch: David Nadlinger";non_debt
[HELIX-569] fix ivy files issue;non_debt
fix iptablesFirewallNotEnabled check to be warning instead of error;non_debt
optimization MetricsEsDAO multiGet (#5096);non_debt
"Merge pull request #2220 from boboning/ios-jsframework-0.19.7
ios update weexSDK Version to 0.9.5";non_debt
# GG-8479 - gg-8479 Reverted changes.;non_debt
Fix #669: make sure annotations are propagated correctly to the knative service;non_debt
Merge branch 'two-dot-o' of github.com:usergrid/usergrid into two-dot-o;non_debt
"Merge pull request #692 from andyperlitch/MLHR-731
Less now compiled on the fly, CSS files no longer tracked";non_debt
Merge ignite-gg-11125 into ignite-db-wal;non_debt
[KARAF-5641]ensure Karaf kit can run with java10;non_debt
Escape copyright sign in jdk8-backport javadoc;non_debt
CAMEL-15005: fix examples and tests using relocated methods;non_debt
HBASE-16405 Change read path Bloom check to work with Cells with out any copy.;non_debt
GROOVY-3291 added GDK File.append(InputStream) and File.leftShift(InputStream);non_debt
yaml rebind tests: log the mementoDir;non_debt
re-remove the registered lines;non_debt
update javadoc;non_debt
GG-6700 - Fixes for WS test.;non_debt
Camel-AWS2-SES: Fixed CS;non_debt
"Encrypt select statement in operator (#3733)
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator
* encrypt statement in operator";non_debt
Change the Zabbix receiver is disabled by default (#6395);non_debt
Camel-AWS-ECS: Regen docs;non_debt
"restore pre-CASSANDRA-3862 approach to removing expired tombstones during compaction
patch by jbellis reviewed by slebresne for CASSANDRA-4364";non_debt
fix compilation error with 2.4, endpoints is a lur cache of endpoints so they will disappear in time, really needs a new component api - list available endpoints - 2.5 wabol;non_debt
Revert 516643 due to problems with EOL characters when committing.;non_debt
KYLIN-867 make hybrid always win its children;non_debt
ensure that ports in Cluster are Integer;non_debt
delete cn intro;non_debt
"Added new vararg methods to insert values into an array at an index.
This implements LANG-660. This commit also deprecates the add() methods
that inserted a single value into an array at an index.";non_debt
CAMEL-10720: The generated XML XSD now includes deprecated in the documentation so users can see this in their IDEs.;non_debt
"ARTEMIS-1211 - Allow local transactions when no jta in Resource Adapter
https://issues.apache.org/jira/browse/ARTEMIS-1211";non_debt
"Revert ""Added cloud-qemu-system dependency on packages""
This reverts commit f8e7b3ff5ff767bfcfd9b8004a4916a9350da953.";non_debt
CAMEL-4955: Camel should run in a Java 7 environment - removed test which fail because Oracle changed the implementation of sun.beans.editors.IntEditor which calls Integer.valueOf() to sun.beans.editors.IntegerEditor which calls Integer.decode();non_debt
Use apply() for Initializer instead;non_debt
Add option to provide initial configuration to Knative;non_debt
"Merge pull request #1 from nicolaferraro/add-camel-k
Add Camel K to staging website";non_debt
Use contentTypeRDFJSON;non_debt
HBASE-3234 - use a version of branch-20-append that has 724 reverted in it;non_debt
HIVE-15199: INSERT INTO data on S3 is replacing the old rows with the new ones (Sergio Pena, reviewed by Yongzhi Chen, Sahil Takiar, Illya Yalovyy, Steve Loughran);non_debt
NIFI-598;non_debt
"[FLINK-8056][dist] Use 'web.port' instead of 'jobmanager.web.port'
This closes #5010.";non_debt
Update to latest httpcomponent versions;non_debt
Add the binpacking package to the centos5 build (#1519);non_debt
Moved CONCAT_SEPARATOR and SPLIT_SEPARATOR from StramChild and documented methods.;non_debt
connection mode using DrillConnectionMode enum;non_debt
YARN-10137. UIv2 build is broken in trunk. Contributed by Adam Antal;non_debt
IGNITE-12400: Remove the stopProcess method from the DiscoveryCustomMessage interface (#7268);non_debt
TS-1124 Fix some build issues with new plugins;non_debt
"PARQUET-598: Test writing all primitive data types
Closes #113 from xhochy/parquet-598 and squashes the following commits:
a22d7b7 [Uwe L. Korn] Address review comments
a82159b [Uwe L. Korn] Move specialization of InitValues to separate header
e2b48ea [Uwe L. Korn] Move specialization of InitValues to separate header
c3a6790 [Uwe L. Korn] PARQUET-598: Test writing all primitive data types";non_debt
"Merge pull request #1811, fix unstable hessian protocol unit test by adding overload. 
Fixed #1667, fixed #1727";non_debt
[RUNTIME][NDArray] Allowing External Libraries to Subclass NDArrays (#2613);non_debt
"Avoid rebuilding SASI indexes containing no values
Patch by Alex Petrov reviewed by Corentin Chary for CASSANDRA-12962";non_debt
"tank U
Co-Authored-By: kezhenxu94 <kezhenxu94@163.com>";non_debt
"htaccess redirect to legacy netbeans.org (#346)
Let's see if this works. No way to test locally :-(";non_debt
HBASE-17661 fix the queue length passed to FastPathBalancedQueueRpcExecutor;non_debt
"[SYSTEMDS-2755] Lineage cache benefit estimator
This patch intoduces a new option to -lineage, estimate, which
collects various statistics and prints to stdout. Collected
stats include, but not limited to, total saved computation time,
size of all cachable and reused intermediates, list of opcodes
ordered by compute time saved. Examples and descriptions are
available in jira.";non_debt
26307: Add FrequentSequenceMinerApp, GNMFApp, LinearLogisticRegressionApp and LinearLogisticRegressionScoreApp for 2.0 release - Include FrequentSequenceMiner into 2.0 build;non_debt
cppcheck: fixes issues found for tests in proxy/http;non_debt
Fixed punctuation in the traffic router dev guide.;non_debt
"[CALCITE-510] Support for grouping sets in AggregateExpandDistinctAggregatesRule (Jesus Camacho Rodriguez)
Close apache/incubator-calcite#27";non_debt
make Maybe.Absent.changeExceptionSupplier work for transformed results;non_debt
Merge branch 'STORM-1995_downloadChunk_should_close_input_stream' of https://github.com/abellina/storm into STORM-1995;non_debt
CAMEL-3339: Added Main class to camel-core. Thanks to Ben for patch.;non_debt
"KAFKA-4507 Clients should support older brokers (KIP-97)
The client should send older versions of requests to the broker if necessary.
Closes #2264 from cmccabe/KAFKA-4507";non_debt
Merge pull request #11007 [BEAM-7746] Support Timestamp/Duration equality testing with arbitrary objects;non_debt
[AIRFLOW-4572] Rename prepare_classpath() to prepare_syspath() (#5328);non_debt
AK000 and AK001 tests for binary unsignedByte fail.;non_debt
reset figures in right order to make counting more likely to be accurate by a little bit :);non_debt
AMBARI-20220 - Parameterize the Startup Web Server Timeout Default Value (jonathanhurley);non_debt
resolve conflict.;non_debt
"make cache skipping optional
patch by harishd reviewed by Vijay for CASSANDRA-2635";non_debt
Notify the ddoc cache when design docs change;non_debt
"Merge pull request #445 from aledsage/refactor/jboss7-groovy-to-java
use new sensor-feed, instead of deprecated SensorAdapters";non_debt
Relocates proxy/config to configs;non_debt
AMBARI-12203. Zookeeper server restart failed after 1.7 to 2.1 (aonishuk);non_debt
"IGNITE-2508: Fixed hotspot in GridDhtPartitionTopologyImpl caused by excessive HashSet allocations from ""nodes(int, AffinityTopologyVersion)"" method.";non_debt
HIVE-1750 Remove partition filtering conditions when possible;non_debt
SOLR-7805: Update Kite Morphlines to 1.1.0;non_debt
catch up with trunk;non_debt
Merge in Mikes huge commit (r1210176);non_debt
"ARROW-1968: [C++/Python] Add basic unit tests for ORC reader
These use the example files published in the Apache ORC repository.
Closes #2428 from pitrou/ARROW-1968-orc-tests and squashes the following commits:
6f538923 <Wes McKinney> Update quay.io image used for pandas 0.23.4
28335ff9 <Wes McKinney> Use pandas 0.23.4 everywhere
d5d34e53 <Wes McKinney> Upgrade pandas in manylinux1 image to latest
c51a77f1 <Wes McKinney> Do not use binary read mode
dd456204 <Wes McKinney> Use pandas for ORC tests, delete pickles
43b0208a <Antoine Pitrou> Add decimals test
06c0f5f4 <Antoine Pitrou> Fix tests on py2
42f01864 <Antoine Pitrou> ARROW-1968:  Add basic unit tests for ORC reader";non_debt
removed invalid app data push annotation;non_debt
CLOUDSTACK-2031:support for number of ips per nic limit needs to be added for the multiple ip address per nic;non_debt
[CXF-5339] Adding a couple of negative tests, disabled for now;non_debt
"Merge release branch 4.6 to master
* 4.6:
  CLOUDSTACK-9134: set device_id as the first device_id not in use instead of nic count";non_debt
recloses COUCHDB-4 (view etags) thanks to Matt Goodall for the tests. keep 'em coming!;non_debt
fix db migration downgrade actions (#12608);non_debt
[hotfix][docs] Update REST API docs;non_debt
Implemented Compiler Post Pass for Bulk Iterations With Pact Record.;non_debt
[hotfix] [metrics] Prevent registration exceptions;non_debt
"Search-Cancel Button position fixes in the search box (#327)
* Search Cancel Button position fixes
* Requested changes updated
* Changes";non_debt
This closes #2304;non_debt
LUCENE-3631: Move thread locals to SegmentCoreReaders.java to enable reuse on reopen/NRT.;non_debt
[AMBARI-23292] livy.superusers is not getting configured correctly when Spark2 and Zeppelin are added as a service later on (#710);non_debt
Merge branch 'tp32';non_debt
add patch version if we build from git;non_debt
JENA-1758: Use a semaphore to notify thread has finished;non_debt
Update to latest camel 2.10.3 release.;non_debt
"[SPARK-14540][BUILD] Support Scala 2.12 closures and Java 8 lambdas in ClosureCleaner (step 0)
## What changes were proposed in this pull request?
Preliminary changes to get ClosureCleaner to work with Scala 2.12. Makes many usages just work, but not all. This does _not_ resolve the JIRA.
## How was this patch tested?
Existing tests
Closes #19675 from srowen/SPARK-14540.0.";non_debt
HIVE-11593 Add aes_encrypt and aes_decrypt UDFs (Alexander Pivovarov, reviewed by Jason Dere);non_debt
"NIFI-6694 Removed erroneous inclusion of the Hive 3 component on the JDK 8 ja_JP locale build stage on Travis
This closes #3781";non_debt
s/Cloudant/BigCouch;non_debt
HDFS-5120. Add command-line support for manipulating cache pools.;non_debt
ZOOKEEPER-1897. ZK Shell/Cli not processing commands (stack via michim);non_debt
"CLOUDSTACK-9532: Use macchinina as a template for failing tests
- Switches to macchinina as template for VM in the tests
- Modifies the ostype of the macchinina template to 'Other Linux (64-bit)'
- Check template download status, fixes Nonetype iterable issue";non_debt
Update URL to checkstyle checks documentation;non_debt
remove omp which can cause ssd accuracy variance (#13622);non_debt
AMBARI-11922. Adds <build> to each view.xml in contrib (Erik Bergenholtz via rlevas);non_debt
Oops. Missed an important one line change.;non_debt
Updating Tomcat to 9.0.35;non_debt
Camel-Metrics: Fixed CS;non_debt
[hotfix] Let JobLeaderService terminate leader retrieval services;non_debt
"Merge pull request #2954 from DenisIstomin/fix-mongodb-conversion
Fix MongoDB InputStream conversion bug";non_debt
HDDS-4782.Merge SCMRatisSnapshotInfo and OMRatisSnapshotInfo into a single class (#1880);non_debt
from MIFOSX-38, tidy up serialization of deposit accounts.;non_debt
"[SPARK-21718][SQL] Heavy log of type: ""Skipping partition based on stats ...""
## What changes were proposed in this pull request?
Reduce 'Skipping partitions' message to debug
## How was this patch tested?
Existing tests
Closes #19010 from srowen/SPARK-21718.";non_debt
[AIRFLOW-6427] Fix broken example_qubole_operator dag (#7005);non_debt
[hotfix] Fix CI Failure;non_debt
"Add DoFnRunner.ListOutputManager
----Release Notes----
[]
-------------
MOE_MIGRATED_REVID=99084779";non_debt
Corrupted request shuts down the broker patched by Jun Rao reviewed by Jay Kreps and Neha Narkhede KAFKA-261;non_debt
"[SPARK-7399] [SPARK CORE] Fixed compilation error in scala 2.11
scala has deterministic naming-scheme for the generated methods which return default arguments . here one of the default argument of overloaded method has to be removed
Closes #5966 from tijoparacka/fix_compilation_error_in_scala2.11 and squashes the following commits:
c90bba8 [Tijo Thomas] Fixed compilation error in scala 2.11";non_debt
checkstyle;non_debt
THIRDEYE-389 : Use proper umask when creating HDFS directories;non_debt
"HttpFeed supports authentication
Supply username and password to HttpFeed buider. Uses httpcomponents'
standard mechanisms, so Brooklyn handles everything httpcomponents handles.
Extends HttpService to create servers requiring basic authentication.";non_debt
CAMEL-3515: Added support for using qualifier for selecting bean method to be used to pinpoint methods when having overloaded methods on beans.;non_debt
Fix CXF-2459 set SecurityContext in jms transport for Tibco EMS;non_debt
Disabled avro auto-compile, added back gen-java with Avro classes for compatibility with java 6.;non_debt
config: Only user low-case names for variables;non_debt
"Merge pull request #151 from dennybritz/fix/examples_jar
Examples ship to to cluster";non_debt
update erlang-oauth to 1.3.0;non_debt
" Unix jmeter start script assumes it is on PATH, not a link
Bugzilla Id: 21695";non_debt
Local copies of licenses;non_debt
[FLINK-12253][table-common] Add a FLOAT type;non_debt
"Merge ""Removing Thrift Interface""";non_debt
move HDFS-9621 from trunk to 2.9.0 in CHANGES.txt.;non_debt
"THRIFT-5302 Add recursive function name uniqueness check
Patch: wangliming07 <wangliming07@58.com>
This closes #2268";non_debt
"Change user interface regarding SecondarySort stuff
All the AbstractPact descendents now have setters for the secondary sort
key classes and positions. Remove secondary sort stuff from all
constructors that was added in the first secondary sort commit.
Also split example into two, one for Reduce and one for CoGroup.";non_debt
Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/trafficserver into apache;non_debt
Bug 64936 - Increase generate_report_ui.generation_timeout to 5 minutes to handle large performance test;non_debt
Julia: remove downloading of the non-ASF binary build (#18489);non_debt
"travis: use explicit change directory and use -pl to build rat check (#3472)
This tries to fix build failures seen in job 1 of Travis. Also fixes a pylint issue.";non_debt
Clarify;non_debt
javadoc referred to DAML+OIL;non_debt
ARROW-1932: [Website] Update site for 0.8.0 release info;non_debt
Remove final on methods as class is final;non_debt
"Merge branch 'gg-8022' into gg-8517
Conflicts:
	os/modules/hadoop/src/test/java/org/gridgain/grid/kernal/processors/hadoop/GridHadoopAbstractSelfTest.java";non_debt
"Merge pull request #27 from jegonzal/removed_indexedrdd_from_core
Removing IndexedRDD changes for spark/core";non_debt
isdefined is not a valid check when using search. need to use count instead. updates test.;non_debt
"Return current values on failed CAS
patch by slebresne reviewed by jbellis for CASSANDRA-5619";non_debt
"Fix bug in reverse folding with startkey_docid
Fixes an issue where the first k/v was skipped if the startkey_docid
was included.";non_debt
bump default nginx version to 1.19 to pick up security fixes (#4966);non_debt
"BOOKKEEPER-1048: Use ByteBuf in LedgerStorage interface
To pass ref-counted buffer from Netty directly to the storage and the Journal, we need to have LedgerStorage to accept ByteBuf instead of ByteBuffer
#### Note
This commit is on top of BOOKKEEPER-1048 / #138. Once that gets merged, I will rebase. Posting now to get Jenkins run. Please review last commit f53f772f79d0a334edc0f05e66edb7cc645b1ffa in this PR for now.
Closes #139 from merlimat/bytebuf-in-ledger-storage";non_debt
NIFI-152 - fixing more markup;non_debt
SelectStep now uses Scope.getScopeValueByKey() helper method.;non_debt
"CLOUDSTACK-730: Site-to-site VPN between VPC VR to VR
Now VPN connection can be created as ""passive"", which would enable the ability
of remote peer initiate the connection. So it's possible for VPC VR to
establish the connection to another VPC VR of CloudStack.
Test case also included.
The test case would create 2 vpcs and using VPN to connect them.";non_debt
PHOENIX-1080 Fix PhoenixRuntime.decodepk for salted tables. Add integration tests. (Samarth);non_debt
HDFS-13109. Support fully qualified hdfs path in EZ commands. Contributed by Hanisha Koneru.;non_debt
"Initial work to support a typed null field for an entity, including a new index field type named ""null"" with value of null.  Also changes to pass a Set to elasticsearch for fields to index instead of a non unique list.
Conflicts:
	stack/corepersistence/model/src/main/java/org/apache/usergrid/persistence/model/field/FieldTypeName.java
	stack/corepersistence/model/src/test/java/org/apache/usergrid/persistence/model/entity/MapToEntityConverterTest.java
	stack/corepersistence/queryindex/src/test/java/org/apache/usergrid/persistence/index/impl/EntityIndexTest.java";non_debt
CLOUDSTACK-869:Netscaler support as an external LB provider:front end;non_debt
[FLINK-7811] Make Long literal explicit to support Scala 2.12;non_debt
Fixes CollectionIT app scopes;non_debt
"Merge pull request #3395 from laertida/patch-1
Put the example of skipHeaderRecord csv unmarshal";non_debt
adding a banner to old docs for new doc link (#5205);non_debt
QuickLogin;non_debt
Added spring based xpath header test;non_debt
[HELIX-452] Increase frequency of status update cleanup;non_debt
modify ShardingOnlyWithTables.java;non_debt
AMBARI-9671. Switch the order of property description and error message display in config validation popup (onechiporenko);non_debt
Add argument validation to HadoopTables#create (#298);non_debt
fix(dataZoom): use itemStyle mixin to map style properties.;non_debt
HADOOP-13447. Refactor S3AFileSystem to support introduction of separate metadata repository and tests. Contributed by Chris Nauroth.;non_debt
AMBARI-3882. Background operations popup window minimum size should be fixed when narrowing down the browser. (xiwang via yusaku);non_debt
KYLIN-985 Fix support of AVG();non_debt
YARN-3356. Capacity Scheduler FiCaSchedulerApp should use ResourceUsage to track used-resources-by-label. Contributed by Wangda Tan;non_debt
[LANG-1546]: delete `<encoding>` and `<docencoding>` in maven-javadoc-plugin;non_debt
"Add all jars in extensions directory to classpath
[#155484283]";non_debt
HIVE-2182. Avoid null pointer exception when executing UDF (Chinna Rao Lalam via jvs);non_debt
Merge branch 'cassandra-2.0' into trunk;non_debt
changes axis2 xml fromat error;non_debt
Ingest the input watermarks into the GlobalWatermarkHolder.;non_debt
Fixing verify-libs-and-licenses for cluster.config=platform.;non_debt
"Expose config keys ""constraints"" and ""pinned"" flag on the REST API";non_debt
"Fix potential data loss in CompressedSequentialWriter
Patch by jmckenzie reviewed by tjake for CASSANDRA-8949";non_debt
Change email address;non_debt
DRILL-1061: Disable MergeProjectRule if project expression has complex output type;non_debt
Merge branch '1.6' into 1.7;non_debt
don't fail stop just because we didn't have a machine previously;non_debt
"Don't set context classloader.
The classloader will need to be set in CalcFn#compile. We will do that
in a subsequent PR.
Also fixes nullability errors.";non_debt
fix disk I/O description mistake;non_debt
GROOVY-9216: Bump gradle to 5.6-rc-2;non_debt
add license;non_debt
Merge branch 'cassandra-3.11' into trunk;non_debt
bug 12976: The new keyboard framework sends only raw keyboard events, it turned out that it does not work with Xen/KVM hypervisors(only VMware supports standard raw keyboard events), Xen/KVM accept only cooked keyboard events, to maintain cross hypervisor compability, US english keyboard will be handled in the new JsCookedKeyboardMapper class;non_debt
Ref Guide: fix out of order heading levels (were 3s, should be 2s after 1s);non_debt
Merge branch '4.0.0-grouping' of https://git-wip-us.apache.org/repos/asf/stratos into grouping;non_debt
Add note on binary compatibility, what it means, that was discussed and agreed upon up on the list;non_debt
reset useScorer14 in finally in case of test failure;non_debt
2102 missed 0.7.1;non_debt
improvement to https://issues.apache.org/activemq/browse/CAMEL-428 to only use the javadoc jars if using the release profile;non_debt
Adding LANG-510;non_debt
Adding Geertjan's video to kb/docs/contributing;non_debt
SOLR-13560: Update CHANGES.txt;non_debt
"Covert from groovy to java
- Converts:
-- brooklyn.policy.loadbalancing.Movable
-- brooklyn.entity.messaging.Topic
-- brooklyn.entity.messaging.amqp.AmqpExchange
-- brooklyn.entity.messaging.amqp.AmqpServer";non_debt
"Fixes for the native-code profiler interface
* Stacks.c: corrected some incorrect casts for 64-bit windows. Implemented
  mapping from methodIds to ints using a hash table for 64-bit platforms.
* Updated build scripts for Windows, Linux and Mac.
* Moved scripts out of the build subdirectory.";non_debt
"Merge pull request #76 from mattcasters/master
HOP-238 : unit test fix (+rename)";non_debt
HIVE-7917: Re-apply change from HIVE-7158, set hive.exec.reducers.max to a high prime number. (Gopal V, reviewed by Gunther Hagleitner);non_debt
"SAMZA-1482: Restart or fail Samza jobs in YARN when detecting changes��_
��_ in input topic partitions
Some high-lights of the changes:
- always instantiating StreamPartitionCountMonitor on all input system streams now
-- it is debatable whether we want to include systems that do not implement the optimized ExtendedSystemAdmin interface. We may need to configure a long partition monitor interval for this case and the case where there are tons of input topics. (Pending perf test)
- moved the instantiation of StreamPartitionCountMonitor out of JobModelManager and allow ClusterBasedJobCoordinator associate a callback method directly to the monitor
- allow callbacks to set different application status code before throwing exception to shutdown the job
Closes #351 from nickpan47/restart-on-partition-change and squashes the following commits:
8d04cd6 [Yi Pan (Data Infrastructure)] SAMZA-1482: restart or fail the job when input topic partition count changes
ee3fa65 [Yi Pan (Data Infrastructure)] SAMZA-1482: Restart or fail Samza jobs in YARN when detecting changes in input topic partitions";non_debt
Extract Hadoop's scripts from Hadoop's jar into bin/ directory.;non_debt
"Merge branch 'two-dot-o' of https://github.com/usergrid/usergrid into DPS-1042_import-counters
# By Martin Harris (2) and grey (1)
# Via Dave Johnson (2) and grey (2)
* 'two-dot-o' of https://github.com/usergrid/usergrid:
  Got all existing Dictionary tests to work using the old hector dictionary code. Added batchUpdateSetIndexes and all methods needed to make it work into CpRelationManager.
  Added names to corepersistence modules
  Added corepersistence module to stack pom.xml
Conflicts:
	stack/core/src/main/java/org/apache/usergrid/corepersistence/CpEntityManager.java";non_debt
"Add GossipingPropertyFileSnitch.
Patch by brandonwilliams reviewed by Vijay for CASSANDRA-1974";non_debt
SOLR-3893: intellij config;non_debt
Merge branch 'master' of https://github.com/Microsoft-CISL/REEF;non_debt
BIGTOP-2749: puppet: use jessie package on jessie, not trusty;non_debt
hbase-8763: Combine MVCC and SeqId;non_debt
HDDS-1139 : Fix findbugs issues caused by HDDS-1085. Contributed by Aravindan Vijayan.;non_debt
"Merge remote-tracking branch 'origin/master' into SPOI-1711
Conflicts:
	stram/src/test/java/com/datatorrent/stram/license/protocol/response/GetSubLicenseInfoResponseTest.java";non_debt
add 'needs triage' label to new bug reports (#18696);non_debt
[FLINK-12763][runtime] SlotManager fails unfulfillable slot requests if it is set to do so.;non_debt
"[SPARK-7259] [ML] VectorIndexer: do not copy non-ML metadata to output column
Changed VectorIndexer so it does not carry non-ML metadata from the input to the output column.  Removed ml.util.TestingUtils since VectorIndexer was the only use.
CC: mengxr
Closes #5789 from jkbradley/vector-indexer-metadata and squashes the following commits:
b28e159 [Joseph K. Bradley] Changed VectorIndexer so it does not carry non-ML metadata from the input to the output column.  Removed ml.util.TestingUtils since VectorIndexer was the only use.";non_debt
"Record workflow scheduling history in recurrent workflows.
Add records of scheduling history.
When deleting a recurrent workflow, also remove all scheduled workflows that are finished.
Also add test case for deleting recurrent workflows with scheduling history.";non_debt
Merge branch 'android-feature-20160607' of https://github.com/alibaba/weex into android-feature-20160607-refresh;non_debt
ZEPPELIN-117 Install individual submodule;non_debt
This closes #62;non_debt
"Regions UI actions: Refresh region selector listing
After action is performed that adds/removes regions, call
'cloudStack.refreshRegions' to refresh region selector listing.";non_debt
added a new chapter for 4.2;non_debt
GROOVY-4685: added a note saying that Binding is not intended to be used in a multithreaded context;non_debt
"hopefully avoids ""inconvertible types"" issue in windows ci build";non_debt
"[SPARK-20708][CORE] Make `addExclusionRules` up-to-date
## What changes were proposed in this pull request?
Since [SPARK-9263](https://issues.apache.org/jira/browse/SPARK-9263), `resolveMavenCoordinates` ignores Spark and Spark's dependencies by using `addExclusionRules`. This PR aims to make [addExclusionRules](https://github.com/apache/spark/blob/master/core/src/main/scala/org/apache/spark/deploy/SparkSubmit.scala#L956-L974) up-to-date to neglect correctly because it fails to neglect some components like the following.
**mllib (correct)**
**mllib-local (wrong)**
## How was this patch tested?
Pass the Jenkins with a updated test case.
Closes #17947 from dongjoon-hyun/SPARK-20708.";non_debt
24027: Create Projects for SystemML applications - Share projects;non_debt
"Merge pull request #10994 from [BEAM-8335] TeststreamService integration with DirectRunner
[BEAM-8335] TeststreamService integration with DirectRunner";non_debt
YARN-9562. Add Java changes for the new RuncContainerRuntime. Contributed by Eric Badger;non_debt
HBASE-2594 Narrow pattern used finding unit tests to run -- make it same was we had in 0.20;non_debt
"Upgrade curator version (#2083)
* upgrade curator version
issue: https://github.com/apache/incubator-dolphinscheduler/issues/2020
curator issue: https://github.com/apache/curator/pull/297
* add DefaultEnsembleProvider override
* add some unit test
* add License";non_debt
"Exclude sstable based on clustering in query by name path
patch by slebresne reviewed by iamaleksey for CASSANDRA-10571";non_debt
readme: document tengine usage;non_debt
fix bug: add cache twice;non_debt
ACCUMULO-4602 Improved RollWALPerformanceIT;non_debt
eliminate daffodil-runtime1 module;non_debt
"[FLINK-19726][table-planner] Implement DataStream and Source Providers
This closes #13696";non_debt
STORM-862: Pluggable System Metrics;non_debt
Update blueprint groupId/artifactId;non_debt
Merge branch 'TINKERPOP-1849';non_debt
ASF L V2;non_debt
Added javadocs;non_debt
"KAFKA-3824 Clarify autocommit delivery semantics for consumer
Closes #1936 from hachikuji/KAFKA-3824";non_debt
Bump asm version to 6.0_BETA;non_debt
changed Nonnull to NotNull annotation;non_debt
"[SPARK-6515] update OpenHashSet impl
Though I don't see any bug in the existing code, the update in this PR makes it read better. rxin
Closes #5176 from mengxr/SPARK-6515 and squashes the following commits:
134494d [Xiangrui Meng] update OpenHashSet impl";non_debt
"[AIRFLOW-7001] Further fix for the MySQL 5.7 UtcDateTime (#7655)
The original fix from the commit
b4215f634c0dd60f101b79d3d5bf493603bc6cbc��
was wrong. It converted to utc initially but then make_naive
had used TIMEZONE and converted it to the lcoal timezone rather
than UTC.";non_debt
Set min visualization iframe height 0;non_debt
"[TRAFODION-2235] Changed interpretation of zclient library errors
                 returned to correctly handle associated znode.";non_debt
Added test based on user forum issue;non_debt
"Use `define` to avoid repeating yourself
COUCHDB-3102";non_debt
"Add clarification about authorized views
When reading from authorized view, we need to use withQueryLocation to
avoid 403 errors trying to determine the location from the metadata of
the dataset containing the view's underlying tables (users with access
to the view will not have access to that metadata).";non_debt
"[NIFI-198] Prerequisites is not correctly checked
 Using maven-enforcer-plugin to check the correct maven version.";non_debt
a bug in Giraph's HadoopGremlinPluginTest.;non_debt
"Fix #468 Remove use of native-maven-plugin
Replace use of native-maven-plugin (which calls javah) to generate JNI
headers with Java 8's new `javac -h` flag to generate headers during
compilation.";non_debt
Spark: Add tests for identity partition data (#839);non_debt
Added CHANGELOG.md and updated community contributions guideline;non_debt
new CSV lib, escape option for loader;non_debt
"bug cs-14285 NetScaler SDX: can not create VPX instances when XVA image is not NSVPX-XEN-9.3-52.4_nc.xva
status cs-14285: resolved fixed
This fix enables to use the first available VPX image and device profile on the SDX while creating VPX";non_debt
AMBARI-12747. Ambari server upgrade does not re-extract the jar content of the views (Rohit Choudhary via srimanth);non_debt
HDFS-9780. RollingFileSystemSink doesn't work on secure clusters. (Daniel Templeton via kasha);non_debt
LUCENE-1019: CustomScoreQuery enhanced to support multiple ValueSource queries.;non_debt
"Revert ""contrib fft,ifft,countsketch (#5563)"" (#5634)
This reverts commit 7b34a09dc38a5cbbc6df27b9a6f69e03ad059cac.";non_debt
Fix missing test dependency;non_debt
LUCENE-4763: Fix Java version detection in common-build.xml, use correct source version for javadocs, fail build on unsupported java version when documentation linting is enabled;non_debt
"[SPARK-11706][STREAMING] Fix the bug that Streaming Python tests cannot report failures
This PR just checks the test results and returns 1 if the test fails, so that `run-tests.py` can mark it fail.
Closes #9669 from zsxwing/streaming-python-tests.";non_debt
GEODE-1648: Introduce security-enabled-components and tests;non_debt
CAMEL-9273:Support all free api methods (solved ids problem);non_debt
Merge branch 'ios-input-0.16-dev' of https://github.com/kfeagle/incubator-weex into wip-us-0.16-dev;non_debt
"Request for traffic ops feature to show info on why a server is either admin_down or offline. (#1542)
https://tkts.sys.comcast.net/browse/CDNOPS-920
Add st_chg_reason column, varchar(256), to the db, server index page via hover over status and
server view and edit pages where it can be seen and edited.
Hover is only active on ADMIN_DOWN and OFFLINE.
A reason for setting ADMIN_DOWN and OFFLINE is now required.";non_debt
"Merge branch 'david' of github.com:apigee/usergrid-portal-internal into merge
Conflicts:
	js/usergrid.console.js";non_debt
HBASE-5295 Improve the Thrift API to switch on/off writing to wal for Mutations (Dhruba);non_debt
This closes #2055;non_debt
"This closes #228
* github/pr/228:
  Misc OSGi fixes";non_debt
Regen;non_debt
"Optimize resubmitting pending jobs
Previously even when the scheduled time was the same the job was still deleted
and re-inserted into the pending queue. Now we perform the re-enqueing
operation only if the scheduled time has changed. So if the whole operation is
run in its own transaction, the transaction will now become a read-only
transaction.
This optimization should come in handy with the indexing auto-builder, for
example, where multiple nodes might try to re-enqueue the job and then only the
first would succeed, and the rest will perform a quick one row read and not do
any writes.";non_debt
add propertiesToYaml.;non_debt
CAMEL-14375: camel-kafka - The saslJaasConfig option may contain sensitive information that can be logged;non_debt
Code refactor according to comments;non_debt
Increase timeout to reduce failures;non_debt
GROOVY-6293: @Immutable collection members are apparently mutable (sometimes?);non_debt
fix: Switch Language doesn't work. (#1306);non_debt
"change: installed tinyyaml by luarocks. (#527)
* change: installed tinyyaml by luarocks.";non_debt
add fillPlainUnit();non_debt
GROOVY-8858: Refine GCL to avoid occupying Permanent Area/Metaspace repeatedly for same source code(closes #816);non_debt
fix (#4212);non_debt
"Merge pull request #193 from liubao68/registry_pull
[JAV-442]add PULL support between SDK and service center";non_debt
[SCB-1678][HIGHWAY-WEAK]using new proto API to serialize/deserialize Internal Objects (#1483);non_debt
"Bug 54482 - HC fails to follow redirects with non-encoded chars
Add some tests
Bugzilla Id: 54482";non_debt
YARN-6975. Moving logging APIs over to slf4j in hadoop-yarn-server-tests, hadoop-yarn-server-web-proxy and hadoop-yarn-server-router. Contributed by Yeliang Cang.;non_debt
"Merge branch 'cassandra-3.0' into cassandra-3.11
# Conflicts:
#	src/java/org/apache/cassandra/service/pager/AbstractQueryPager.java
#	src/java/org/apache/cassandra/service/pager/MultiPartitionPager.java
#	test/unit/org/apache/cassandra/cql3/validation/operations/SelectTest.java";non_debt
Untab;non_debt
"Pass unencoded JsonObj to before_request
It is much easier to write epi plugins if the object
it receives is not encoded yet.
So we pass unencoded JSON object to chttpd_plugin:before_response
COUCHDB-2966";non_debt
Move HADOOP-12590 from 2.9.0 to 2.8.0 in CHANGES.txt.;non_debt
"setup/db: Fix database blunders
- Make schema-442to450.sql same as on master branch
- Make schema-430to440.sql same as on 4.4 branch";non_debt
NIFI-260 Replaced four screenshots so they have new logo;non_debt
HBASE-16645 Wrong range of Cells is caused by CellFlatMap#tailMap, headMap, and SubMap (ChiaPing Tsai);non_debt
Fix for AMQ-579, where other command parameters are not being parsed by bstat.;non_debt
"[SPARK-9893] User guide with Java test suite for VectorSlicer
Add user guide for `VectorSlicer`, with Java test suite and Python version VectorSlicer.
Note that Python version does not support selecting by names now.
Closes #8267 from yinxusen/SPARK-9893.";non_debt
Fixed tests on CI servers;non_debt
"[SPARK-31462][INFRA] The usage of getopts and case statement is wrong in do-release.sh
### What changes were proposed in this pull request?
This PR (SPARK-31462) fixes the usage of getopts and case statement in `do-release.sh` and `do-release-docker.sh`.
### Why are the changes needed?
In the current master, do-release.sh contains the following code.
There are 3 wrong usage in getopts and case statement.
1. To set  $OPTARG to an argument passed for the option ""b"", the parameter for getopts should be ""b:"".
2. To set $OPTARG to the invalid option name passed, the parameter for getopts starts with "":"".
3. It's minor but to match the character ""?"", it's better to escape like ""\\?"".
### Does this PR introduce any user-facing change?
No.
### How was this patch tested?
I checked that $GIT_BRANCH is set when do-release.sh is launched with -b option.
I also checked that the error message contains invalid option name when do-release.sh is launched with an invalid option.
Closes #28234 from sarutak/fix-do-release.";non_debt
Refactor side-effect test to new model.;non_debt
Upgrade spark-java-rest;non_debt
Rename method;non_debt
"Merge pull request #1123 from sughosh88/ReportPermissions
Added all reports in permission table";non_debt
"[CARBONDATA-3348] Fix the case insensitive validation for duplicate sort column.
Why is this PR needed?
Currently the column name with different case(upper and lower)
is getting considered as different columns for sort properties.
What changes were proposed in this PR?
Added the case insensitive validation for duplicate sort column.
Does this PR introduce any user interface change?
No
Is any new testcase added?
Yes
This closes #3647";non_debt
bug fix: hdfs task log and indexing task not work properly with Hadoop HA;non_debt
HDDS-1460: Add the optmizations of HDDS-1300 to BasicOzoneFileSystem (#765);non_debt
"[SYSTEMDS-2550] Extended parameter server (validation function, stats)
Closes #1154.";non_debt
"fixes to group by rollup change
cache key computation changes based on review comment.
And another change that only shows up during release run";non_debt
YARN-2732. Fixed syntax error in SecureContainer.apt.vm. Contributed by Jian He.;non_debt
HBASE-10771 Primitive type put/get APIs in ByteRange (Anoop);non_debt
PHOENIX-5962 Stabilize builds;non_debt
Preparing 0.7 release;non_debt
APEXMALHAR-2257 Added documentation for Transform Operator;non_debt
TS-3319: Fix ifdef to compile on RHEL 5;non_debt
"[FLINK-19888][hive] Migrate Hive source to FLIP-27 source interface for streaming
This closes #13963";non_debt
"[GRIFFIN-271] Before 0.6.0 milestone release, We need to check and tr��_
��_im current codes against apache griffin dev guide
trim current java code by dev guide document
Closes #522 from toyboxman/g271.";non_debt
Upgrade GRPC bundle to version 1.26.0;non_debt
merge from 1.0;non_debt
Fixed compiler error.;non_debt
Fixing services and service stubs properly.;non_debt
Adding TravisCI #82;non_debt
Don't allow package-info.html;non_debt
[Agent-Plugin] Add support to MysqlDataSource;non_debt
"* Maven 3 support
* Pretty Format POM's
* AWS API compiles now";non_debt
SOLR-1900: add missing ByteUtils.java;non_debt
"https://issues.apache.org/jira/browse/TOMEE-228
* use log limit";non_debt
"KAFKA-9150 DescribeGroup uses member assignment as metadata
Closes #7658 from dajac/KAFKA-9150";non_debt
"Merge pull request #274 from ydailinkedin/master
Make superuser configuration keys consistent, and separate authpath for tokens/keytab";non_debt
Copied the license text from the Apache Flink component.;non_debt
delete executeCallback();non_debt
Merge remote-tracking branch 'origin/0.8.x';non_debt
"Updated tvm submodule head (#12764)
* Updated tvm submodule head
* Remove FInplaceIdentity attr for cast and _backward_cast";non_debt
fix CLOUDSTACK-2149 and related unit test;non_debt
Implement Lang:rdf/null reader.;non_debt
"Merge pull request #626 from arusinha/bug#240529-fix-integration
donation2_merge:#240529: Fixing folding of empty {}";non_debt
changes based on review comments;non_debt
APEXCORE-521 upate parent pom references.;non_debt
ThreadAffinityDocumentsWriterThreadPool.toString;non_debt
"Merge pull request #97 from ewencp/pyspark-system-properties
Add classmethod to SparkContext to set system properties.
Add a new classmethod to SparkContext to set system properties like is
possible in Scala/Java. Unlike the Java/Scala implementations, there's
no access to System until the JVM bridge is created. Since
SparkContext handles that, move the initialization of the JVM
connection to a separate classmethod that can safely be called
repeatedly as long as the same instance (or no instance) is provided.";non_debt
Fixes paging bug with sub fields;non_debt
[tests] refactor, change datasets and charts to it's own folder (#9487);non_debt
Closes #939;non_debt
HDFS-6920. Archival Storage: check the storage type of delNodeHintStorage when deleting a replica. Contributed by Tsz Wo Nicholas Sze.;non_debt
Fix bufferl snapshot version so it depends on correct netty upstream;non_debt
"NIFI-5049 Fix handling of Phonenix datetime columns
This closes #2625";non_debt
"KYLIN-894
1. read hive table
2. write hfile";non_debt
Merge pull request #8455: [BEAM-6916] Reorg Beam SQL docs and add Calcite section;non_debt
"Change the gradle build to use the gogradle plugin (#812)
This PR applies the gogradle plugin to build the binaries of openwhisk
wskdeploy.
Partially-closes: apache/incubator-openwhisk-release#9";non_debt
fix refresh for activities;non_debt
#sprint-24 - config finder;non_debt
Add sharding-scaling-core module and sharding-scaling-bootstrap module;non_debt
Fix for MySQL DB tables should be INNODB based for proper tx support: https://issues.apache.org/activemq/browse/AMQ-1891;non_debt
"PHOENIX-105 Remove commons-csv source
Remove the fork of the commons-csv source code and use the
released commons-csv artifact.";non_debt
"[FLINK-15387][rocksdb][metrics] Expose missing RocksDB properties out via RocksDBNativeMetricOptions
Expose more RocksDB metrics including block-cache-capacity, block-cache-pinned-usage, block-cache-usage and is-write-stopped
This closes #10692.";non_debt
Upgrade version to 2.1.2;non_debt
Create versioned instead of generic frames from STOMP decoder;non_debt
"[BEAM-10720] Finish implementing StringMethods (cat, repeat) (#12705)
* Implement repeat, cat
* More discerning repeat, fix cat bug
* Remove str_expr shim
* fix py3.6
* lint
* yapf";non_debt
[hotfix] grouping by grain, filtering on raw expression;non_debt
Merge branch '1.5.2-SNAPSHOT' into 1.6.0-SNAPSHOT;non_debt
"remove statements from connection's list, when closed manually
patch by Rick Shaw reviewed by Patricio Echague and jbellis for CASSANDRA-3244";non_debt
Factory out use of Objects.requireNonNull in GraphFactory.;non_debt
removing assembly warning;non_debt
This closes #2905;non_debt
"Refactored integration test, made functions in the query generator lowercase
RB=463389
R=kgopalak,xiafu,jfim,dpatel
A=dpatel";non_debt
Try to load Gremlin stuffs from implementations to make travis happy.;non_debt
# GG-8174 - GG-8174 Merge from sprint-24.;non_debt
Added MP Fault Tolerance.;non_debt
Fix test breaking downstream builds;non_debt
"ARROW-10525: [C++] Fix crash on unsupported IPC stream
Detect situations where we have a delta dictionary with an unresolved nested dictionary.
Found by OSS-Fuzz.
Should fix the following issue:
- https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=26581
Closes #8617 from pitrou/ARROW-10525-ipc-stream-fuzz";non_debt
Fix from any -> bytes transition.;non_debt
"[BEAM-2021] Add getElementCoders to UnionCoder
This closes #2691";non_debt
STORM-1083. Run maven in batch mode to avoid excessive loggin in travis CI;non_debt
IGNITE-2105 - Fixed nested collections in direct marshalling;non_debt
CAMEL-3756: Add an example which use CXF bean binding and the OSGI HTTP Service (e.g. PAX Web with jetty);non_debt
LANG-1380: FastDateParser too strict on abbreviated short month symbols;non_debt
0.18.3-alpha.1;non_debt
revert to manual additions to the schema mapping so that previous versions are not dropped from the map: resolve https://issues.apache.org/activemq/browse/AMQ-3005;non_debt
remove clang and revert to use g++ 4.8;non_debt
# IGNITE-709 Fix test: use Cluster.localNode() instead of Cluster.node();non_debt
"Merge pull request #144 from vchuravy/vc/cuda
try to automatically find CUDA";non_debt
Add synchronization and checks for duplicate rules in addPermission security group customizer;non_debt
HIVE-2272. add TIMESTAMP data type (Franklin Hu via Siying Dong);non_debt
"IGNITE-2365 - Notify policy if swap or offheap is enabled and rebalanced entry was not preloaded.
IGNITE-2099 - Fixing custom collections.
This closes #396";non_debt
Support location config in yaml;non_debt
AWS: Use v2 single object delete, not bulk delete in S3FileIO (#2237);non_debt
"Merge pull request #345 from shaofengshi/inverted-index
Inverted index";non_debt
Fix https spoofing (see r595772);non_debt
#2384 merge postgresql alter user;non_debt
HBASE-14392 [tests] TestLogRollingNoCluster fails on master from time to time;non_debt
66141: SystemML Engine Enhancements - Support for ultra-sparse random matrix generation;non_debt
KdcFixture closing;non_debt
Support hyperUniqueCardinality type in post aggregation (#451);non_debt
Upgrade Vertx to version 3.8.4;non_debt
"[SPARK-31903][SQL][PYSPARK][R] Fix toPandas with Arrow enabled to show metrics in Query UI
### What changes were proposed in this pull request?
In `Dataset.collectAsArrowToR` and `Dataset.collectAsArrowToPython`, since the code block for `serveToStream` is run in the separate thread, `withAction` finishes as soon as it starts the thread. As a result, it doesn't collect the metrics of the actual action and Query UI shows the plan graph without metrics.
We should call `serveToStream` first, then `withAction` in it.
### Why are the changes needed?
When calling toPandas, usually Query UI shows each plan node's metric and corresponding Stage ID and Task ID:
but if Arrow execution is enabled, it shows only plan nodes and the duration is not correct:
### Does this PR introduce _any_ user-facing change?
Yes, the Query UI will show the plan with the correct metrics.
### How was this patch tested?
I checked it manually in my local.
Closes #28730 from ueshin/issues/SPARK-31903/to_pandas_with_arrow_query_ui.";non_debt
+ [doc] change gitbook lastest version;non_debt
Add stunnel module with abi configuration;non_debt
fix broken link;non_debt
remove disabledDataSourceNames;non_debt
ignite-698 - fix for IGNITE-569 part1;non_debt
"Added maven-compiler-plugin to assembly/openejb-jetty/pom.xml
Corrected ${project.version} in assembly/openejb-jetty/openejb-jetty-common/pom.xml";non_debt
HIVE-6315 : MetaStoreDirectSql ctor should not throw (Sergey Shelukhin via Ashutosh Chauhan);non_debt
66141: SystemML Engine Enhancements - Adding a santiy check in generating ultra-sparse matrices;non_debt
GEODE-3310: Avoid running a test case in distributed transaction.;non_debt
AMBARI-24499 blueprint support for multiple TIMELINE_READER components (benyoka) (#2136);non_debt
fix periodic thread logging if no timeout specified, as per PR review;non_debt
[KARAF-562] Fix multible deployment of config-factories in features <config> tag;non_debt
Upgrade Facebook4j and related bundle to version 2.4.3;non_debt
"New couch_event:listen/4 API
This function doesn't return but allows a process to become an event
listener. Useful in RPC situations to avoid spawning an extra process
and doubling the message passing.";non_debt
Merged in jihoonson/nta (pull request #22);non_debt
[HUDI-1149] Added a console metrics reporter and associated unit tests.;non_debt
Code review fixes.;non_debt
"NIFI-8086: Fix file separator char in PutS3Object multipart state directory path
This closes #4726.";non_debt
HBASE-9710 Use the region name, not the encoded name, when region is not on current server;non_debt
"https://issues.apache.org/jira/browse/AMQ-3912 - Durable subs store messages in error with broker attribute persistent=""false"" - fix with test";non_debt
"SOLR-11730: Add simulated tests for nodeAdded / nodeLost dynamic in a large cluster.
Plus some other fixes:
* Fix leader election throttle and cluster state versioning in the simulator.
* PolicyHelper was still using a static ThreadLocal field, use ObjectCache isntead.";non_debt
HBASE-1954 Transactional scans do not see newest put;non_debt
CAMEL-14715 - Remove egit bundle property placeholder (camel-karaf-migration);non_debt
revcount and commit from buildno;non_debt
ACCUMULO-596 enabled support for additional hex characters, started a shell unit test that can't wait to be expanded to test more commands;non_debt
db upgrade: fix sql exception: Access denied you need (at least one of) the SUPER privilege(s) for this operation (#4533);non_debt
Fix sparsehash path (#1300);non_debt
AMBARI-6361. Component status cannot be changed from INSTALL_FAIL to Disabled state. (Jayush Luniya via mahadev);non_debt
"Merge branch 'cassandra-1.2' into cassandra-2.0
Conflicts:
	CHANGES.txt";non_debt
"[FLINK-2656] Fix behavior of FlinkKafkaConsumer for out of range offsets
This closes #1117";non_debt
Fix License headers and add assert which was missed.;non_debt
"Update version of protobufs used by the SDK
----Release Notes----
[]
-------------
MOE_MIGRATED_REVID=98839020";non_debt
Fixed the TestQuestionMark by changing the TermQuery to WildcarQuery for the first test.  Now succeeds without failure.;non_debt
Updated product versions in filter.properties;non_debt
add generateId to parameter: parser => router;non_debt
Upgrade spring;non_debt
"AMBARI-21569.Users randomly getting ""HDFS020 Could not write file"" exceptions while running query from Hive View(Venkata Sairam)";non_debt
Convert line endings to unix-style;non_debt
Merge branch 'STORM-853' of github.com:HeartSaVioR/storm;non_debt
Tweak for gl.;non_debt
HIVE-18789: Disallow embedded element in UDFXPathUtil (Daniel Dai, reviewed by Thejas Nair);non_debt
"Merge pull request #507 from liyinan926/gobblin-yarn
Unit tests for Gobblin Yarn part II";non_debt
GEODE-1834: initilize the socketcreator with the correct ssl settings;non_debt
Sort entities in the application tree by their ID;non_debt
"Add EntitySpecs.spec(Class)
- Use EntitySpecs.spec() instead of BasicEntitySpec.newInstance()";non_debt
seems to hang on slow HP box, ensure it does not stop rest of the tests using autoFailSupport;non_debt
Optimize: disable tooltip transition at first show;non_debt
"ARROW-3363: [C++/Python]��Add helper functions to detect scalar Python types
Closes #2659 from xhochy/ARROW-3363 and squashes the following commits:
3560fd35 <Kriszti��n Sz��cs> flake8
ffcc20c8 <Korn, Uwe> Rename functions to _value
c7115214 <Korn, Uwe> ARROW-3363: ��Add helper functions to detect scalar Python types";non_debt
merge from 0.7;non_debt
"Bump ver.jetty from 9.4.36.v20210114 to 9.4.38.v20210224 (#935)
Bumps `ver.jetty` from 9.4.36.v20210114 to 9.4.38.v20210224.
Updates `jetty-servlet` from 9.4.36.v20210114 to 9.4.38.v20210224
Updates `jetty-servlets` from 9.4.36.v20210114 to 9.4.38.v20210224
Updates `jetty-webapp` from 9.4.36.v20210114 to 9.4.38.v20210224
Updates `jetty-xml` from 9.4.36.v20210114 to 9.4.38.v20210224";non_debt
CAMEL-850: camel-mina should preserver headers. Added missing svn:ignore to folders;non_debt
TS-418 Added the appropriate licesnses as well.;non_debt
Initial work on job status display;non_debt
CLOUDSTACK-1490: deb packaging tomcat fixes;non_debt
AVRO-38.  Add Python support for fixed-sized types.  Contributed by sharad.;non_debt
fix travis;non_debt
"Fix IllegalArgumentException in TaskLockBox.syncFromStorage() when updating from 0.12.x to 0.12.2 (#6086)
* Fix TaskLockBox.syncFromStorage() when updating from 0.12.x to 0.12.2
* Make the priority of taskLock nullable
* fix test
* fix build";non_debt
Wait for RemoteTestServer;non_debt
Add MonitorConfig poller, manager failure logs;non_debt
Tomcat deploy;non_debt
Merge branch 'cassandra-1.2' into trunk;non_debt
fix temp_view undef.;non_debt
Updating test configuration constants.;non_debt
all strategies are final as they have private constructors.;non_debt
Add guard checking for `getGroovydoc`;non_debt
Update the site to prefer https instead of http.;non_debt
"Add job dependency workflow test
1. Add an option to enable number of partion varies in TaskTestBase
2. Add new test for workflow test for parallel jobs testing.";non_debt
CLOUDSTACK-7744: UI > Instances > detailView > Change Service Offering > show generic notification.;non_debt
CAMEL-9578 - Reduce object creation in InfinispanProducer;non_debt
Moved test for convolution with dilate to test_operator.py;non_debt
set svn:eol-style to native;non_debt
"Add LookupJoinableFactory. (#9281)
* Add LookupJoinableFactory.
Enables joins where the right-hand side is a lookup. Includes an
integration test.
Also, includes changes to LookupExtractorFactoryContainerProvider:
1) Add ""getAllLookupNames"", which will be needed to eventually connect
   lookups to Druid's SQL catalog.
2) Convert ""get"" from nullable to Optional return.
3) Swap out most usages of LookupReferencesManager in favor of the
   simpler LookupExtractorFactoryContainerProvider interface.
* Fixes for tests.
* Fix another test.
* Java 11 message fix.
* Fixups.
* Fixup benchmark class.";non_debt
"docs: add configuration file cross references
Add a simple 'configfile' extension that adds indexing for configuration
files. Apply this throughout the configuration files documentation
and fix various other warts.";non_debt
"AVRO-1238. C: EOF detection in avro_file_reader_read_value
This function now returns the builtin `EOF` constant when end-of-file is
detected.  `0` still indicates a successful read, and other results indicate
errors.
Contributed by Michael Cooper.";non_debt
Upgrade Optiq;non_debt
"Merge branch 'metrics-register' of https://github.com/revans2/incubator-storm
STORM-235: Registering a null metric should blow up early";non_debt
[maven-release-plugin] prepare for next development iteration;non_debt
AMBARI-22017 stack advisor recommends all components on single host for HDP-2.6 Ambari trunk build (dsen);non_debt
CAMEL-2954: camel-mybatis component. Support for pojo statement pending. And for consumer.;non_debt
Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/incubator-stratos;non_debt
"Revert ""cloudstack UI - Static NAT, Port Forwarding and Firewall Implementation on JuniperSRX - IP Address page - configuration - Firewall - exclude ICMP from Protocol dropdown.""
This reverts commit b7ccae0dde6f6949e5314036a7aa71460d676316.";non_debt
HDDS-563. Support hybrid VirtualHost style URL. Contributed by Bharat Viswanadham.;non_debt
Network page - implement new advanced search.;non_debt
"[CARBONDATA-3733] Fix Incorrect query results on mv with limit
Why is this PR needed?
Issue 1:
After creating an materilaised view, queries with simple projection and limit gives incorrect results.
Issue 2:
Compact IUD_DELTA on materilaised view throws NullPointerException, because SegmentUpdateStatusManager is not set
Issue 3:
Queries with order by columns not in projection for create mv's, gives incorrect results.
What changes were proposed in this PR?
Issue 1:
Copy subsume Flag and FlagSpec to subsumerPlan while rewriting with summarydatasets.
Update the flagSpec as per the mv attributes and copy to relation.
Issue 2:
Set SegmentUpdateStatusManager to CarbonLoadModel using carbonTable in case of IUD_DELTA compaction
Issue 3:
Order by columns has to be present in projection list during create mv.
This closes #3651";non_debt
fix #80;non_debt
[CXF-6686] Updating ClientProxyImpl to do the best effort at mapping BeanParam bean's PathParam values to class-level template vars;non_debt
Merge branch '1.6.0-SNAPSHOT';non_debt
"[TRIVIAL][DOCS][STREAMING][SQL] The return type mentioned in the Javadoc is incorrect for toJavaRDD, ��_
## What changes were proposed in this pull request?
Change the return type mentioned in the JavaDoc for `toJavaRDD` / `javaRDD` to match the actual return type & be consistent with the scala rdd return type.
## How was this patch tested?
Docs only change.
Closes #13954 from holdenk/trivial-streaming-tojavardd-doc-fix.";non_debt
CAMEL-8663: activating the disabled tests as we have a new cxf;non_debt
GUACAMOLE-635: Merge require Java 1.8 for all Java components except guacamoole-common;non_debt
Get the list of allowed languages from the environment;non_debt
LUCENE-7970: Handle the case where we generate only a pair of identical planes, as might happen when the center is near a pole.;non_debt
GEODE-5656: Upgrades Gradle to 4.10 (#2397);non_debt
"Merge pull request #8176 from ibzib/update-metrics
[BEAM-6865] Move MetricsApi updates from flink.metrics to core.metrics";non_debt
[KARAF-4863] Trim down the number of configuration files in apache-karaf-minimal and static framework;non_debt
"TOMEE-2972 isNullable got removed with CDI-2.0
And we finally also removed that parameter from the OWB ct.
No functional change.";non_debt
Padding on dropdowns with icons;non_debt
comply with g++ signed/unsigned warnings;non_debt
baseline test added/fixed.;non_debt
Fixed another build issue on Ubuntu, errors ignoring return value;non_debt
GG-7663 - Fair affinity implementation POC;non_debt
[maven-release-plugin] prepare for next development iteration;non_debt
This closes #577;non_debt
Allow DeferredSupplier in setConfig and fix deprecated ConfigKey usage;non_debt
"More updates, describing changes to recommended use of environment vars
and new Python stuff";non_debt
2.0.0 Release Notes;non_debt
removed shale integration for now until the application works correctly with shale;non_debt
Remove isUnbounded option, and the corresponding ExampleUtils constructor;non_debt
# GG-8416 Use NIOServer in java client;non_debt
More features can install in karaf;non_debt
Migrate integration tests to spark 2.4.4;non_debt
JSF 2.0 should be okay for Tobago 3.0;non_debt
89826: SystemML Engine - Refactoring inter-procedural analysis (moved from parser to hops);non_debt
Update streaming connectors blog post's publication date;non_debt
Fix links to documentation in Javadoc;non_debt
Reworked compiler post pass to be generic for all flat record models.;non_debt
fixed conflicts and the currentorganization;non_debt
STORM-1153 Use static final instead of just static for class members;non_debt
jenkins config: Prepare for 4.1.x release cycle;non_debt
Move some deps into parent pom, update some other deps;non_debt
DRILL-1655:  Fix CanNotPlan issue when join Mongodb and other datasource, by ensuring Mongodb plugin return one single instance for each table reference.;non_debt
feature:readme add test command;non_debt
"[FLINK-11533] [container] Find job jar on classpath
[pr-review] Address comments";non_debt
[KARAF-1646] Upgrade to Pax Web 2.0.2;non_debt
"Revert ""[SPARK-30119][WEBUI] Add Pagination Support to Streaming Page""
This PR reverts #28439 due to that PR breaks QA build.
Closes #28747 from sarutak/revert-SPARK-30119.";non_debt
Merge branch 'deployment' of https://git-wip-us.apache.org/repos/asf/infrastructure-puppet into deployment;non_debt
CLOUDSTACK-5977 Fixed quotation mark issue;non_debt
HIVE-22955 PreUpgradeTool can fail because access to CharsetDecoder is not synchronized (Gergely Hanko, reviewed by Miklos Gergely);non_debt
"THRIFT-2814 args/result classes not found when no namespace is set
Client: Haxe
Patch: Jens Geyer
This closes #275
Fixes remaining issues regarding proper Haxe class and package names capitalization.";non_debt
moved activeio into the optional section;non_debt
"CLOUDSTACK-8035: Generate and store X509Cert and reuse this for SAML
The fix generates X509Certificate if missing from DB and uses that for eternity.
SAML SP metadata remains same since it's using the same X509 certificate and
it remains same after restarts. The certificate is serialized, base64 encoded
and stored in the keystore table under a specific name. For reading, it's
retrieved, base64 decoded and deserialized.";non_debt
"Merge pull request #2138 from apache/keep-dbprop-after-rewriting-shardmap
Keep database property after overwriting shard map";non_debt
BOOKKEEPER-479: Fix apache-rat issues in tree (ivank via fpj);non_debt
"Ensure that injector is not used in Akka constructors to avoid ""cannot serialize injector"" errors";non_debt
Jenkins nightly maven with static build script and gpu (#13767);non_debt
TS-2071 Remove proxy.config.http.session_auth_cache_keep_alive_enabled remnants;non_debt
Regen;non_debt
"Merge remote-tracking branch 'origin/inverted-index' into simplify_deployment
Conflicts:
	.gitignore
	common/src/main/java/org/apache/kylin/common/KylinConfig.java
	conf/kylin.properties
	examples/test_case_data/minicluster/b-kylin/kylin.properties
	examples/test_case_data/minicluster/b-kylin/meta/kylin.properties
	job/src/test/java/org/apache/kylin/job/ImportHBaseData.java";non_debt
Merge branch 'STORM-2330' of https://github.com/arunmahadevan/storm into STORM-2330-merge;non_debt
SOLR-8992: Restore Schema API GET method functionality removed in 6.0 added back another test and fixed test errors;non_debt
move trident examples to own package;non_debt
"[FLINK-12595][kinesis] Interrupt thread at right time to avoid deadlock
- Inside testOriginalExceptionIsPreservedWhenInterruptedDuringShutdown,
consumerThread.interrupt() was getting absorbed inside
KinesisDataFetcher's while(running) loop, therefore
TestableKinesisDataFetcherForShardConsumerException's awaitTermination()
wasn't getting interrupted by it. This led to deadlock, with
KinesisDataFetcher waiting on the test code to send the interrupt, and
the test code waiting for KinesisDataFetcher to throw the expected
exception.
- Now, the test code waits until KinesisDataFetcher is inside
awaitTermination() before producing the interrupt, so it can be sure
that the interrupt it produces will be received/handled inside
awaitTermination().";non_debt
"Merge pull request #4397
[BEAM-3458] Fix value encoding for Create";non_debt
#2384 merge oracle revoke;non_debt
Merge branch 'ios-feature-20170118' into ios-feature-20170118-new-slider-neighbor-fix;non_debt
In Jersey 2 need the security annotation on the very last resource method that is called.;non_debt
"Fix test test/etap/160-vhosts.t
It was broken after the vendor property was added.";non_debt
Added javadoc for choose CTR;non_debt
"[FLINK-21006] Fix hbase 1.4 tests on Hadoop 3.x
This closes #14770";non_debt
revert change of max file size to long as it will impact index size and 2gb is a reasonable max atm;non_debt
CXF-4662 - remove accidentally committed eclipse pmdruleset file and added an ignore for pmdruleset to cxf-api;non_debt
HADOOP-10075. addendum to fix compilation on Windows;non_debt
[QNN] Use Int16 upcast in Fallback Conv2D. Fix test names. (#4329);non_debt
Add mapPartitions(), glom(), countByValue() to Python API.;non_debt
"[FLINK-8703][tests] Migrate tests to MiniClusterResource (batch #1)
This closes #5535.";non_debt
Put setting of initialization controls in better order;non_debt
CLOUDSTACK-7212: Failed creating LB rule on public port 8081 for VR as LB provider;non_debt
"Merge pull request #1980 from kadaan/Fix_for_#1979
Change AWS security to credentials providers.";non_debt
AMBARI-15026 Hadoop metrics emit interval seems to be 1 minute instead of 10 seconds default (dsen);non_debt
YARN-5049. Extend NMStateStore to save queued container information. (Konstantinos Karanasos via asuresh);non_debt
"IGNITE-1306: Moved ""AbstractTarget"" which is a root class for all basic platform classes to Ignite.";non_debt
Using real non-pooled multithreaded access to test concurrent code execution on a stateful bean.;non_debt
Update index.adoc;non_debt
include BigInteger as compatible class to Integer;non_debt
[FLINK-8774] [flip6] Make shut down of ResourceManagerRunner non blocking;non_debt
only show 'manage keys' button on ds forms if protocol>0 or signingAlgorithm is not null but only once the change is persisted;non_debt
"Merge pull request #2036 from gianm/no-doclint
Disable javadoc linting.";non_debt
TS-2991: Updating Changes;non_debt
Adds partial_blind_route sni action;non_debt
IGNITE-8538 Web Console: Refactor redirecting to default state.;non_debt
Merge branch 'tp32';non_debt
"Remove POutput#recordAsOutput
Add PValue#setDefaultName, for composite POutputs to use when they are
being finalized.
Expand POutput#finishSpecifyingOutput to take the name of the transform
that is being finished.";non_debt
Merge branch 'dev' of ssh://github.com/shardingjdbc/sharding-jdbc into dev;non_debt
"Merge pull request #2 from beckhampu/master
project init";non_debt
corrected launch-app-package command;non_debt
Skip test instead of expecting a failure;non_debt
"Add printreplicationworkerid option to ListUnderreplicatedCmd.
Descriptions of the changes in this PR:
Add printreplicationworkerid option to ListUnderreplicatedCmd.
This helps in knowing who is holding lock on UnderReplicated ledger,
and diagnosing that ReplicationWorker if we are seeing any issues in
rereplication.
This closes #1446 from reddycharan/printreplicationworkerid";non_debt
ACCUMULO-2181 Fixing pom.xml error;non_debt
Merge branch 'master' of github.com:tinkerpop/tinkerpop3;non_debt
HBASE-7908 Add jstack logs in hbase-common.sh when killing the server;non_debt
Finalie and limit scope for classes in gremlin-driver.;non_debt
Backported EC2 cloud manager from Stratosphere 0.2 to 0.1.1;non_debt
allow CountLocalStep to calculate path lengths / count path objects;non_debt
[CAMEL-12625] Create Camel FHIR example;non_debt
"CLOUDSTACK-5281:
Resource limit shouldnt be counted for resources with display flag = 0. Correcting this for the networks at the moment.";non_debt
HBASE-17314 Limit total buffered size for all replication sources;non_debt
"ARTEMIS-1485 ActiveMQTestBase.threadDump should print information about locks and deadlocks
Improved implementation of ActiveMQTestBase.threadDump which uses ThreadMXBean
for getting information about threads including locks and deadlocks.";non_debt
CLOUDSTACK-292: Add commons-fileupload to cloud-deps;non_debt
ACCUMULO-4106 Correct build.sh to recommend correct Git tag name for releases.;non_debt
"[ZEPPELIN-4528]bump up the bigquery dependencies version
### What is this PR for?
Improvements to have latest bigquery google api libs
### What type of PR is it?
Improvement
### Todos
N/A
### What is the Jira issue?
[ZEPPELIN-4528] https://issues.apache.org/jira/browse/ZEPPELIN-4528
### How should this be tested?
The Travis CI
https://travis-ci.org/fred521/zeppelin/builds/631753220
### Screenshots (if appropriate)
N/A
### Questions:
* Does the licenses files need update? No
* Is there breaking changes for older versions? No
* Does this needs documentation? No
Closes #3583 from fred521/fdai/bump_up_bigquery_dependencies and squashes the following commits:
d660ba262 [fdai] bump up the gson";non_debt
HIVE-9766: Add JavaConstantXXXObjectInspector;non_debt
Merge branch 'storm-1452-profiler-broken-by-default' of github.com:d2r/storm;non_debt
fix #39;non_debt
"HADOOP-16605. Fix testcase testSSLChannelModeConfig
Contributed by Sneha Vijayarajan.";non_debt
24999: SystemML applications build and install - add build.xml for all applications.;non_debt
[KARAF-5096] Fix the bundle:info command, help command, etc...;non_debt
Adding hasScalingDependents to all the monitor classes;non_debt
Upgrade Drill to version 1.14.0;non_debt
Rework for defect foundby Hans.;non_debt
"NIFI-27:
- Addressing resizable issue after updating jquery UI.";non_debt
"[FLINK-3163] [scripts] Configure Flink for NUMA systems
Start a TaskManager on each NUMA node on each worker when the new
configuration option 'taskmanager.compute.numa' is enabled.
This closes #3249";non_debt
CAMEL-11070: camel-aws - SQS allow to configure AWS hostname.;non_debt
fixes NPE exception in ClientState.hasKeyspaceSchemaAccess(...) method introduced by CASSANDRA-3759;non_debt
"JENA-159 : ""LOAD <quadsFormat>"" loads the dataset.";non_debt
"CAMEL-9097 XSLT Aggregation Strategy. Thanks to Ranil Wijeyratne.
This closes #598.";non_debt
"[ZEPPELIN-4918] Add Table of Contents to Sidebar
### What is this PR for?
This PR adds a Table of Contents (ToC) to the new Zeppelin UI. The ToC allows quick navigation through long notebooks. The ToC is generated based on the presence of Heading tags in the results.
### What type of PR is it?
Improvement
### Todos
### What is the Jira issue?
https://issues.apache.org/jira/browse/ZEPPELIN-4918
### How should this be tested?
Travis CI: https://travis-ci.com/github/pranavtharoor/zeppelin/builds/173370001
Manual steps:
1. Create a notebook
2. Add different levels of Markdown headings or other inline HTML heading tags
3. Run the paragraphs so that the result is shown
4. Click the ToC icon in the sidebar ribbon to open the ToC. The ToC should be generated/refreshed
5. Try clicking on the ToC rows to scroll to the respective paragraph
### Screenshots (if appropriate)
### Questions:
* Does the licenses files need update? No
* Is there breaking changes for older versions? No
* Does this needs documentation? No
Closes #3834 from pranavtharoor/ZEPPELIN-4918 and squashes the following commits:
1b67911bf [Pranav Tharoor] [ZEPPELIN-4918] Fix breaking components and sidebar refresh on adding a new notebook
c5c362982 [Pranav Tharoor] [ZEPPELIN-4918] Add Table of Contents to Sidebar";non_debt
all tests passed. Ready for merge;non_debt
"[tests] disabled cassandra connector test and python function test (#2683)
These 3 tests are having some weird problems. Disabling them to bring integration tests back to normal.
Will fix them in the subsequent changes
* pull mysql image
* add empty constructor";non_debt
HIVE-13953: Issues in HiveLockObject equals method (Chaoyu Tang, reviewed by Yongzhi Chen);non_debt
"ARTEMIS-1097 Respect the message priority value in the AMQP message
Ensure that the header value for priority is read and returned in a form
that is scaled such that it won't cause an IndexOutOfBoundsException
from the QueueImpl priority array.  Adds some additional testing for
message priority support.";non_debt
Small changes and error checking;non_debt
"Fix endless loop/compaction of schema_* CFs due to broken timestamps
patch by Pavel Yaskevich reviewed by Brandon Williams for CASSANDRA-4880";non_debt
"MINOR: Introduce ProducerIdGenerator trait (#10009)
`ProducerIdManager` is an existing class that talks to ZooKeeper directly.  We won't have ZooKeeper
when using a Raft-based metadata quorum, so we need an abstraction for the functionality of
generating producer IDs.  This PR introduces `ProducerIdGenerator` for this purpose, and we pass
an implementation when instantiating `TransactionCoordinator` rather than letting
`TransactionCoordinator.apply()` itself always create a ZooKeeper-based instance.";non_debt
"KafkaIndexTask.
Reads a specific offset range from specific partitions, and can use dataSource metadata
transactions to guarantee exactly-once ingestion.
Each task has a finite lifecycle, so it is expected that some process will be supervising
existing tasks and creating new ones when needed.";non_debt
[BEAM-3301] Adding SDF Go Dataflow translation. (#12629);non_debt
HBASE-16618 Procedure v2 - Add base class for table and ns procedures;non_debt
"[SPARK-25347][ML][DOC] Spark datasource for image/libsvm user guide
## What changes were proposed in this pull request?
Spark datasource for image/libsvm user guide
## How was this patch tested?
Scala:
Java:
Python:
R:
Closes #22675 from WeichenXu123/add_image_source_doc.";non_debt
HIVE-760. Add version info to META-INF/MANIFEST.MF. (Bill Graham via zshao);non_debt
CLOUDSTACK-6726: Fixing BVT test case test_network.py;non_debt
Unable to parse DFDL character entity hexadecimal code point in <document> tag;non_debt
Fix for status always showing Not Resolved in emails (#1240);non_debt
Merge branch 'tp34';non_debt
"Closes #794
Test Framework TestNG runner
Useful for running the test framework tests as live tests on the project.
From the test included in the PR, example usage:";non_debt
HDDS-2571. Handle InterruptedException in SCMPipelineManager (#295);non_debt
use slf4j-api for logging;non_debt
Required links on all ASF PMC Pages;non_debt
HBASE-1031  Add the Zookeeper jar;non_debt
"Changed restartNetwork command flow:
* API requires network id to be passed in (it was optional before)
* restartNetwork calls restart() method of all network elements in the system, and it's up to the element to decide which actions to take on the restart (for example, for Virtual Router it's IPAssoc/applyPF/applyLBRules).";non_debt
"HOP-257
fix java paths for windows";non_debt
fixed options not being passed correctly to client;non_debt
Merge branch 'inverted-index' of https://github.com/KylinOLAP/Kylin into inverted-index;non_debt
"Make PTransform.apply Abstract
Primitive PTransforms should create the appropriate primitive output
type. Composite PTransforms should override apply.";non_debt
DRILL-3120: Windows startup throws NPE;non_debt
cqlsh: correct the rest of libedit detection on windows;non_debt
LUCENE-5207: update maven config;non_debt
SOLR-11446: Heavily edit the 'near real time searching' page in the reference guide, fix doc build error;non_debt
HIVE-11821: JDK8 strict build broken for master (Gopal V, reviewed by Sergey Shelukhin);non_debt
Merge branch 'cassandra-3.0' into cassandra-3.11;non_debt
Be very cautious as to what to trust as being transactional...;non_debt
TS-3505 Coverity is smarter than me...;non_debt
"enable hidden arg (#3939)
refactor lr_mult, wd_mult, ctx_group
revert test
update submodule
fix";non_debt
Refactor TypedJob (#919);non_debt
Add subtract to JavaRDD, JavaDoubleRDD, and JavaPairRDD.;non_debt
Log the AccessTokenService error;non_debt
included double quotes around scalars to handle paths with spaces;non_debt
Fix couch_key_tree:merge_extend arg types;non_debt
"docs: update contact and contributor corner
Also:
- added a new page for 'Samza Enhancement Proposal' (SEP).
- removed mailing-list.md and design-documents.md
- updated the layout page
Closes #650 from pdu-mn1/docs-contact-contrib";non_debt
[SCB-675] add generate proto from swagger unit test;non_debt
"SOLR-10286: fix test we were writing to read-only dir.
Expand solrconfig-managed-schema.xml to have toggle-able elements vis system property flags";non_debt
"fix broken test that just now fails, why?
Patch by eevans";non_debt
Merge branch 'cassandra-3.0' into trunk;non_debt
"[FLINK-1726][gelly] Added Community Detection Library and Example
This closes #505";non_debt
"bug 8099: returning systemvms for direct networking
status 8099: resolved fixed";non_debt
"Add AbstractTransformer.ALLOW_CYCLIC_PUBLISHING
If set to true, then allows the transformer to read and publish on the
same sensor. This is needed for some use-cases in
brooklyncentral/advanced-networking.";non_debt
"Fix gogo webconsole plugin
Broken by 9b9dd7947577dec377808344e78736988f7e8428";non_debt
JDBC driver can be loaded from external location using URLClassLoader;non_debt
GROOVY-2448: groovy hangs if enum range includes last value (additional tests);non_debt
"NIFI-3718: Fixed timezone issue in TestAvroReaderWithEmbeddedSchema
This closes #1738";non_debt
"Merge pull request #253 from apache/humbedooh/INFRA-14661
INFRA-14661: Add Fineract PMC to auth templates";non_debt
"[SYSTEMML-2105] Support single-precision conv2d with MKL
Closes #723.";non_debt
Document -i on Gremlin Server.;non_debt
tweak: use `polyline.style.lineWidth` instead of `lineStyleModel.get('width')`.;non_debt
Merge branch 'cassandra-2.1' into cassandra-2.2;non_debt
GEODE-4337, GEODE-4346 Geode-native user guide: Document function execution examples;non_debt
"Merge pull request #343 from markhamstra/spark-601
lookup() needn't fail when there is no partitioner";non_debt
[ROCKETMQ-178] Fix -p -m options closes apache/incubator-rocketmq#93;non_debt
Upgrade Kafka and related bundle to version 0.11.0.0;non_debt
CLOUDSTACK-747: internal LB in VPC - fix a bug that Source IP Address column was not filled after Add Internal LB action was complete.;non_debt
TOBAGO-1154: Show a warning, if there is no JavaScript activated.;non_debt
HIVE-10621: serde typeinfo equals methods are not symmetric (Alex Pivovarov via Jason Dere);non_debt
"Merge pull request #1359 from DataTorrent/revert-1350-ByteArrayToStringConverter
Revert ""ByteArrayToStringConverter""";non_debt
GUAC-1100: Add batch add/remove to permission sets.;non_debt
"[SPARK-27175][BUILD] Upgrade hadoop-3 to 3.2.0
## What changes were proposed in this pull request?
This PR upgrade `hadoop-3` to `3.2.0`  to workaround [HADOOP-16086](https://issues.apache.org/jira/browse/HADOOP-16086). Otherwise some test case will throw IllegalArgumentException:
## How was this patch tested?
manual tests
Closes #24106 from wangyum/SPARK-27175.";non_debt
AMBARI-12134. Update poms to target 1.7 and 1.6 JREs. (Jonathan Halterman via yusaku);non_debt
fix holes in policies/start-sequence used by controller and geodns-service, and tidy up use of hostname / internal url / external url, so that clusters can be geo-dns-balanced;non_debt
"This closes #4049: [BEAM-3081] NonNull by default for sdk/transforms and below
  NonNull by default in sdk/transforms/splittabledofn
  NonNull by default in sdk/transforms/join
  NonNull by default in sdk/transforms/display
  NonNull by default in sdk/transforms/reflect
  NonNull by default in sdk/transforms/windowing
  NonNull by default in sdk/transforms";non_debt
[KARAF-2581] Upgrade to jledit 0.2.1;non_debt
Modified API of NetworkInputDStreams and got ObjectInputDStream and RawInputDStream working.;non_debt
fix project template;non_debt
update to maven-resource-plugin 2.3;non_debt
CAMEL-9400: Camel-Elasticsearch: Add Multiget Operation support;non_debt
"[AIRFLOW-6359] spark_submit_hook.py status polling interval config (#6909)
* AIRFLOW-6359
* pep checks
* make travis CI refire
* new section = bad
* move poll_interval into the operator instead of .cfg
* review comments";non_debt
"Configurable data source for offloaded messages (#8717)
Fix issue: https://github.com/apache/pulsar/issues/8591
This PR include:
* API change in command tools 
* Related implementation with tests
* Related docs in cookbook
By the way  log4j dependency is removed for module `managed-ledger` because now the whole project use log4j2 as the default logger framework.";non_debt
"Merge pull request #1299 from jbonofre/KARAF-7036
[KARAF-7036] Upgrade to Aries Proxy Impl 1.1.9";non_debt
CAMEL-10346 - Upgrade Jsch bundle to version 0.1.54;non_debt
"ARROW-10089: [R] inject base class for Array, ChunkedArray and Scalar
The impetus for this change was to get S3 Ops method dispatch to work for Array == Scalar. This is tested in the third commit.
Closes #9345 from nealrichardson/arrow-datum";non_debt
[UT] resolve metric ut fails (#3975);non_debt
"fix a JS error: $detailView.data(""list-view-row"") is undefined";non_debt
"Merge pull request #2881 from DenisIstomin/fix-kdb-asciidoc
Fix kbd macro in asciidoc";non_debt
make git check for tabs in indent, trailing whitespaces, and dangling blank lines in java files;non_debt
"THRIFT-4764: Use new syntax for clippy skipping
Client: rs";non_debt
YARN-5229. Refactor #isApplicationEntity and #getApplicationEvent from HBaseTimelineWriterImpl. (Vrushali C via gtcarrera9);non_debt
Fix requirements.;non_debt
CAMEL-15946: Regen;non_debt
Added support for S3 Reduced Redundancy Storage;non_debt
AMBARI-13623 Ranger smart config: Sync source multiselectbox is colliding with subsection-tab. (ababiichuk);non_debt
HIVE-20293: Support Replication of ACID table truncate operation (Mahesh Kumar Behera, reviewed by Sankar Hariappan);non_debt
Fixed alerts tests;non_debt
"exclude classpath with mini new
Tried running phrasecount with mini and tserver was looking for classes in hdfs.";non_debt
Remove Intellij files from git.;non_debt
"""split"" class has flex: 100% in mobile screen";non_debt
Add account-level parameter UI;non_debt
"[SPARK-33918][SQL] UnresolvedView should retain SQL text position for DDL commands
### What changes were proposed in this pull request?
Currently, there are many DDL commands where the position of the unresolved identifiers are incorrect:
, whereas the `pos` should be `10`.
This PR proposes to fix this issue for commands using `UnresolvedTable`:
### Why are the changes needed?
To fix a bug.
### Does this PR introduce _any_ user-facing change?
Yes, now the above example will print the following:
### How was this patch tested?
Add a new suite of tests.
Closes #30936 from imback82/position_view_fix.";non_debt
"[SPARK-24369][SQL] Correct handling for multiple distinct aggregations having the same argument set
## What changes were proposed in this pull request?
bring back https://github.com/apache/spark/pull/21443
This is a different approach: just change the check to count distinct columns with `toSet`
## How was this patch tested?
a new test to verify the planner behavior.
Closes #21487 from cloud-fan/back.";non_debt
*[android] fix v8 compile potential crash & closed v8  snapshot;non_debt
This closes #3090;non_debt
Add new ldap host in AWS US EAST;non_debt
More try-with-resources BatchWriter updates (#989);non_debt
Enabled all structure tests again.;non_debt
Fixing the word bad assumptions about field ordering;non_debt
"HAWQ-927. Pass ProjectionInfo data to PXF
This commit makes the necessary modifications to the HAWQ side of
the codebase to add a list of indices of projected columns";non_debt
The test using Kryo for SerDe is passing now.;non_debt
"Avoid badarith error during cluster upgrade
BugzID: 26631";non_debt
tests: add instance id to CoreContainer;non_debt
gg-11427 : WIP.;non_debt
Coverity issue 1116812 - Replacing concatenation with optionsBuffer.append(option.getKey()).append('=').append(option.getValue()).append(',');non_debt
revert pom;non_debt
"CAMEL-13807: Add Component DSL fluent builders (#3521)
* CAMEL-13807: First design of the component DSL APIs
* CAMEL-13807: First design of the component DSL APIs
* CAMEL-13807: Progress on the component builder
* CAMEL-13807: Progress on the component builder
* CAMEL-13807: First design of the component DSL APIs
* CAMEL-13807: Progress on the component builder
* CAMEL-13807: Progress on the component builder
* CAMEL-13807: Progress on the maven plugin
* CAMEL-13807: Progress on the maven plugin
* CAMEL-13807: Some refactor on the ComponentModel
* CAMEL-13807: Progress on the maven plugin
* CAMEL-13807: Progress on the maven plugin
* CAMEL-13807: Progress on the maven plugin
* CAMEL-13807: Progress on the maven plugin and working version
* CAMEL-13807: Minor improvements
* CAMEL-13807: Add working version from end to end
* CAMEL-13807: Progress on the maven plugin and working version
* CAMEL-13807: Add first tests
* CAMEL-13807: Change to generics in order to avoid explicit casting from the user
* CAMEL-13807: Add tests and regen
* CAMEL-13807: Migrate to the new ComponentModel
* CAMEL-13807: Make sure to sync unique maven artifects into the pom file
* CAMEL-13807: Add more test cases to componentdsl and fix CS in componentsdsl
* CAMEL-13807: Add tests for maven plugin and fix CS
* CAMEL-13807: Regen
* CAMEL-13807: Replace Property configurator with generated setters and add an example
* CAMEL-13807: Push AbstractComponentBuilder
* CAMEL-13807: Fix component aliases and add register API";non_debt
"Merge pull request #2659 from KacerCZ/netbeans-5228-enable-return-breakpoint
[NETBEANS-5228] Enable 'return' breakpoint in PHP debugger";non_debt
"[BEAM-8280] Fix IOTypeHints origin traceback on partials (#10927)
* lint fix";non_debt
"Avoid double counting bytes read in GroupingShuffleReader
In the presence of dynamic split and re-iteration of the ValueIterator, it was possible for the bytes read counter to count a record twice. This change moves the counter update to the underlying GroupingShuffleEntryIterator instead of the GroupingShuffleReaderIterator where size information is not directly available.
----Release Notes----
[]
-------------
MOE_MIGRATED_REVID=107444345";non_debt
ARTEMIS-120 Upgraded Netty to latest 4.0.x.;non_debt
"Bypass security check when reading _security object
Tender #57";non_debt
add new test to Makefile;non_debt
Merge branch 'cassandra-3.11' into trunk;non_debt
Merge branch 'APEXMALHAR-2139' of https://github.com/aayushia/apex-malhar;non_debt
ENGR-1667 WebClusterGroup shouldn't be a group, it should be an entity;non_debt
"TS-4099: add Lua bindings for custom metrics
Implement custom metrics in terms of Lua bindings. We export a
minimal API that constructs metrics and implicitly registers an
evaluation function. We periodically evaluate all the evaluation
functions and update their corresponding metrics.
Metrics are implicitly registered when they are loaded, so there
is no need to mention anything in mgmt/RecordsConfig.cc.
The metrics registration and evaluation syntax looks like this:
  integer 'proxy.node.http.user_agents_total_documents_served' [[
      proxy.process.http.incoming_requests
  ]]";non_debt
KYLIN-1741 Diagnosis logs to kylin.log;non_debt
"CLOUDSTACK-7121: agent: Make IPv4/IPv6 preference configurable
This allows us to have the Agent connect to the Management Server
over IPv6 if that is listening on :::8250
With this patch it is possible to deploy a IPv6-only KVM Agent where
IPv4 traffic is still forwarded over the bridges, but the KVM Agent
itself does not have IPv4 connectivity.";non_debt
AMBARI-539. Create a spec file with less dependencies for HMC. (Contributed by Hitesh);non_debt
AMBARI-12489. Ambari server deadlock while deploying using blueprints.;non_debt
"Merge pull request #477 from andyperlitch/birds_eye#399
Improvements to LogicalDagWidget. Fixes #399, #473, #475, #476";non_debt
Regenerated csproj file after changes to template CTR;non_debt
Tests for reading windowed side input from resumed SDF call;non_debt
"Merge pull request #783 from sjcorbett/pom-addition
Include camp, nosql and dropwizard projects in the root pom's Sandbox profile.";non_debt
need to check state every 2 second;non_debt
tweak doco;non_debt
ACCUMULO-1478 prevent NPE when starting the shell;non_debt
Add the proxy_http module as well;non_debt
"Added changes without overwriting tests.
Posting entity instead of just the entity properties.
Cleaned up cruft in entity.";non_debt
"Merge pull request #417 from klyr/fix_bin_script_shebang
Fix shebang in mapreduce script";non_debt
TOBAGO-1441: The clickjacking / frame attack - protection should give a visible feedback;non_debt
removed faulty code to set LocalVraibleTable so that jdk1.5 won't complain. see groovy-477;non_debt
CAMEL-5042: Shutting down a thread pool should remove the pool from the internal reference list;non_debt
added until-step. updated docs. dope. Fixed #135;non_debt
SOLR-11200: A new CMS config option 'ioThrottle' to manually enable/disable ConcurrentMergeSchedule.doAutoIOThrottle. (Amrit Sarkar, Nawab Zada Asad iqbal);non_debt
Add storm.home to logback/cluster.xml so workers can find it.;non_debt
HIVE-22829 : Decimal64: NVL in vectorization miss NPE with CBO on (Ramesh Kumar via Ashutosh Chauhan);non_debt
YARN-10020. Fix build instruction of hadoop-yarn-ui. (#1750);non_debt
removes environment specific details;non_debt
AMBARI-15862. NPE when deleting a host (Daniel Gergely via oleewere);non_debt
Refactor JDBCDatabaseCommunicationEngine;non_debt
refact: only set text props when necessary. rename setTextStyle to createTextStyle.;non_debt
Merge branch 'cassandra-2.2' into cassandra-3.0;non_debt
[KARAF-1133]ensure have data/tmp folder in distribution which is the java.io.tmpdir;non_debt
LUCENE-5919: fix IndexWriter exception handling when calling IndexFileDeleter.decRef;non_debt
"DRILL-5849: Add freemarker lib to dependencyManagement to ensure proper version is used when resolving dependency version conflicts
closes #977";non_debt
https://issues.apache.org/jira/browse/AMQ-4485 - ensure cursor updates in same order as store orderindex via beforeCompletion with index lock. The before completion tracks ordered work that first thread completes as a unit. All updates to a destination are combined to a single sync, such that there is no cursor contention between transactions;non_debt
Fix merge conflicts;non_debt
[BEAM-1184] This closes #2177;non_debt
Merge branch '1.9';non_debt
Added confirmation messages, fixed clean.sh and updated mb configuration in cloud-controller.xml;non_debt
Updated logo;non_debt
Added .gitignore for Brooklyn;non_debt
Fixup change to MenuInfo;non_debt
exporting org.apache.stratos.autoscaler.partition from autoscaler service stub;non_debt
https://issues.apache.org/jira/browse/TOMEE-476;non_debt
Fixes AMQ-3945: QueueBrowser missing messages on first browse.;non_debt
Merge branch 'cassandra-2.1' into trunk;non_debt
actually we don't need half of this since we run only on tomcat 7 now;non_debt
Refactor reconcile removing tasks;non_debt
Add link to type hints design doc;non_debt
removed debug;non_debt
HIVE-10450: More than one TableScan in MapWork not supported in Vectorization -- causes query to fail during vectorization (Matt McCline reviewed by Gopal V);non_debt
Merge branch 'staging' of https://github.com/KylinOLAP/Kylin into staging;non_debt
# sprint-27 - Removed @Nullable from GridConfiguration;non_debt
absolute path to persistence.xml;non_debt
HBASE-15214 Valid mutate Ops fail with RPC Codec in use and region moves across.;non_debt
"checkstyle: Enable ""JavadocType"" on most files.";non_debt
Transform catalog for Python;non_debt
"Override getRootDir in LocalNfsSecondaryStorageResource to make mount
successfully on MS side. Now S3 is working.";non_debt
Merged /lucene/dev/trunk:r1445907-1446753;non_debt
fix dependency checking for GSE;non_debt
"Fix replaying pre-2.0 commit logs
patch by Aleksey Yeschenko reviewed by Jonathan Ellis for
CASSANDRA-6714";non_debt
Merge pull request #8794: Fix CountingSource example stop_position bug;non_debt
Example from Danno Ferrin using the SwingBuilder;non_debt
"fix TApplicationException not imported in Python gencode
used unconditionally in the generated code. ""from thrift.Thrift import *"" included it before r1169492 but not since.
Reviewed By: dreiss";non_debt
Merge branch 'master' of github.com:Microsoft-CISL/REEF into weimer_715;non_debt
Refactor Schema: Schema now is a fully-specified based on primitive types. Nested Schemas and arrays are also supported.;non_debt
Add license header;non_debt
Added license headers to files;non_debt
Merge remote-tracking branch 'vishwas/mifosx-255';non_debt
"import Julia binding
- enable Jenkins CI build for Julia
- add license headers to Julia source code
- update links for Julia README";non_debt
increase service logging, seems npe in the mix on intermittent failure;non_debt
enable default vhost for git.a.o;non_debt
GG-8035 GG-8136 GG-8137 Some fixes for release builds;non_debt
CAMEL-14179: microprofile fault tolerance;non_debt
"Get rid of PPMC references
Not sure why this only occurred on master CTR";non_debt
Merge branch 'master' of github.com:cloudsoft/brooklyn;non_debt
remove note about JIRA;non_debt
convert remote exceptions to local exceptions for business interfaces;non_debt
"[AIRFLOW-1231] Use flask_wtf.CSRFProtect
Use `flask_wtf.CSRFProtect` instead of
`flask_wtf.CsrfProtect`
to remove deprecation warning.
Closes #2313 from skudriashev/airflow-1231";non_debt
[STORM-3675] Check worker process death using /proc/<pid> directory (#3309);non_debt
Tweak;non_debt
"Filter the list of potential Steering Targets in Traffic Portal
The old Perl UI lists HTTP-type DSes belonging to the same CDN as the
Steering DS that aren't already targets, and this makes Traffic Portal
do the same thing.";non_debt
"Avoid comparison with param.default in type signature analysis.
This can cause issues when the result of the comparison with a defualt
is not a boolean (e.g. as is the case with numpy arrays).";non_debt
# ignite-82 Fix after merge.;non_debt
[AIRFLOW-6613] center dag on graph view load (#7238);non_debt
[FLINK-12217][table] OperationTreeBuilder.map() should perform ExpressionResolver.resolve();non_debt
"[FLINK-7855] [flip6] Add JobVertexMessageParameters
This closes #4857.";non_debt
added memory column to application list;non_debt
This closes #358;non_debt
Merge branch 'master' of https://github.com/sharding-sphere/sharding-sphere-doc;non_debt
"Fix the scheduling decision for multiple currentStates (#923)
Fix the scheduling decision for multiple currentStates and prevAssignment
In this commit, the problem of scheduling and dropping the tasks
on the slave node has been addressed.
Multiple tests have been added.";non_debt
bug 8809: listHypervisors api - when zoneId=-1 is specified, only hypervisors availble in all zones are being returned;non_debt
update (#5055);non_debt
fix Ovm network for bond device;non_debt
camel-5280 - Add addServlet for Producer;non_debt
"bugfix: etcd only kept less than 1000 modified history, it maybe fail if (#160)
* bugfix: etcd only kept less than 1000 modified history, it maybe fail if
  we only use the `modifyIndex` of data, we should check the index value
  in header too.";non_debt
"Create 4.6.2 documentation stub
This change prepares the directory structure for docs of 4.6.2. New pages are not linked from menu.
This closes #1296 from eolivelli/fix/copy-website-462";non_debt
Name the BrokerService TaskRunner ;non_debt
adds db dump link to TP;non_debt
feat: Use JSON merge patch to update integration status;non_debt
Increasing timeout for gunicorn;non_debt
Fix user in helm chart pgbouncer deployment (#11143);non_debt
Got Hadoop-Gremlin working again. Pulling out Spark was a disaster as it seems (crazy enough) that Spark was providing jars Giraph needed. I had to manually add http-commons... it wasnt in either hadoop-core or Giraph. Weird.;non_debt
"Enable FDB transaction tracing
To trace FDB transactions:
 1. Enable tracing in erlfdb application environment:
     `network_options = [{trace_enable, ...}]`
   OR with an environment variable:
     `FDB_NETWORK_OPTION_TRACE_ENABLE = """"`
 2. Set `[fabric] fdb_trace=true` configuration value
 3. Add the `x-couchdb-fdb-trace:true` header to each request that should be
   traced.
The transaction name is set to the nonce value, which is already used by
CouchDB to track API requests.
Only transactions started from the main request process will be traced. So if a
process is spawned without inheriting the `erlfdb_trace` process dict key, that
transaction will not be traced.";non_debt
[AIRFLOW-3906] Add npm compile to docker file (#4724);non_debt
Merge branch 'STORM-641';non_debt
Still trying to find cause of GUI failures;non_debt
assigning article indexes;non_debt
HDFS-13368. Ozone:TestEndPoint tests are failing consistently. Contributed by Shashikant Banerjee.;non_debt
Upgrade Chronicle Network to version 1.7.6;non_debt
"kmeans_new: handle infinite numbers
Jira: madlib_729
Filter out infinite numbers from kmeans' input.";non_debt
"Merge pull request #911 from andyperlitch/op_ctnr_subscribe.MLHR-1046
Fix for MLHR-1046";non_debt
This closes #1974;non_debt
Testing performance of entity persistence;non_debt
SOLR-4505: CHANGES entry;non_debt
HDFS-13774. EC: 'hdfs ec -getPolicy' is not retrieving policy details when the special REPLICATION policy set on the directory. Contributed by Ayush Saxena.;non_debt
"refactor(trait): nil PodSpec check
* Added a check to raise an error on nil PodSpec for affinity and toleration traits
* Related unit test
Ref #2047";non_debt
"https://issues.apache.org/jira/browse/TOMEE-130
Preparing the javascript/html and java codes for the new web interface. Loading the ""tests"" and the ""ns browser"" panels.";non_debt
oops java7 api - back to java 6;non_debt
Added STORM-2524 to Changelog;non_debt
"For tests, support RebindManager.hasPending()
Similar concept to waitForPendingComplete().";non_debt
HDDS-880. Create api for ACL handling in Ozone. (Contributed by Ajay Kumar);non_debt
"Merge pull request #483 from jbonofre/KARAF-5611
[KARAF-5611] Change java version test in karaf.bat to deal with Java 9 and 10";non_debt
Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/karaf;non_debt
Upgrade AWS SDK v2 to version 2.14.17;non_debt
Fixed bug in assignment of HOME_DIR;non_debt
"Thrift: Reorganize Cocoa library.
Summary:
External patch from Andrew McGeachie.
Just shuffle the Cocoa library files around.
Reviewed By: mcslee
Test Plan: In Andrew we trust.
Revert Plan: ok";non_debt
"Merge pull request #87 from alibaba/all-feature-hooks-windows
add ""for windows"" note";non_debt
YARN-1222. Make improvements in ZKRMStateStore for fencing (Karthik Kambatla via bikas);non_debt
Merge branch 'apache_usergrid/putting-docs-on-git' into apache_usergrid/master;non_debt
"NIFI-3745: Fixed Table caching / primary key logic in PutDatabaseRecord
This closes #1700.";non_debt
"dockerfile add application-api.properties and change application.properties to application-dao.properties (#1259)
* ConnectionFactory add paging intercepter
* remove spotbugs-annotations.jar LGPL protocol
* test
* catch exception transaction method does not take effect to modify
* .evn rollback
* DataSourceService rollback
* LogViewServiceGrpc rollback
* dockerfile add application-api.properties and change application.properties to application-dao.properties";non_debt
"Optimize PERCENTILE aggregation function (#3256)
When extracting final result, directly works on primitive double array instead of Objects";non_debt
HIVE-655. Add table functions. (Paul Yang via namit);non_debt
"Merge pull request #4892 from jbampton/fix-slack-links
Fix Slack invite links";non_debt
"[SPARK-31957][SQL] Cleanup hive scratch dir for the developer api startWithContext
### What changes were proposed in this pull request?
Comparing to the long-running ThriftServer via start-script, we are more likely to hit the issue https://issues.apache.org/jira/browse/HIVE-10415 / https://issues.apache.org/jira/browse/SPARK-31626 in the developer API `startWithContext`
This PR apply SPARK-31626 to the developer API `startWithContext`
### Why are the changes needed?
Fix the issue described in  SPARK-31626
### Does this PR introduce _any_ user-facing change?
Yes, the hive scratch dir will be deleted if cleanup is enabled for calling `startWithContext`
### How was this patch tested?
new test
Closes #28784 from yaooqinn/SPARK-31957.";non_debt
"[FLINK-1515] [gelly] Changed PageRank to use broadcast set provided by numberOfVertices() to read the number of vertices instead of passing it to the constructor.
This closes #402";non_debt
HIVE-19441 : Use LLAP test Driver for Druid test suites (Slim Bouguerra via Ashutosh Chauhan);non_debt
"[REEF-1175] Add support for network credential to O.A.R.Client.YarnClient
This addressed the issue by:
 * Adding NetworkCredential support to HttpClient which delegates to .NEt
 * HTTPClient
 * Add interface IYarnRestClientCredential which allows user to specify
 * mechanism to access their credential source
JIRA:
  [REEF-1175](https://issues.apache.org/jira/browse/REEF-1175)
Pull Request:
  Closes #812";non_debt
[streaming] CoWindow operator rework + stream iteration example added;non_debt
Merge [TRAFODION-3018] PR 1506 Fix issue with UPPER on an UPSHIFT column;non_debt
Renamed s2_ip constant to stratos_ip and removed hosts.erb file;non_debt
[FLINK-1201] [gelly] added create methods from set of edges;non_debt
Merge branch 'vrozov-MLHR-1752';non_debt
"[SPARK-6812] [SPARKR] filter() on DataFrame does not work as expected.
According to the R manual: https://stat.ethz.ch/R-manual/R-devel/library/base/html/Startup.html,
"" if a function .First is found on the search path, it is executed as .First(). Finally, function .First.sys() in the base package is run. This calls require to attach the default packages specified by options(""defaultPackages"").""
In .First() in profile/shell.R, we load SparkR package. This means SparkR package is loaded before default packages. If there are same names in default packages, they will overwrite those in SparkR. This is why filter() in SparkR is masked by filter() in stats, which is usually in the default package list.
We need to make sure SparkR is loaded after default packages. The solution is to append SparkR to default packages, instead of loading SparkR in .First().
BTW, I'd like to discuss our policy on how to solve name conflict. Previously, we rename API names from Scala API if there is name conflict with base or other commonly-used packages. However, from long term perspective, this is not good for API stability, because we can't predict name conflicts, for example, if in the future a name added in base package conflicts with an API in SparkR? So the better policy is to keep API name same as Scala's without worrying about name conflicts. When users use SparkR, they should load SparkR as last package, so that all API names are effective. Use can explicitly use :: to refer to hidden names from other packages. If we agree on this, I can submit a JIRA issue to change back some rename API methods, for example, DataFrame.sortDF().
Closes #5938 from sun-rui/SPARK-6812 and squashes the following commits:
b569145 [Sun Rui] [SPARK-6812][SparkR] filter() on DataFrame does not work as expected.";non_debt
HADOOP-10127. Add ipc.client.connect.retry.interval to control the frequency of connection retries (Karthik Kambatla via Sandy Ryza);non_debt
fixed a bug in ElementHelperTest that was introduced by new ElementHelper.attachProperties(vertex...).;non_debt
Merge and close #239;non_debt
"[FLINK-3353] CSV-related tests may fail depending on locale
This closes #1598.";non_debt
LANG-856 Code refactoring in NumberUtils;non_debt
"Add WindowMappingFn to PCollectionView
This exposes the explicit way in which Windows should be mapped.";non_debt
HIVE-5008: Reuse MapRedUtils to generate Map/ReduceWork (Gunther Hagleitner);non_debt
No important changes for the next release;non_debt
for #2335 add applicationId check.;non_debt
Allow null keys in Spark's reduce and group by;non_debt
ARTEMIS-2952 allow protected access to ActiveMQConnectionFactory readOnly;non_debt
"KAFKA-3636 Change default max session timeout to 5 minutes
Closes #1284 from hachikuji/KAFKA-3636";non_debt
"Add an alias to improve git shortlog output (#12286)
* Add an alias to improve git shortlog output
* Add another";non_debt
"As this is not tested and causing other failures, reverting for now and let the author resubmit a fresh patch
Revert ""Automation of CCP Objects Verification after external changes made to the original setup Purpose of this code:""
This reverts commit 7461297f3e17b431643e7a8c575e799d0e151261.";non_debt
"refactored VMPluginFactory
- additionally converted line endings to UNIX style";non_debt
Merge remote-tracking branch 'origin/dev';non_debt
HDFS-3245. Add metrics and web UI for cluster version summary. Contributed by Ravi Prakash.;non_debt
"KAFKA-9777 Remove txn purgatory to fix race condition on txn completion (#8389)
This patch addresses a locking issue with DelayTxnMarker completion. Because of the reliance on the shared read lock in TransactionStateManager and the deadlock avoidance algorithm in `DelayedOperation`, we cannot guarantee that a call to checkAndComplete will offer an opportunity to complete the job. This patch removes the reliance on this lock in two ways:
1. We replace the transaction marker purgatory with a map of transaction with pending markers. We were not using purgatory expiration anyway, so this avoids the locking issue and simplifies usage.
2. We were also relying on the read lock for the `DelayedProduce` completion when calling `ReplicaManager.appendRecords`. As far as I can tell, this was not necessary. The lock order is always 1) state read/write lock, 2) txn metadata locks. Since we only call `appendRecords` while holding the read lock, a deadlock does not seem possible. ";non_debt
Configure logging;non_debt
SOLR-11926: correct/extend TermsComponentTest.testUnlimitedRows logic;non_debt
Fixed layout and resizing for HTTP sampler components.;non_debt
[KARAF-1624] Fix RAT check failures;non_debt
Spark: Add snapshot selection options to reads (#61);non_debt
Further tweaks to the PMC list;non_debt
Upgrade spring xsd version from 2.5 to 4.3;non_debt
Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/thrift;non_debt
Update the integration test with tenant operations;non_debt
upgrade Google Guava from 17.0 to 18.0;non_debt
exclude groovy from test classpath;non_debt
"ARROW-7091: [C++] Move DataType factory decls to type_fwd.h
This also necessitated moving UnionMode and TimeUnit
Closes #6689 from bkietz/7091-Move-all-factories-to-typ";non_debt
Test Pacemaker Fix;non_debt
Minor updates to the release email template CTR;non_debt
# IGNITE-32 Minor change of GUI: message box now will show scrollbar for long text.;non_debt
HIVE-5783: Native Parquet Support in Hive (Justin via Xuefu);non_debt
AL-12-month-end-dates-reschedule-issue-fix;non_debt
CAMEL-13370: resolve delegating endpoint when routes are dumped;non_debt
Update javadoc plugin to 3.2.0;non_debt
"create single instance of RequestScopedThreadContextListener
add ThreadSingletonService instance as observer
Move OWBContextThreadListener registration to ThreadSingletonService";non_debt
[KARAF-1092] Upgrade to Jasypt 1.8;non_debt
"[SPARK-4711] [mllib] [docs] Programming guide advice on choosing optimizer
I have heard requests for the docs to include advice about choosing an optimization method. The programming guide could include a brief statement about this (so the user does not have to read the whole optimization section).
CC: mengxr
Closes #3569 from jkbradley/lr-doc and squashes the following commits:
654aeb5 [Joseph K. Bradley] updated section header for mllib-optimization
5035ad0 [Joseph K. Bradley] updated based on review
94f6dec [Joseph K. Bradley] Updated linear methods and optimization docs with quick advice on choosing an optimization method";non_debt
Fixed the CS errors;non_debt
Added some duplicates, and an invalid input tag;non_debt
AMBARI-10474. NFSGateways have incorrect displaying at UI. (akovalenko);non_debt
"Merge pull request #291 from ascrutae/zhangxin/fix/matcher-failed
fix enhance class match failed";non_debt
Updated the cost model to favor IO with push-down;non_debt
Merge branch '3.4-dev';non_debt
CLOUDSTACK-7879: Skip dynamic scaling on vmware if vmware-tools are not installed;non_debt
"Merge pull request #11653 from robertwb/split-points
[BEAM-9935] Respect allowed split points in Python.";non_debt
"SPARK-1903 Document Spark's network connections
https://issues.apache.org/jira/browse/SPARK-1903
Closes #856 from ash211/SPARK-1903 and squashes the following commits:
6e7782a [Andrew Ash] Add the technology used on each port
1d9b5d3 [Andrew Ash] Document port for history server
56193ee [Andrew Ash] spark.ui.port becomes worker.ui.port and master.ui.port
a774c07 [Andrew Ash] Wording in network section
90e8237 [Andrew Ash] Use real :toc instead of the hand-written one
edaa337 [Andrew Ash] Master -> Standalone Cluster Master
57e8869 [Andrew Ash] Port -> Default Port
3d4d289 [Andrew Ash] Title to title case
c7d42d9 [Andrew Ash] [WIP] SPARK-1903 Add initial port listing for documentation
a416ae9 [Andrew Ash] Word wrap to 100 lines";non_debt
new UI - vm wizard - show zone, template, service offering, disk offering in last step.;non_debt
Be explicit about RTLD_LOCAL, defaults varies on platforms (#6485);non_debt
"[AIRFLOW-545] Add Bloc as Airflow user[]
Closes #1819 from dpaola2/patch-1
https://issues.apache.org/jira/browse/AIRFLOW-545";non_debt
add select_order_by_with_multiple_stars.xml for ms;non_debt
"Fix https://github.com/julianhyde/optiq/issues/145, ""Unexpected upper-casing of keywords when using java lexer"".";non_debt
"Adds AbstractApplication.DEFAULT_DISPLAY_NAME config
- Allows a default display name to be specified for an app, which
  can then be overridden within the yaml at the very top level 
  overridden, this default will be used.
- Adds AppYamlTest, to test different scenarios of the app either
  being wrapped or not wrapped.
- Also tidies up AbstractApplicationLegacyTest.";non_debt
"HADOOP-16620. [pb-upgrade] Remove protocol buffers 3.7.1 from requirements in BUILDING.txt (#1558)
* Removed protobuf 3.7.1 from Dockerfile";non_debt
resolve regression of some ra transaction tests, follow on from http://svn.apache.org/viewvc?view=revision&revision=1065688 - a shared context needs to be aware that ended transactions that are unresolved are considered active. browse needs to only commit for local transactions when ending;non_debt
LUCENE-5028: remove doShare from FST's PositiveIntOutputs;non_debt
"Merge pull request #95 from apigee/USERGRID-1455
allow requests in the path /groups/* or /users/* to have more than 10 su...";non_debt
Switching to usage of menu's dtd to insert commons navigation items, using common-menus entity to reference commons menues in navigation.xml, sorting is done by Maven.;non_debt
Added bug tracking info to doxygen main page.;non_debt
HELIX-81: org.apache.helix.manager.zk.ZKUtil#isClusterSetup() should not log error;non_debt
"Avoid OpenJPA to enhance unrelated classes resulting in exceptions
Define the javaee-api as something a bit more opened to updates";non_debt
[CXF-6238] Adding a new ResponseStatus annotation;non_debt
LUCENE-7009: Add expectThrows utility to LuceneTestCase;non_debt
fix;non_debt
"ORC-584: Add missing brackets toJson method
Fixes #464";non_debt
[hotfix][tests] Add NoOpJobFailCall singleton;non_debt
update testcase;non_debt
"CLOUDSTACK-2060
Global config to turn off dynamically scale vm functionality";non_debt
update;non_debt
merge from 0.6;non_debt
"Adding tests for valueLength function
DFDL-581, DFDL-582";non_debt
FINERACT-1188: README and other files are not covered by Spotless;non_debt
added rebalance thrift definition;non_debt
removing sso-mgt feature from former stratos directory;non_debt
HDFS-11983. Ozone: Add documentation for metrics in KSMMetrics to OzoneMetrics.md. Contributed by Yiqun Lin.;non_debt
Test for desired timeseries zero-filling behavior.;non_debt
new UI - localize left menu.;non_debt
Sync deps;non_debt
fixed some path errors due to the new structure;non_debt
[FLINK-3419] [streaming] Drop 'partitionByHash' function, subsumed by 'keyBy()';non_debt
[BEAM-6185] Upgrade Spark to version 2.4.0;non_debt
Merge branch 'master' of github.com:DataTorrent/Core;non_debt
"[FLINK-592] Address pull request comments: fail early on missing auth,
load log4j-cli.properties and do not set 'default' as default queue
This closes #358";non_debt
LUCENE-2755: fix accidental commit that caused CMS to deadlock;non_debt
chanegd the jar name and target for findbugs;non_debt
CAMEL-7620: Rest DSL. Enlist rest services in RestRegistry and JMX.;non_debt
LUCENE-1461: add Matt Ericson as coauthor;non_debt
switch to apache-karaf-minimal in OSGi tests;non_debt
groovy-sql doco: initial JDBC metadata handling doco;non_debt
This closes #1048;non_debt
release 2.0.0;non_debt
remove accidental commit of html file;non_debt
fix import into AdminApiTest and introduce disable-namespaceBundle unit test (#354);non_debt
"Merge pull request #8153 from iemejia/BEAM-6324-remove-wit-where
[BEAM-6324] Remove withWhere from CassandraIO (superceded by withQuery)";non_debt
NO-JIRA Removing System.out left by mistake;non_debt
HOP-2248 : The Pipeline action dialog doesn't remember its size;non_debt
HIVE-10715 : RAT failures - many files do not have ASF licenses (Sushanth Sowmyan, reviewed by Vikram Dixit);non_debt
Merge branch '1.6.0-SNAPSHOT';non_debt
MAPREDUCE-4384. Race conditions in IndexCache (Kihwal Lee via tgraves);non_debt
Merge branch 'sprint-24' into gg-8022;non_debt
remove junit plugin;non_debt
add RESOURCE_FILE_EXIST;non_debt
Merge branch 'cassandra-3.0' into cassandra-3.11;non_debt
[AIRFLOW-XXXX] Description for how to create an user is incorrect in some docs (#7101);non_debt
CAMEL-822 added JSON data format support;non_debt
HIVE-1469. replace isArray() calls and remove LOG.isInfoEnabled() in Operator.forward();non_debt
@Singleton javadoc improvement;non_debt
IGNITE-45 - Fixed test.;non_debt
introducing network partition concept;non_debt
Merge branch 'nifi-solr-bundle' of https://github.com/bbende/incubator-nifi into solr;non_debt
TOMEE-1707 bval 1.1.1;non_debt
CLOUDSTACK-3825: Fix start/end port not being passed with protocol number;non_debt
ACCUMULO-4331: Add ability to specify range of ports in configuration. Tested and works with *.port.client properties. Modified tserver.port.search property to perform a linear search for free ports instead of random.;non_debt
Add pluginRepository for accumulo-maven-plugin SNAPSHOT;non_debt
"Merge pull request #758 from Microsoft-CISL/RemoveCmdFiles
Remove cmd files and move run.sh to bin folder";non_debt
"KAFKA-7981 Add fetcher and log cleaner thread count metrics (#6514)
This patch adds metrics for failed threads as documented in KIP-434: https://cwiki.apache.org/confluence/display/KAFKA/KIP-434%3A+Add+Replica+Fetcher+and+Log+Cleaner+Count+Metrics.";non_debt
"HDDS-1259. OzoneFS classpath separation is broken by the token validation. Contributed by Elek Marton.
 Closes #604";non_debt
AMBARI-12101. Ambari : upgrading from 2.0.0 to 2.0.1 wipes out the added service folder on the stack.(vbrodetskyi);non_debt
"HADOOP-17388. AbstractS3ATokenIdentifier to issue date in UTC. (#2477)
Followup to HADOOP-17379.
Contributed by Jungtaek Lim.";non_debt
minor, set InMemCubeBuilder don't enforce output order by default;non_debt
GUAC-1170: Move the two main OSK sections to the same line. Abuse section sort order to place arrow keys below others.;non_debt
"Merge pull request #12751 from robinyqiu/unnest
[BEAM-10847] Fix NPE in BeamUnnestRel";non_debt
Merge branch 'master' of https://bitbucket.org/amolkekre/core.git;non_debt
Camel-AWS2-EC2: Fixed CS;non_debt
"GEODE-608: Refactor rat configuration into a separate script
Split out the rat configuration and update the excludes list.";non_debt
"GEODE-4282: Remove createKey/Value templates. (#189)
- Use Serializable::create to specialize for creating cacheable objects.
- Use CacheableKey::create to specialize for creating key objects.";non_debt
JENA-1619: Completely detach a binding by doing a copy.;non_debt
"add joins to column tree menu (#9705)
* add joins to column tree menu
* fix capitalization
* add keyword, keep columns if replaced
* actually fix capitalization
* add keywords";non_debt
[CXF-5421] Making the servlet api dependency optional in OAuth poms;non_debt
"Allow configured ports and initial token to be overridden by system
properties.
Patch by brandonwilliams, reviewed by jbellis for CASSANDRA-2343";non_debt
"ZEPPELIN-247: fix navbar.controller.js used to assumes WebSocket connection as disconnected.
ZEPPELIN-247: fix navbar.controller.js used to assumes WebSocket connection as disconnected.
It should get the state from WebSocketService.
Closes #236 from prabhjyotsingh/ZEPPELIN-247 and squashes the following commits:
1646530 [Prabhjyot Singh] ZEPPELIN-247: fix navbar.controller.js used to assumes WebSocket connection as disconnected. It should get the state from WebSocketService.";non_debt
Merge branch 'sprint-28' of https://github.com/ggprivate/ggprivate into gg-9237;non_debt
logging;non_debt
Fix for failure with 17 digit syskey at times;non_debt
"Add Perltidy configuration and build target
Also does an initial run.";non_debt
for #2441, remove OrderItem.alias;non_debt
"[SYSTEMDS-2813] Add lineage specific flags to SystemDS-config
This patch adds two lineage specific configurations, enable/disable
cache spilling and enable/disable compiler assisted dynamic
rewrites. Both are true by default. These flags help in
automating microbenchmarks.";non_debt
fix: fix custom series merge children strategy (force no empty children even thought merging children).;non_debt
AMBARI-15319. In IE, logging out of Ambari Admin View doesn't log user out of web console. (alexantonenko);non_debt
CAMEL-7742: Add unit test - BindyFormatUnmarshallTest to test formatting of Numbers (Integer, Double, BigDecimal, Float, Long, ....;non_debt
# ignite-57;non_debt
"[CXF-4003] Add date and time types for wadl
Patch from Matthias Brandt applied";non_debt
HDFS-14545. RBF: Router should support GetUserMappingsProtocol. Contributed by Ayush Saxena.;non_debt
Status file path should not be required in configuration (#28);non_debt
Fix symbol load json (#6420);non_debt
Console proxy is back;non_debt
Prepare 3.8.1 release;non_debt
HADOOP-15330. Remove jdk1.7 profile from hadoop-annotations module;non_debt
"JAV-196 configuration of config center url
change config center configuration source from WatchedConfigurationSource to new interface: ConfigCenterConfigurationSource
provide a ""init"" method with parameter local config, that avoid config center SPI implementation recreate local config";non_debt
bug 12039, 12041: forgot one more place. Reviewed-by: kelven;non_debt
HDFS-2677. Web UI should indicate the NN state. Contributed by Eli Collins.;non_debt
# GG-9153 Debug GridGgfsGroupDataBlockKeyMapperHashSelfTest.testDistribution.;non_debt
"IGNITE-4102 .NET: Generify ICacheStore
This closes #1670";non_debt
"Allow for topic deletions with regex consumers (#5230)
* Allow for topic deletions with regex consumers
* Fixed test compilation
* One more compile fix
* Fixed BrokerServiceAutoTopicCreationTest";non_debt
"CLOUDSTACK-6695: Added support to the UI for uploading a chain of certificates
In the ""SSL Certificate"" dialog we added:
- new field for the root certificate
- a button to add intermediate certificates if necessary when this is pressed, a new field, called ""Intermediate certificate 1"" is added pressed again, ""Intermediate certificate 2"" field is added, and so on.
We upload the certificates in order: first the root certificate (with id=1), then the intermediate certificates (with id=2,3,..) and finally the server certificate.
When uploading a certificate, we wait for the upload to be completed successfully and only then we proceed to uploading the next one. If one fails, we report failure and don't continue with the remaining.";non_debt
[FLINK-20981][coordination] Allow initializing jobs to be suspended;non_debt
Allow project on view on MongoDB collection to be pushed into MongoDB.;non_debt
 gg-7553: Fake commit.;non_debt
doc for option -F;non_debt
Enabled no-self-use pylint rule in security. Formatter (#11041);non_debt
"Summary: Introduce Vif Driver in KVM
Add BridgeVifDriver and move current vif implementation to it.
- remove dependency on VirtualRoutingResource.
- factor out some of the networking code in LibvirtComputingResource
  to BridgeVifDriver.
Add base class for KVM VifDriver.
Add VifDriver Interface for KVM.
RB: https://reviews.apache.org/r/6285
Send-by: Tomoe Sugihara <tomoe@midokura.com>";non_debt
29527: SystemML throws AccessControlException when invoked by any user other than superuser - Fix cleanup working dirs (sync from BI2.0 branch);non_debt
AMBARI-9480. Ranger password properties are incorrectly included in Blueprint export. (rnettleton);non_debt
DB upgrade for port forwarding rules;non_debt
This closes #312;non_debt
Set the release date for 2.5.0 in CHANGES.txt;non_debt
HIVE-8862 - Fix ordering diferences on TestParse tests due to Java8 (Sergio Pena via Brock);non_debt
[NETBEANS-1768] Adding additional check for plugin executions if the JaCoCo outputDirectory is customised within an execution;non_debt
"ARROW-3934: [Gandiva] Only add precompiled tests if ARROW_GANDIVA_BUILD_TESTS
Closes #3082 from pcmoritz/gandiva-precompiled-tests and squashes the following commits:
f47a35695 <Philipp Moritz> only add precompiled tests if ARROW_GANDIVA_BUILD_TESTS";non_debt
Added read timeout.;non_debt
Fixed SpringXMLTokenSplitTest;non_debt
"Merge pull request #732 from ustcweizhou/revert-volume-snapshot-master
Guys, can you review it? things need to be discussed:
* pr/732:
  CLOUDSTACK-5863: revert volume snapshot for KVM/QCOW2";non_debt
move interfaces around;non_debt
use jdbcRepository;non_debt
"THRIFT-3578 Make THeaderTransport detect TCompact framed and unframed
Client: C++
Patch: Nobuaki Sukegawa
This closes #819";non_debt
Added native EOL;non_debt
enhance configuration api (#5774);non_debt
HBASE-15507 Online modification of enabled ReplicationPeerConfig (Geoffrey Jacoby);non_debt
Merge branch 'master' of https://github.com/DataTorrent/Core;non_debt
KYLIN-2718 bug fix;non_debt
[BEAM-10164] Flink Batch Runner: Memory efficient combine implementation for non-merging windows.;non_debt
"AVRO-1138. C: Open data file with new block size
This obviously won't affect any blocks that are already in the file, but any new
blocks that are appended will use the new block size.";non_debt
Improve shutdown of listener for consumer;non_debt
HBASE-15429 Add split policy for busy regions;non_debt
"[KARAF-5008] Add ""maven"" feature with ACL configuration";non_debt
"SOLR-13082: A trigger that creates trigger events more frequently than the cool down period can starve other triggers.
This is mitigated to some extent by randomly choosing the trigger to resume after cool down. It is recommended that scheduled triggers not be used for very frequent operations to avoid this problem.";non_debt
documenting querying behavior on multi-valued dimensions;non_debt
CLOUDSTACK-8895: Verify if storage can be selected when attaching uploaded data volume to VM;non_debt
SCB-130 Updated the Github PR template;non_debt
fix: correct the template of dns_resolver_valid (#3638);non_debt
TOBAGO-1566: Enhance the check of the Facelet pages;non_debt
add STORM-1745 to CHANGELOG.md;non_debt
TS-1880: add pthread_setname_np support;non_debt
HBASE-9788 [WINDOWS] Update rest server class name;non_debt
CAMEL-13955: camel-sjms batch now supports aggregation strategy completion aware. Also add exchange property with detail how it was completed like the Aggregate EIP does.;non_debt
LUCENE-2862: add TermsEnum.totalTermFreq() and Terms.getSumTotalTermFreq();non_debt
"Fix GSSAPIBookKeeperTest
Descriptions of the changes in this PR:
*Problem*
in GSSAPIBookKeeperTest, `InetAddress.getLocalHost().getHostName()` was used for adding principle to kdc keytab. However in the tests, it uses advertisedAddress (introduced by #1097).
So it causes authentication failed because server can't be found.
*Solution*
Change to use `Bookie. getBookieAddress(..)` to get the real hostname used by bookie for adding keytab entries.
This closes #1191 from sijie/fix_gssapibookkeeper_test";non_debt
Merge remote-tracking branch 'origin/trunk' into branch-dev-patch-upgrade;non_debt
for #2428, add all sql rule for encrypt;non_debt
HIVE-646. add UDF elt;non_debt
The quarkus-bootstrap-maven-plugin is listed twice on all the runtime extensions POMs #1390;non_debt
modify appendInsertColumnValue();non_debt
HIVE-1609. Support partition filtering in metastore;non_debt
HAWQ-673. Unify out put of explain analyze.;non_debt
fix prepare insert statement with generated key cannot work.;non_debt
"added CHANGELOG
wrote first entry in CHANGELOG";non_debt
GROOVY-3172: Add setter for field MethodNode.name;non_debt
HIVE-14769: TestVectorRowObject test takes >12 mins (Prasanth Jayachandran reviewed by Matt McCline);non_debt
[COMMUNITY] @junrushao1994 -> Reviewer (#2463);non_debt
AMBARI-18591 - Hive Rolling Upgrade Is No Longer Supported In Ambari (jonathanhurley);non_debt
HADOOP-16114. NetUtils#canonicalizeHost gives different value for same host.;non_debt
apply fix for: https://issues.apache.org/jira/browse/AMQ-4816;non_debt
CAMEL-10561: camel-catalog - Add REST JAX-RS application;non_debt
Introduced another overloaded IOHelper.close() variant with varargs and it's usage (shorthand-writing);non_debt
Merge branch 'master' into time-output-timestamp;non_debt
AMBARI-21973. Set tez.runtime.shuffle.ssl.enable=false in Ambari for HSI.(vbrodetskyi);non_debt
"[FLINK-15099][runtime] Add Operator Coordinators and Events
Operator Coordinators are instances that exist once per operator. While the operators run on the TaskManagers, the
coordinator runs on the JobManager. The coordinator communicates via events with the operators, typicalls to
assign work.
The first user for those coordinators would be the new source interface.
Further users we envision are sinks (for coordinated commits of metadata), or iterations (gather progress and
steer supersteps) as well as simple approximate alignments between streams (event time alignment).";non_debt
"[SPARK-12122][STREAMING] Prevent batches from being submitted twice after recovering StreamingContext from checkpoint
Closes #10127 from tdas/SPARK-12122.";non_debt
Add + Implement Tang interface;non_debt
YARN-2492. Added node-labels page on RM web UI. Contributed by Wangda Tan;non_debt
integrating stophost and stopcommand in remote tomee arquillian adapter;non_debt
This closes #716;non_debt
ARTEMIS-468 Amendments to how redelivery count is handled on openwire;non_debt
mixed a try -> try-cause;non_debt
Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/incubator-stratos;non_debt
KYLIN-2856 Log pushdown query as a kind of BadQuery;non_debt
GEODE-870: Rejecting of old view;non_debt
split changes for 3.x and trunk;non_debt
"Merge pull request #360 from rxin/cogroup-java
Changed CoGroupRDD's hash map from Scala to Java.";non_debt
SOLR-10892: minor CSS change to make sure description list items are bold even when monospaced;non_debt
"Merge pull request #1 from ahgittin/kubernetes-upgrade
Kubernetes upgrade";non_debt
update docs;non_debt
xbean 4.3;non_debt
[CXF-5379]mark swagger dependency as optional|use relative context path|remove potential concurrent thread issue;non_debt
Merge branch 'android-feature-playground-update' of https://github.com/misakuo/incubator-weex into merge-pull-request-master;non_debt
Caching Avro Binary encoder/decoder to avoid creating new one for every record;non_debt
- Fix that allows people using JDK 1.3 to compile this class.;non_debt
HDFS-14612. SlowDiskReport won't update when SlowDisks is always empty in heartbeat. Contributed by Haibin Huang.;non_debt
validate bind address by @wyc;non_debt
Regen;non_debt
HDFS-9648. TestStartup.testImageChecksum is broken by HDFS-9569's message change. (Wei-Chiu Chuang via Yongjun Zhang);non_debt
KAFKA-8183: Add retries to WorkerUtils#verifyTopics (#6532);non_debt
"[FLINK-2821] use custom Akka build to listen on all interfaces
This uses Flakka (a custom Akka 2.3 build) to resolve the issue that
the bind address needs to be matching the external address of the
JobManager. With the changes applied, we can now bind to all
interfaces, e.g. via 0.0.0.0 (IPv4) or :: (IPv6).
For this to work properly, the configuration entry
JOB_MANAGER_IPC_ADDRESS now represents the external address of the
JobManager. Consequently, it should not be resolved to an IP address
anymore because it may not be resolvable from within containered
environments. Akka treats this address as the logical address. Any
messages which are not tagged with this address will be received by
the Actor System (because we listen on all interfaces) but will be
dropped subsequently. In addition, we need the external address for
the JobManager to be able to publish it to Zookeeper for HA setups.
Flakka: https://github.com/mxm/flakka
Patch applied: https://github.com/akka/akka/pull/15610
- convert host to lower case
- use consistent format for IPv6 address
- adapt config and test cases
- adapt documentation to clarify the address config entry
- TaskManager: resolve the initial hostname of the StandaloneLeaderRetrievalService
This closes #2917.";non_debt
Bump server-metrics to 0.2.5 to catch a few fixes.;non_debt
Fix bug for UnicastBackendHandler with schema (#7182);non_debt
"Remove GetProducingTransformInternal
This isn't part of the PValue API, so remove from POutputValueBase.";non_debt
Various minor fixes;non_debt
"HIVE-3603 Enable client-side caching for scans on HBase (Navis Ryu via EGC)
Submitted by:	Navis Ryu
Reviewed by:	Edward Capriolo";non_debt
For #109, shardingsphere.io => shardingsphere.apache.org in 4.x document;non_debt
BUGFix in ThreadedEnginePerDevice;non_debt
[CXF-3937] Minor fixes for UriInfo to return correct base URI;non_debt
Merge branch 'cassandra-2.1' into trunk;non_debt
support for tracking what user took action on loan and being able to provide that data as part of api.;non_debt
Moving a try block a bit higher;non_debt
updated merge;non_debt
# ignite-573 Fixed javadoc.;non_debt
Added discovery ring latency test + made it available from MBean;non_debt
"Merge pull request #1627 from metamx/fix-realtime-tasks
explicitly call lifecycle stop";non_debt
[BEAM-3612] Add a benchmark for method invocation methods.;non_debt
move empty server holder list check outside of loop;non_debt
CAMEL-6325: Add discardOnAggregationFailure option to aggregate EIP;non_debt
ACCUMULO-2187 Refactor method to read file in AddSplitsCommand and CreateTableCommand;non_debt
HBASE-2302 Optimize M-R by bulk excluding regions - less InputSplit-s to avoid traffic on region servers when performing M-R on a subset of the table;non_debt
"Add column metadata to system column families
patch by jbellis reviewed by slebresne for CASSANDRA-4018";non_debt
CLOUDSTACK-8915 - Fix the assertion used for the default routes test;non_debt
"HIVE-3676 [jira] INSERT INTO regression caused by HIVE-3465
Summary: DPAL-1931 INSERT INTO regression caused by HIVE-3465
Test Plan: EMPTY
Reviewed By: cwsteinbach
Differential Revision: https://reviews.facebook.net/D6741";non_debt
Pick up official release of jersey 2.28 (#3768);non_debt
SOLR-12749: Update CHANGES.txt;non_debt
Camel-AWS2-DDB: Migrated tests to Junit5;non_debt
"[SPARK-12971] Fix Hive tests which fail in Hadoop-2.3 SBT build
ErrorPositionSuite and one of the HiveComparisonTest tests have been consistently failing on the Hadoop 2.3 SBT build (but on no other builds). I believe that this is due to test isolation issues (e.g. tests sharing state via the sets of temporary tables that are registered to TestHive).
This patch attempts to improve the isolation of these tests in order to address this issue.
Closes #10884 from JoshRosen/fix-failing-hadoop-2.3-hive-tests.";non_debt
Merge branch '3430-external-size-views';non_debt
"[FLINK-4572] [gelly] Convert to negative in LongValueToIntValue
The Gelly drivers expect that scale 32 edges, represented by the lower
32 bits of long values, can be converted to int values. Values between
2^31 and 2^32 - 1 should be converted to negative integers.
Creates separate signed and unsigned translators for long to int. This
prevents ambiguous conversion since each translator only works on a
32-bit range of values.
This closes #2469";non_debt
DISPATCH-1867: Initialize modules and adaptors outside of the core thread so they are ready to go right after the qd_router_setup_late() completes;non_debt
"MINOR: Fix group_mode_transactions_test (#9538)
KIP-431 (#9099) changed the format of console consumer output to `Partition:$PARTITION\t$VALUE` whereas previously the output format was `$VALUE\t$PARTITION`. This PR updates the message verifier to accommodate the updated console consumer output format.";non_debt
BIGTOP-2007. bigtop.mk version of the stack needs to be bumped to 1.1.0-SNAPSHOT;non_debt
"Merge pull request #294 from tqchen/master
fix submodule version";non_debt
YARN-2597 MiniYARNCluster should propagate reason for AHS not starting;non_debt
Use latest Hazelcast Kubernetes 3.10.6;non_debt
[FLINK-2991] Adjust RocksDB Folding State to latest RocksDBStateBackend;non_debt
Updated autolabeler.yml;non_debt
"KAFKA-6489 Fetcher.retrieveOffsetsByTimes() should batch the metadata fetch.
Currently if users call KafkaConsumer.offsetsForTimes() with a large set of partitions. The consumer will add one topic at a time for the metadata refresh. We should add all the topics to the metadata topics and just do one metadata refresh instead.
Closes #4478 from becketqin/KAFKA-6849";non_debt
"Merge pull request #13076 from [BEAM-11057] Make BigQueryIO.Read.withTestServices methods public
[BEAM-11057] Make BigQueryIO.Read.withTestServices methods public";non_debt
"Merge pull request #934 from jbonofre/INCREASE_ITEST_TIMEOUT
Increase itest timeout to avoid issue on Jenkins";non_debt
Read persistence context annotation using ASM when embedded in tomcat with invalid persistence context annotation class;non_debt
VertxServerRequestToHttpServletRequest switch to FilePart;non_debt
HADOOP-11254. Changed visibility of AccessControlList to be public for consumption by ecosystem. Contributed by Zhijie Shen.;non_debt
Pointing setup.py to then new repo;non_debt
YARN-9711. Missing spaces in NMClientImpl (#1177) Contributed by Charles Xu.;non_debt
Merge branch 'master' into master;non_debt
MAPREDUCE-4424. 'mapred job -list' command should show the job name as well. Contributed by Avinash Kujur.;non_debt
GG-9141 - Disabled distributed services tests.;non_debt
use ParameterBuilder parameterBuilder;non_debt
"Fixes #740 - Use Java hashcode helper methods.
*  Removed hashCode() method from Bytes.
*  Add hashCode() method to MutableBytes.
*  Used Java helper methods for hashCode() methods in data classes.
*  Added test to BytesTest to check for proper hashing.";non_debt
HBASE-22453 A NullPointerException could be thrown (#272);non_debt
Add null checking for configuration;non_debt
HOP-1821 : Port user Defined Java Class transform;non_debt
CAMEL-1523: Update POM for doing releases using Nexus;non_debt
reset Gemfile.lock;non_debt
"[SPARK-9927] [SQL] Revert 8049 since it's pushing wrong filter down
I made a mistake in #8049 by casting literal value to attribute's data type, which would cause simply truncate the literal value and push a wrong filter down.
JIRA: https://issues.apache.org/jira/browse/SPARK-9927
Closes #8157 from yjshen/rever8049.";non_debt
try to handle SSL stuff.;non_debt
Bug 48300 - Allow override of IP source address for HTTP HttpClient requests;non_debt
[maven-release-plugin] prepare release linq4j-0.1.9;non_debt
HIVE-16485: Enable outputName for RS operator in explain formatted (Pengcheng Xiong, reviewed by Ashutosh Chauhan);non_debt
refine fix for GROOVY-8386/GROOVY-8094: remove an edge case that wasn't meant to trigger error;non_debt
bug fix for using configurable default for datasource;non_debt
KYLIN-3197 When ldap is opened, I use an ignored case user to login, the page does not respond.;non_debt
"Merge branch 'master' of github.com:apigee/usergrid-portal-internal into portal-redesign
Conflicts:
	js/app/usergrid.appSDK.js";non_debt
This closes #2557;non_debt
AMBARI-23166. NN Federation Wizard: implement step4 (akovalenko);non_debt
[CALCITE-2522] Remove e.printStackTrace() from CalciteAssert#returns;non_debt
JENA-608: Blank nodes in INSERT DATA GRAPH;non_debt
HIVE-20278 : Druid Scan Query avoid copying from List -> Map -> List (Nishant Bangarwa via Ashutosh Chauhan);non_debt
DRILL-2094: Add SqlOrderBy rule for CompoundIdentifierConverter;non_debt
HBASE-15400 Use DateTieredCompactor for Date Tiered Compaction (Clara Xiong);non_debt
"[SYSTEMML-640] Fix forced parfor program recompile (invalid selective)
The parfor util script sample.dml failed with dimension mismatch in
special cases, where the remote memory budget of map/reduce tasks was
larger than the driver memory budget and the permutation matrix
multiplication would be compiled to MR in local parfor but CP in remote
parfor execution. If the parfor optimizer selects remote parfor in these
cases, we trigger a forced recompile to CP which internally tries to
reduce the overhead by recompiling only dags where the runtime plan
contains MR instructions. This selective recompilation is invalid with
permutation matrix multiplications that stretch two subsequent basic
block dags and the first dag does not necessarily contain MR
instructions. This patch removes this selective compilation because
meanwhile we compile average dags in <1ms.";non_debt
GEODE-4360: User Guide: Remove --eviction-enabled option from gfsh create region doc;non_debt
point query syntax help to Solr wiki instead of lucene-java site so the few extensions can be noticed;non_debt
AMBARI-17330. Ambari changes to support kerberized Ranger tagsync(Mugdha Varadkar via gautam);non_debt
"Move ""libraries.md"" out of docs, onto the main site. (#3159)";non_debt
"Make Nar Extraction Directory configurable (#6933)
* Make Nar Extraction Directory configurable
* Fixed unittests";non_debt
Correct the weighting of S?O.;non_debt
"#7318, discover primaryDataSourceName automatically instead of write into rule config (#8901)
* #7318, discover primaryDataSourceName automatically instead of write into rule config";non_debt
Fix null handling behaviour on char[] methods;non_debt
AMBARI-3109. lzo_enabled is being set to false in global configuration. (onechiporenko);non_debt
"STORM-649:HDFS topologies should write to /tmp.
Conflicts:
	external/storm-hbase/src/test/java/org/apache/storm/hbase/topology/PersistentWordCount.java
	external/storm-hdfs/src/test/java/org/apache/storm/hdfs/trident/TridentSequenceTopology.java";non_debt
Test custom comparator with HFile.;non_debt
AMBARI-11. Added component field for Action, and ActionResult.;non_debt
"GROOVY-6358: @CompileStatic doesn't determine correct type for return from generic static method
added non regression test";non_debt
Upgrade to Jakarta Persistence API 2.2.3;non_debt
Changed local backend to use Akka actor;non_debt
starting user-data;non_debt
Fix missing apostrophe;non_debt
"GUACAMOLE-524: Implemented getAttributes and setAttributes to satisfy
Attributes interface addition";non_debt
"TOBAGO-1913: Enhance tobago-config.xsd: there should be an includes tag in resources tag""
Set Version to 5.0";non_debt
"[FLINK-6904] [cep] Support for quantifier range to CEP's pattern API
This closes #4121";non_debt
Fix for OPENEJB-786 Stateless Container StrictPooling option ignored: See Jira Comments. I have synchronized the portion of code where we check the pool size and put in the pool;non_debt
"Merge branch 'master' into ui-vm-affinity
Conflicts:
	ui/scripts/instances.js";non_debt
"[TE] add transformations, javadoc (#1916)
* add timeseries transformations DIFFERENCE and OFFSET
* expand javadoc";non_debt
"[ZEPPELIN-1487] Resolve possible NPEs in storage sync mechanism
### What is this PR for?
This is to resolve possible NPEs in storage mechanism related to empty subject
### What type of PR is it?
Bug Fix
### Todos
### What is the Jira issue?
[ZEPPELIN-1487](https://issues.apache.org/jira/browse/ZEPPELIN-1487)
### How should this be tested?
storage tests pass, CI green
### Screenshots (if appropriate)
### Questions:
* Does the licenses files need update? no
* Is there breaking changes for older versions? no
* Does this needs documentation? no
Closes #1459 from khalidhuseynov/fix/storage-npe and squashes the following commits:
1f2dcd3 [Khalid Huseynov] pass subject to get method in sync";non_debt
Online editing is prohibited;non_debt
LUCENE-5297: allow range faceting on any ValueSource;non_debt
Add Javadoc link.;non_debt
Merge branch 'cassandra-1.2' into trunk;non_debt
HIVE-5082 : Beeline usage is printed twice when beeline --help is executed (Xuefu Zhang via Ashutosh Chauhan);non_debt
YARN-2735. diskUtilizationPercentageCutoff and diskUtilizationSpaceCutoff are initialized twice in DirectoryCollection. (Zhihai Xu via kasha);non_debt
TINKERPOP3-797 #close A typecast to List should have been a typecast to Collection. Fixed. Added an OrderTest to that validates the fix over Modern.;non_debt
fix test case after changes in https://issues.apache.org/jira/browse/AMQ-4237 broke the test's MBean lookup;non_debt
change the default queue size to 16K temporarily.;non_debt
"Created a activemq-openwire-generator module which will hold the openwire code generation scripts.  This will be used in conjunction 
with the m2 gram plugin to generate openwire marshallers under maven 2.";non_debt
HDDS-1120. Add a config to disable checksum verification during read.;non_debt
changing gitignore;non_debt
[maven-release-plugin] prepare release kylin-1.1-incubating;non_debt
"Merge pull request #12997 from SnailSword/master
fix(dataSample): negative size";non_debt
"KAFKA-5698: Sort processor nodes based on its sub-tree size
1. Sort processor nodes within a sub-topology by its sub-tree size: nodes with largest sizes are source nodes and hence printed earlier.
2. Sort sub-topologies by ids sort global stores by the source topic names.
3. Open for discussion: start newlines for predecessor and successor.
4. Minor: space between processor nodes and stores / topics maintain `[]` for the topic names.
Closes #3618 from guozhangwang/K5698-topology-description-sorting";non_debt
"support for jclouds to log in with a given user
Conflicts (minor):
	core/src/main/java/brooklyn/location/basic/SshMachineLocation.groovy - SSH_PROPS properties
	core/src/main/java/brooklyn/location/basic/jclouds/JcloudsLocation.groovy - key-setting
	core/src/main/java/brooklyn/location/basic/jclouds/JcloudsUtil.groovy - reachable";non_debt
"Merge pull request #4959 from shoyer/preserve-stacktrace
[BEAM-3956] Preserve stacktraces for Python exceptions";non_debt
YARN-986. Changed client side to be able to figure out the right RM Delegation token for the right ResourceManager when HA is enabled. Contributed by Karthik Kambatla.;non_debt
Add changes blurb;non_debt
correct method call logic for static methods and make the meta class path take the right method;non_debt
Changed the client endpoint methods to retrieve clients;non_debt
HBASE-16772 Add verbose option to VerifyReplication for logging good rows;non_debt
updating arch page to answer stone's question about key to topic/partition mapping.;non_debt
AMBARI-13307. Agent instance memory footprint likely gradually growing (aonishuk);non_debt
"[BEAM-10916] Remove experimental annotations for BQ storage API source (#12767)
* Remove experimental annotations for BQ storage API source
* Update web site documentation for storage API sources
* Add a link to a Jira issue for a storage API Python source";non_debt
"Merge branch 'master' into autoscaling
Conflicts:
	client/src/main/java/com/metamx/druid/http/BrokerMain.java
	merger/src/main/java/com/metamx/druid/merger/coordinator/http/IndexerCoordinatorNode.java
	merger/src/main/java/com/metamx/druid/merger/worker/http/WorkerNode.java";non_debt
Merge branch '1.8';non_debt
IGNITE-443 Fixed review notes.;non_debt
"[HOTFIX] History Server API docs error fix.
Minor error in the monitoring docs. Also made indentation changes in `ApiRootResource`
Closes #6628 from harishreedharan/eventlog-formatting and squashes the following commits:
a12553d [Hari Shreedharan] Javadoc updates.
ca399b6 [Hari Shreedharan] [HOTFIX] History Server API docs error fix.";non_debt
"NIFI-4547: Add ProvenanceEventConsumer utility class
This closes #2236.";non_debt
CAMEL-14060: Remove camel-restlet;non_debt
"IGNITE-6783: Create common mechanism for group training.
this closes #3297";non_debt
"[PASS] Enable StorageRewrite before virtual thread lowering (#880)
* update
* fix testcase";non_debt
Add version display;non_debt
"ARROW-10503: [C++] Uriparser will not compile using Intel compiler
At some point, Intel changed __force_inline to __forceinline. Arrow does not compile without this. Changes the header file to redefine the macro from __force_inline to __forceinline. Source: [here](https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top/compiler-reference/compiler-options/compiler-option-details/inlining-options/inline-forceinline-qinline-forceinline.html)
Closes #8600 from jensenrichardson/patch-1";non_debt
GNITE-5478: ODBC: SQLNumParams now returns number of required parameters.;non_debt
Merge remote-tracking branch 'upstream/master' into lk_website001;non_debt
[KARAF-6186] Downgrade to wagon 3.2.0;non_debt
'trigger_class' is not a create table option;non_debt
"Merge pull request #787 from sebbASF/INFRA-16063
INFRA-16063 - GitBox mails don't all have Date: headers";non_debt
Merge qualifiers;non_debt
Regen docs;non_debt
allow service cloud stop to stop the java process;non_debt
"Merge pull request #573 from zliu41/hv
Update hive version to 1.0.1";non_debt
replace ovfotjrsi;non_debt
[BEAM-6382] SamzaRunner: add an option to read configs using a user-defined factory;non_debt
HBASE-17869 UnsafeAvailChecker wrongly returns false on ppc;non_debt
[hotfix] [rocksdb] Only log snapshot restore message when state is actually restored;non_debt
GROOVY-8545: DGM#intersect(Set, Iterable) exception (minor refactor);non_debt
not pulling jquery(ui) from googleapis, it sometimes hangs a bit;non_debt
"Support type conversion for all scalar functions (#5849)
Parameter classes supported for type conversion using `PinotDataType`:
- int/Integer
- long/Long
- float/Float
- double/Double
- String
- byte[]
Also handle function name with underscore in `FunctionRegistry`.
Support type conversion for all features using the scalar function:
- Compile time function in `CalciteSqlParser`
- Record transform/filter during ingestion in `InbuiltFunctionEvaluator`
- Transform during query execution in `ScalarTransformFunctionWrapper`
Add `PostAggregationFunction` to handle post-aggregation calculation using the scalar function.
Add `ArithmeticFunctions` for all the arithmetic scalar functions:
- plus
- minus
- times
- divide
- mod
- min
- max
- abs
- ceil
- floor
- exp
- ln
- sqrt";non_debt
HIVE-14022: left semi join should throw SemanticException if where clause contains columnname from right table (Jesus Camacho Rodriguez, reviewed by Ashutosh Chauhan);non_debt
GG-8435 - Protobuf module;non_debt
chore: git ignore openwhisk to smoothly check license locally (#3408);non_debt
HIVE-5435 - Milestone 5: PTest2 maven support;non_debt
"Log ""task is null"" instead of let worker died
* when task is null in transfer-fn, creating TaskMessage leads NPE";non_debt
share the handler;non_debt
# GG-8013 - examples.jar is not included to classpath by default;non_debt
Removed explicit serde check with HiveLineBreakAccessor;non_debt
Upgrade Braintree-java to version 2.94.0;non_debt
"[AUTOTVM] Fix a bug in generating the search space (#4779)
- Do not use numpy.prod which ignores integer (64 bits) overflows.
  This leads to an incorrect number of points in the search space.";non_debt
"add zone wizard - fix a JS error ""server is undefined""";non_debt
Added test for install and runtime file copy;non_debt
Proper fix because JS_VERSION cannot distinguish between 1.8.0 and 1.8.1;non_debt
Merge pull request #9603: Compatibility matrix: Remove dependency on Java SDK Harness docker task;non_debt
CAMEL-9995 Camel-JMS: includeAllJMSXProperties parameter doesn't work;non_debt
STORM-3538 Add Meter for sendSupervisorAssignments exception;non_debt
using the static versions;non_debt
Fix the component name. Relate to https://github.com/OpenSkywalking/skywalking-ui/pull/75;non_debt
"Bug 58704 Non regression testing : Ant task batchtest fails if tests and run in a non en_EN locale and use a JMX file that uses a Csv DataSet
Bugzilla Id: 58704";non_debt
clear;non_debt
SUBMARINE-107. Reduce the scope of mockito-core in submarine to test. Contributed by kevin su.;non_debt
"[FLINK-8812] [flip6] Set managed memory for TaskExecutor to 80 MB in MiniCluster
In order to avoid problems with OOM exceptions, this commit sets the managed
memory to 80 MB for TaskExecutors started by the MiniCluster.
This closes #5713.";non_debt
"SPARK-1700: Close socket file descriptors on task completion
This will ensure that sockets do not build up over the course of a job, and that cancellation successfully cleans up sockets.
Tested in standalone mode. More file descriptors spawn than expected (around 1000ish rather than the expected 8ish) but they do not pile up between runs, or as high as before (where they went up to around 5k).
Closes #623 from aarondav/pyspark2 and squashes the following commits:
0ca13bb [Aaron Davidson] SPARK-1700: Close socket file descriptors on task completion";non_debt
"Windowing: java worker code to handle CombineFn in batch GroupAlsoByWindowsDoFn.
----Release Notes----
[]
-------------
MOE_MIGRATED_REVID=87922554";non_debt
# IGNITE-56 Fix compilation.;non_debt
HADOOP-8695. TestPathData fails intermittently with JDK7 (Trevor Robinson via tgraves);non_debt
[TE] frontend - harleyjj/rca - pin graph tooltip to fixed position (#4936);non_debt
"ARROW-7690 [R] Cannot write parquet to OutputStream
The second parameter for inherits expects a character vector.
Closes #6304 from bob-skowron/ISS-ARROW-7690 and squashes the following commits:
6e36916ba <Neal Richardson> Add test
af61d4c6c <Bob Skowron> the second parameter for inherits expects a character vector
Lead-authored-by: Bob Skowron <bob.skowron@gmail.com>";non_debt
"[SPARK-13709][SQL] Initialize deserializer with both table and partition properties when reading partitioned tables
## What changes were proposed in this pull request?
When reading partitions of a partitioned Hive SerDe table, we only initializes the deserializer using partition properties. However, for SerDes like `AvroSerDe`, essential properties (e.g. Avro schema information) may be defined in table properties. We should merge both table properties and partition properties before initializing the deserializer.
Note that an individual partition may have different properties than the one defined in the table properties (e.g. partitions within a table can have different SerDes). Thus, for any property key defined in both partition and table properties, the value set in partition properties wins.
## How was this patch tested?
New test case added in `QueryPartitionSuite`.
Closes #13865 from liancheng/spark-13709-partitioned-avro-table.";non_debt
AMBARI-23912. Ambari should mark HSI hosts as ACTIVE or STANDBY (test review);non_debt
"[NETBEANS-2954] Fix broken tab dragging on HiDPI displays (Windows) (#1804)
[NETBEANS-2954] Fix broken tab dragging in window system on HiDPI displays on Windows";non_debt
make a change;non_debt
ARTEMIS-1320 allow URL for REST/broker connection;non_debt
Fixed issue of complete topology and tenant events being processed in each iteration;non_debt
"TOBAGO-312 (Integrate handling of ajax requests into standard lifecycle)
  util methods: ensureDecoded()";non_debt
fix(OLM): Add missing internal-objects annotation to Kustomize base CSV manifest;non_debt
ts: update roamHelper;non_debt
Update examples;non_debt
"Add UnboundedCountingInput#withRate
The rate controls the speed at which UnboundedCountingInput outputs
elements. This is an aggregate rate across all instances of the
source, and thus elements will not necessarily be output ""smoothly"",
or within the first period. The aggregate rate, however, will be
approximately equal to the provided rate.
Add package-private CountingSource#createUnbounded() to expose the
UnboundedCountingSource type. Make UnboundedCountingSource
package-private.";non_debt
s/NetworkPartition.java/NetworkPartitionRef.java and s/Partition.java/PartitionRef.java for Deployment policy references;non_debt
[BEAM-6888] Enable SpotBugs in JdbcIO;non_debt
Add documentation about adding properties to numbers;non_debt
"bug 8456: fixing the upgrade issue
status 8456: resolved fixed";non_debt
CAMEL-10930: Move groovy dsl into camel-groovy-dsl;non_debt
"[SYSTEMML-476] Centralize Hadoop props in MRConfigurationNames
Closes #57.";non_debt
Updating Readme;non_debt
db: Re-enable db foreign key checking at the end of the upgrade path;non_debt
Added missing semicolon.;non_debt
"Revert ""HBASE-19389 Limit concurrency of put with dense (hundreds) columns to prevent write handler exhausted""
This reverts commit 98ac4f12b5ccec708fc03ddfb96935c8cd7304e1.";non_debt
"[SPARK-33733][SQL] PullOutNondeterministic should check and collect deterministic field
### What changes were proposed in this pull request?
The deterministic field is wider than `NonDerterministic`, we should keep same range between pull out and check analysis.
### Why are the changes needed?
For example
We will get exception since `java_method` deterministic field is false but not a `NonDeterministic`
### Does this PR introduce _any_ user-facing change?
Yes.
### How was this patch tested?
Add test.
Closes #30703 from ulysses-you/SPARK-33733.";non_debt
"Resolve merge conflicts for George's pull request https://github.com/apache/usergrid/pull/520
Jira :
https://issues.apache.org/jira/browse/USERGRID-1120
https://issues.apache.org/jira/browse/USERGRID-1116
https://issues.apache.org/jira/browse/USERGRID-1118";non_debt
"Fix ClassCastException on composite dense tables
patch by slebresne reviewed by thobbs for CASSANDRA-7112";non_debt
PHOENIX-3061 IndexTool marks index as ACTIVE and exit 0 even if bulkload has error (addendum) (Simon Wang);non_debt
Merge branch 'cassandra-2.1.0' into cassandra-2.1;non_debt
"[SPARK-14525][SQL] Make DataFrameWrite.save work for jdbc
## What changes were proposed in this pull request?
This change modifies the implementation of DataFrameWriter.save such that it works with jdbc, and the call to jdbc merely delegates to save.
## How was this patch tested?
This was tested via unit tests in the JDBCWriteSuite, of which I added one new test to cover this scenario.
## Additional details
rxin This seems to have been most recently touched by you and was also commented on in the JIRA.
This contribution is my original work and I license the work to the project under the project's open source license.
Closes #12601 from JustinPihony/jdbc_reconciliation.";non_debt
add example region;non_debt
[KARAF-5359] Upgrade to JLine 3.5.0;non_debt
"GEODE-6518: when user explicitly specified some PartitionAttributes, ��_ (#3427)
* GEODE-6518: when user explicitly specified some PartitionAttributes, such as
redundency=1, the PartitionAttributes will not be null, but LocalMaxMemory
could be null if the region is not accessor.";non_debt
upgrade wss4j to 1.6.8;non_debt
HIVE-18613: Extend JsonSerDe to support BINARY type (Jesus Camacho Rodriguez, reviewed by Prasanth Jayachandran);non_debt
refactoring;non_debt
HIVE-14792: AvroSerde reads the remote schema-file at least once per mapper, per table reference. (Addendum);non_debt
Merge branch 'cassandra-2.1' into cassandra-2.2;non_debt
"Merge pull request #680 from keith-turner/apache-package-name
Rename packages to org.apache.fluo";non_debt
couch is merged;non_debt
[NETBEANS-3411] Added support for reading Kotlin based Gradle projects.;non_debt
Merge branch 'newBackEnd' of https://opensource.ncsa.illinois.edu/fisheye/git/dfdl into newBackEnd;non_debt
"[SPARK-1233] Fix running hadoop 0.23 due to java.lang.NoSuchFieldException: DEFAULT_M...
...APREDUCE_APPLICATION_CLASSPATH
Closes #129 from tgravescs/SPARK-1233 and squashes the following commits:
85ff5a6 [Thomas Graves] Fix running hadoop 0.23 due to java.lang.NoSuchFieldException: DEFAULT_MAPREDUCE_APPLICATION_CLASSPATH";non_debt
Rename code;non_debt
"Merge ""Made end-of-lines consistent in 2 files""";non_debt
refactor package;non_debt
"Removed line regarding referencing a specific test case.
It is implied in the example code above.";non_debt
GROOVY-2140: MarkupBuilder should ignore null attributes (like StreamingMarkupBuilder);non_debt
BIGTOP-880. Bump version of Datafu to 0.0.6;non_debt
"GUACAMOLE-630: Do not contain entire field nor entire header within <label>.
Enclosing the entire field within the <label> results in problems when
the field is large and when the field contains multiple interactive
elements. Clicking within interactive elements of a complex field
triggers the <label>, refocusing the first input element. If the field
is large, the <label> will contain empty space which also refocuses the
input field upon being clicked, despite appearing to be the background
of the page.";non_debt
Update MapR v5.1.0 artifacts version;non_debt
Upgraded to Avro 1.7.5 and Snappy-Java 1.1.0.1 (which itself is already an OSGi bundle, so no need for a SMX bundle anymore). Fixed and enabled the camel-infinispan Karaf feature. Also fixed and enabled the two Karaf Tests CamelDisruptorTest and CamelInfinispanTest.;non_debt
Merge branch 'release-3.6';non_debt
Merge remote-tracking branch 'origin/master' into python-sdk;non_debt
Merge pull request #9 from alibaba/ios-feature-20161118;non_debt
"Fix issue found by newer version of checkstyle (#1065)
This problem was found when building using #1059
and #1064";non_debt
Added backup on fail over scenrio in case of new create disk method;non_debt
Add call to Super class in 'google' providers (#7823);non_debt
"Merge pull request #1174 from himanshug/java-util-update
updating java-util version to 0.26.15";non_debt
Take SparkConf in constructor of Serializer subclasses;non_debt
HBASE-18655 TestAsyncClusterAdminApi2 failing sometimes;non_debt
Changed the jar file to 1.9;non_debt
[AIRFLOW-XXX] Remove spots in all Airflow logos (#4206);non_debt
2.2beta4 to GA db changes;non_debt
minor, dimenson column update from array to object issue fix;non_debt
CAMEL-11816: cluster-service : camel-consul spring boot support;non_debt
removing gradle 3.5, 4.3.1, and 4.4.1. Adding 4.6, 4.7, 4.8.1, 4.9, 4.10, and 4.10.2 to Jenkins and Buildbot slaves;non_debt
"[SPARK-2252] Fix MathJax for HTTPs.
Found out about this from the Hacker News link to GraphX which was using HTTPs.
@mengxr
Closes #1189 from rxin/mllib-doc and squashes the following commits:
5328be0 [Reynold Xin] [SPARK-2252] Fix MathJax for HTTPs.";non_debt
"HDDS-360. Use RocksDBStore and TableStore for SCM Metadata.
Contributed by Anu Engineer.";non_debt
[SYSTEMML-662] Update standalone.jar with legal files;non_debt
TINKERPOP-1863 Delaying the setting of requestId till the RequestMessage instantiation time;non_debt
Camel twitter salesforce example and fixed bugs in camel-connector;non_debt
HDFS-14500. NameNode StartupProgress should not allow new steps in an already-completed phase. Contributed by Erik Krogen.;non_debt
"[SYSTEMML-540] Fixed lstm_backward and python test bug
- Also updated the release documentation to specify the Keras and TensorFlow version
- Fixed Python3 indexing bug when lstm units is not an integer";non_debt
"[MINOR][TEST][STREAMING] make ""testDir"" able to be claened after test.
It's a minor bug in test case. `val testDir = null` will keep be `null` as it's immutable, so in finally block, nothing will be cleaned. Another `testDir` variable created in try block is only visible in try block.
## How was this patch tested?
Run existing test case and passed.
Closes #12999 from mwws/SPARK_MINOR.";non_debt
YARN-1908. Fixed DistributedShell to not fail in secure clusters. Contributed by Vinod Kumar Vavilapalli and Jian He.;non_debt
"license update
Closes #121 from justACT/apiChange.";non_debt
JAV-548 do not use part.getName() to get parameter name, because pojo consumer not easy to set name to part;non_debt
trival fix to remove a 0 byte file;non_debt
merge eaf8ae24: IGNITE-4034 Get rid of specialized methods in platform targets;non_debt
commit for FINERACT-47 (Expired user password cannot be updated by the same user);non_debt
new UI - Global Settings page - add category column.;non_debt
"[SPARK-11947][SQL] Mark deprecated methods with ""This will be removed in Spark 2.0.""
Also fixed some documentation as I saw them.
Closes #9930 from rxin/SPARK-11947.";non_debt
CXF-1968 applied patch with thanks to William;non_debt
Applied patch from https://issues.apache.org/activemq/browse/AMQ-1200;non_debt
HDFS-7326. Add documentation for hdfs debug commands (Vijay Bhat via Colin P. McCabe);non_debt
ignite-db-x - btree fix I;non_debt
HIVE-11013 : MiniTez tez_join_hash test on the branch fails with NPE (initializeOp not called?) (Sergey Shelukhin, reviewed by Vikram Dixit K);non_debt
Merge branch 'TINKERPOP-1789' into tp32;non_debt
Slow connection info;non_debt
account for negative windowId.;non_debt
"Fix for install_local_hadoop bug# 1409189
Added a conditional check to look for existence to trafci/bin
folder";non_debt
Moving the @since 2.5 to the correct repeat method;non_debt
https://issues.apache.org/jira/browse/AMQ-6013 - restrict classes which can be serialized inside the broker;non_debt
CAMEL-15836 - Camel-AWS2-DDB: enable autowire on the DynamoDbStreams client, regen catalog;non_debt
KARAF-1511 Fixing NPE;non_debt
Fix CHANGES for 2855 merge.;non_debt
"Update powered-by.md (#2369)
* Update powered-by.md
Change order";non_debt
Merge pull request #6911: Disambiguate between snappy and python-snappy PyPi packages in test warnings.;non_debt
Fix logo overflow (#8817);non_debt
Add ajax server output to yahoo finance.;non_debt
[FLINK-14490][table-api] Introduce UnresolvedIdentifier;non_debt
TAJO-207: Implement bit_length(string) function. (fixed a missing log in CHANGES.txt);non_debt
Missing ) in javadoc;non_debt
SOLR-2452: merge with trunk up to r1134392;non_debt
Replaced relative link with abs path.;non_debt
[PINOT-2443]: Added column name in report;non_debt
"[SPARK-9562] Change reference to amplab/spark-ec2 from mesos/
cc srowen pwendell nchammas
Closes #7899 from shivaram/spark-ec2-move and squashes the following commits:
7cc22c9 [Shivaram Venkataraman] Change reference to amplab/spark-ec2 from mesos/";non_debt
Verbose etap output for single file runs;non_debt
"[BEAM-8661] Moving runners to have per-module logger (#10097)
* Moving runners to have per-module logger
* Fix lint
* Fixups
* Fix merge issue";non_debt
"Recover back DDL's IT (#8822)
* Recover back DDL's IT
* Refactor BaseIT";non_debt
HBASE-3128 On assign, if ConnectException, reassign another server;non_debt
ACCUMULO-1299 Merge branch '1.5.1-SNAPSHOT';non_debt
HDFS-5807. TestBalancerWithNodeGroup.testBalancerWithNodeGroup fails intermittently. Contributed by Chen He.;non_debt
Add type coercion from String to Number, via Double.valueOf;non_debt
"ARROW-5480: [Python] Add unit test asserting specifically that pandas.Categorical roundtrips to Parquet format without special options
This only works for string types for the moment. Once ARROW-6277 is addressed we can expand to other types.
Closes #5110 from wesm/ARROW-5480 and squashes the following commits:
a161b2432 <Wes McKinney> Add missing pandas marks
f1f808235 <Wes McKinney> Don't use pandas's Parquet functions since they don't work in CI for some reason
9e984043a <Wes McKinney> Improve unit test for out-of-order values, nulls, unobserved category values
620b3b858 <Wes McKinney> Add unit test for ARROW-5480";non_debt
Update Dataflow Worker Version;non_debt
license comment shouldn't be javadoc comment;non_debt
AVRO-2762:Unkown resource closed;non_debt
This closes #2532;non_debt
Upgrade Chronicle Core to version 1.16.24;non_debt
"[AIRFLOW-4397] Add GCSUploadSessionCompleteSensor (#5166)
This commit add a GoogleCloudStorageUploadSessionCompleteSensor
to address the use case of accepting files from a third party vendor
who refuses to send a success indicator when providing data files
into a bucket and waiting until an inactivity period has passed to
indicate the end of an upload session.";non_debt
Exclude adoc template from license check;non_debt
TS-2487: export PUSH HTTP method constants to the TS API;non_debt
IGNITE-8929 Do not disable WAL if node does not have MOVING partitions. Fixes #4372;non_debt
update EmbeddedCassandraServiceTest client to use framed mode.  patch by jbellis;non_debt
HDFS-6305. WebHdfs response decoding may throw RuntimeExceptions (Daryn Sharp via jeagles);non_debt
"ARROW-2304: [C++] Fix HDFS MultipleClients unit test
This test was failing because the `scratch_dir_` directory did not exist
Closes #1743 from wesm/ARROW-2304 and squashes the following commits:
9804f3b <Wes McKinney> Fix MultipleClients unit test";non_debt
HDFS-4170. Add snapshot information to INodesInPath.;non_debt
YARN-9790. Failed to set default-application-lifetime if maximum-application-lifetime is less than or equal to zero. Contributed by kyungwan nam.;non_debt
add final to parameters .. guided by PMD;non_debt
SPOI-3084 added code that handles port javadoc and get method javadoc;non_debt
Reverting to SequentialExecutor for unitests;non_debt
HDFS-13867. RBF: Add validation for max arguments for Router admin ls, clrQuota, setQuota, rm and nameservice commands. Contributed by Ayush Saxena.;non_debt
Merge branches 'ignite-564' and 'ignite-sprint-3' of https://git-wip-us.apache.org/repos/asf/incubator-ignite into ignite-564;non_debt
Undelivered Messages Doc Update;non_debt
#1567, for test cases;non_debt
GG-8775 Configure external process logger with the same JUL config as node;non_debt
Deduper with hdfs sttore;non_debt
Fix max capacity timeline in Heron UI (#3383);non_debt
AMQ-4748: Fixed shutting down AMQ standalone does not raise exception.;non_debt
SOLR-9720: tweak JSONWriter.writeArray;non_debt
add syntaxes for loggy;non_debt
[BEAM-4443] Builders of ReduceWindow operator extended to be able to expose windowing settings.;non_debt
CAMEL-5263 Comet component does not pass EnableSessionHeader paramter to CometdBinding properly.;non_debt
Install twine in virtual env.;non_debt
SOLR-13494: Add DeepRandomStream implementation;non_debt
"This closes #202
* github/pr/202:
  Added presentInstances method to Maybe";non_debt
next batch is H10,13,14,15,19,21;non_debt
Showing paused DAGs in DAGs view;non_debt
Add a hibernate version of the MVC-CXF example;non_debt
"NIFI-3152: Ensure that we always close the IndexWriter when appropriate in SimpleIndexManager, even if an IOException is thrown when trying to commit the IndexWriter
This closes #1300.";non_debt
BIGTOP-3290. Fix build failure of Oozie.;non_debt
"Merge pull request #14 from KomachiSion/master
Remove lombok.var";non_debt
"Test Azure extension with Azurite
Fixes #1072";non_debt
"GEODE-8090: implement function/delta for redis Hash ops (#5085)
The hash ops that use function delta now are:
HDEL
DEL
HSET
HMSET
HSETNX
HGETALL";non_debt
HDDS-3704. Update all the documentation to use ozonefs-hadoop2/3 instead of legacy/current (#1099);non_debt
    VPC : by default , outgoing traffic is allowed out, once egress rules are added, only traffic specified in those are allowed out, others are blocked;non_debt
Set localhost as the base url in ControllerAdminApiApplication (#5969);non_debt
correct file name;non_debt
HBASE-10431 Rename com.google.protobuf.ZeroCopyLiteralByteString - delete ZeroCopyLiteralByteString;non_debt
Merge trunk into HA branch;non_debt
HADOOP-10301. AuthenticationFilter should return Forbidden for failed authentication. Contributed by Daryn Sharp.;non_debt
[CAMEL-4736] Added camel-xstream osgi itest that uses the blueprint.;non_debt
AMBARI-9849 .log Files are not placed in the changed directory in Ambari 1.6 and 1.7 (dsen);non_debt
"Merge pull request #6371 from yifanzou/BEAM-5341/migrate_IT_for_TfIdf
[BEAM-5341] create IT test for TfIdf example";non_debt
"[Torch] Support hard_swish op (#7174)
* imp_hardswish
* format
* fix
* hard_swish_inplace test case";non_debt
[CXF-6900] Get Colm's tests working....;non_debt
CXF-5177 fixed the unit test error of netty-server;non_debt
"ARTEMIS-669 Do binding query on sender link attach
QueueQuery was previously used instead of checking for bindings on a
particular address name.  This meant sending and receiving only worked
for those queues that happened to have the same queueName to address.
This patch replaces this with binding check.
There's also some minor ProtonTest fixes included.";non_debt
"Bug 55600 - JSyntaxTextArea : Strange behaviour on first undo
Bugzilla Id: 55600";non_debt
"[docs] Add TOC to restart strategies page
This closes #3059.";non_debt
"TOBAGO-869: Command facet on tc:panel
 - Hotfix to make the panel visible in a sheet";non_debt
ACCUMULO-377 clarified scan -c help;non_debt
Fixed NPE in listAsyncJob apis: don't include instanceId/instanceType in the response when these values are null;non_debt
Merge remote-tracking branch 'upstream/master' into code-style;non_debt
Enable javadoc for all modules by default;non_debt
#2384 merge postgresql revoke;non_debt
Avoid the Hadoop objectMapper in the local IndexTask. Fixes #1545.;non_debt
"Merge pull request #9741 from [BEAM-7926] Visualize PCollection
1. Added pcoll_visualization module to visualize materialized
PCollection data.
2. A visualization mainly consists of 3 parts: facets-dive,
facets-overview and data-table.
3. The visualization is always non-blocking w/ 2 modes: one-shot and
dynamic plotting.
4. One-shot visualization renders the visualization as HTML statically.
5. Dynamical plotting polls materialized data, initializes a
visualization and then updates the visualization continuously.
6. It's the pipeline state, i.e., whether the PCollection
materialization is being updated that decides if the visualization is
dynamic plotting or one-shot. It's not the boundedness of PCollection
that decides the visualization mode. However, when engineering for
Interactive Beam, it's alright to always use the dynamic plotting
mode as long as the InteractiveRunner(s) manages jobs and tracks the
pipeline(job) results correctly. Failing to terminate a visualization
job might cause resource leak.
7. The materialized PCollection data goes through the following process
flow: cache -> element list -> normalization -> dataframe ->
HTMLs/scripts.
8. A visualization is always self-contained. Meaning it controls when
the visualization starts and ends by itself. Once visualized, the
visualization is anchored within the notebook cell's output area. Code
in other cells can affect the visualization in the cell but will not
change the existing visualization's position in the notebook. Multiple
visualize(pcoll) calls will render multiple independent distinct
visualization instances/jobs. Each visualization runs in its own thread
outside of the notebook main thread.
9. Unittest added focusing on the above visualization logic other than
the visualization UI (those should belong to Facets, pandas and jQuery,
we'll trust them work as intended). Integration tests can be added
later.
10. Each visualization job regularly queries interactive environment for
running pipeline(job) results implicitly to determine the default
visualization end condition. It's based on the limitation that within
current interactive environment, at a time, at most one job is in
non-terminated state for an end user defined pipeline instance (in
whatever state). The end user could also use the handle returned by
visualize() to stop() the visualization job manually.
11. Added INTERACTIVE_BEAM extras_require and tests_require in setup. They are only needed for data
visualization in notebook. `jsons` is for easy serialization of any object
and `timeloop` is for self-contained periodic async tasks. They both use
MIT licenses. `facets-overview` is for overview part of facets. It uses
apache 2.0 license. `ipython` is the kernel used by jupyter, included for
non-jupyter environment though it always comes with jupyter. It uses BSD
license. The lower version limit set is the highest version listed by
flink.
* Making python version, [interactive] dependencies and IPython kernel checks properties in current interactive environment.
* When the ipython kernel is not connected to any notebook frontend, display a random sample of the normalized PCollection data as plain text.";non_debt
"Fix: Remove password if in LDAP or CUSTOM mode HiveServer2Hook (#11767)
closes #11275";non_debt
"ARROW-1098. [Format] modify document mistake
Closes #811 from LynnYuanInspur/lynn-doc and squashes the following commits:
b6ec6c05 [LynnYuan] ARROW-1098. [Format] modify document mistake";non_debt
"PARQUET-1088: Remove parquet_version.h from version control since it gets auto generated
@wesm  Thanks for the tip on fixing this.
Closes #388 from majetideepak/PARQUET-1088 and squashes the following commits:
32915c6 [Deepak Majeti] add parquet_version.h to gitignore
48be6e2 [Deepak Majeti] Fix CMAKE arguments";non_debt
"[SPARK-7633] [MLLIB] [PYSPARK] Python bindings for StreamingLogisticRegressionwithSGD
Add Python bindings to StreamingLogisticRegressionwithSGD.
No Java wrappers are needed as models are updated directly using train.
Closes #6849 from MechCoder/spark-3258 and squashes the following commits:
b4376a5 [MechCoder] minor
d7e5fc1 [MechCoder] Refactor into StreamingLinearAlgorithm Better docs
9c09d4e [MechCoder] [SPARK-7633] Python bindings for StreamingLogisticRegressionwithSGD";non_debt
Add Oracle DDL table related statements Parser;non_debt
CAMEL-14671: Make PropertiesFunction part of the PropertiesComponent SPI;non_debt
SCB-308 Vertx transport server timeout will cause VertxServerRequestToHttpServletRequest getRemoteAddress NullPointException, so save the socketAddress with the servletRequest;non_debt
"[FLINK-17169][table-planner-blink] Rename StreamRecordUtils#record() to insertRecord()
This also Renames StreamRecordUtils#retractRecord() to updateBeforeRecord().
This closes #11797";non_debt
"REST api creating app: accept AppBulder, app or entity
- If given an entity, wrap it in an application automatically
- If given ApplicationBuilder, then build the app
- If given Application interface, then create entity with it 
- If given Application class, then create it";non_debt
https://issues.apache.org/jira/browse/AMQ-826 - useManifestOnlyJar = false for apache ds tests;non_debt
https://issues.apache.org/jira/browse/AMQ-5378 - shell script improvements - remove hostname from pid file;non_debt
"AMBARI-4949. Storm: When Nimbus is down, the graphs are shown with spinners that spin forever (page refresh shows ""Loading..."" bar). (Denys Buzhor via onechiporenko)";non_debt
"Failure detector detects and ignores local pauses
Patch by brandonwilliams, reviewed by Richard Low for CASSANDRA-9183";non_debt
"SPARK-1944 Document --verbose in spark-shell -h
https://issues.apache.org/jira/browse/SPARK-1944
Closes #1020 from ash211/SPARK-1944 and squashes the following commits:
a831c4d [Andrew Ash] SPARK-1944 Document --verbose in spark-shell -h";non_debt
remove printlns and commented-out code from NegateListsTest;non_debt
Test jcloudsLocation.releasePortForwarding;non_debt
minor,update pre-defined name/pwd comment;non_debt
[CODEGEN] Use correct math intrin for metal (#562);non_debt
example/demo ->tobago-example/tobago-example-demo;non_debt
Merge branch 'javadoc-jdk8-1.7';non_debt
AVRO-29. Reverting changes to GenericDatumReader.;non_debt
SOLR-11 - BufferedTokenStream and RemoveDuplicatesTokenFilter from SOLR-11-BufferedTokenStream-RemoveDuplicatesTokenFilter.patch plus some additional tests and example config changes;non_debt
[KARAF-530] Rename org.apache.karaf.assemblies/apache-karaf-* to org.apache.karaf/apache-karaf-*;non_debt
Update pinot helm to adding custom configs and update the jvm default configs (#6011);non_debt
"Merge pull request #1005 from qiaohaijun/patch-7
add a shell to get ptb data";non_debt
"Recover the GROOVY-4151 test
it is deleted by mistake";non_debt
"fix(13606): Stop Olingo Index Classes generating NP Exceptions
* Olingo*Index
 * Provides null-checks to each method to avoid any NPE
* Tests
 * The consumer testing routes were being started prior to the tests that
   concerned them. Consequently, it was hit/miss whether the tests would
   catch all messages generated by the routes. This matters for the
   'already seen' tests as adding more of there meant tests failed with
   messages having no bodies.
 * Consumer tests broken out into their own classes and camel context
   started in the test once the mock endpoints have been property setup.";non_debt
"GEODE-1814: Create the gateway receivers after regions
Create the gateway receivers last, to ensure that they don't try to
process any events until the regions are actually created.";non_debt
GEODE-2261: rename SharedConfig to ClusterConfigurationService;non_debt
Document bug 40394;non_debt
"[pulsar-sql]Expose configurations of managed ledger and bookkeeper client. (#5702)
Motivation
Expose more configurations of managed ledger and bookkeeper client, this will provide ability for users to optimize performance of entries reading.
Modifications
Expose some configurations related to managed ledger and bookkeeper client in pulsar.config.
Verifying this change
Add unit tests to verify the default value of the configurations.";non_debt
build: fix javadoc targets;non_debt
prepare next release: set to beta-1 SNAPSHOT;non_debt
AMBARI-13615 - Express Upgrade: ZKFC Cannot Stop Because Newer Configurations Don't Exist (jonathanhurley);non_debt
need to quote the tuple count;non_debt
add empty tests dir, to stop eclipse whining;non_debt
added extra jar for testing of connection pool ;non_debt
This closes #57;non_debt
"Merge pull request #526 from afs/fuseki-verbose
JENA-1662: Enable verbose request logging";non_debt
SOLR-296  -- wrapping reader.terms() in try/catch ;non_debt
This closes #3278;non_debt
"[hotfix] Trivial WriteMode comment fix
WriteMode has 2 values NO_OVERWRITE and OVERWRITE but it refers CREATE in the javadoc.
Probably old code.
This closes #1475";non_debt
BIGTOP-604. Bump version of Hive to 0.9.0;non_debt
IGNITE-10774 Migrate test suites that are fixed lists of test classes from Junit 3 to 4 - Fixes #5732.;non_debt
"[SPARK-30578][SQL][TEST] Explicitly set conf to use DSv2 for orc in OrcFilterSuite
### What changes were proposed in this pull request?
Explicitly set conf to let orc use DSv2 in `OrcFilterSuite` in both v1.2 and v2.3.
### Why are the changes needed?
Tests should not rely on default conf when they're going to test something intentionally, which can be fail when conf changes.
### Does this PR introduce any user-facing change?
No.
### How was this patch tested?
Pass Jenkins.
Closes #27285 from Ngone51/fix-orcfilter-test.";non_debt
HBASE-11433 LruBlockCache does not respect its configurable parameters;non_debt
"storm deployment entity, and fixes to make ui start
more storming, ensuring a wait before supervisors start, and tidying up how deployment gets defined
now storm uses a mutex to prevent nodes starting concurrently";non_debt
OF: fix error (it's not .output as we're not doing check_call);non_debt
CAMEL-15836 - Camel-AWS2-S3: enable autowire on the s3 client, removed the autodiscoverClient option, useless now;non_debt
Fix to prevent FileImportTracker from overwriting the real error message.;non_debt
HIVE-10541 : Beeline requires newline at the end of each query in a file (Chaoyu Tang, reviewed by Thejas);non_debt
IGNITE-2708: fix tests that don't create unique IndexingSPI per node;non_debt
Implement getTableStatistics;non_debt
Update include paths;non_debt
added extra visualisation plugin to render the broker, connections, sessions, consumers in a DOT graph;non_debt
Regen;non_debt
HDFS-10281. TestPendingCorruptDnMessages fails intermittently. Contributed by Mingliang Liu.;non_debt
The VM transport could deadlock between the iterate() method and the oneway() method when the async message buffer used by the transport fills up.  Change the synchronization logic to make use the a Valve to avoid needing to lock mutexes for so long.;non_debt
"DRILL-5164: Equi-join query results in CompileException when inputs have large number of columns.
close apache/drill#711";non_debt
"Merge pull request #4500 from jbonofre/BEAM-793
[BEAM-793] Add backoff support in JdbcIO Write";non_debt
"Merge release branch 4.6 to master
* 4.6:
  CLOUDSTACK-9155 make sure logrotate is effective";non_debt
CAMEL-12379 - Shutdown only AWS clients owned by the context - AWS Kinesis;non_debt
forgot to add my name;non_debt
"[BEAM-8487] Convert forward references to Any (#9888)
* Fix python docs not recognizing typing.Union";non_debt
Merge remote-tracking branch 'origin/4.13';non_debt
AMBARI-12612. Namenode dir textarea vanishes when value contains /home in path (akovalenko);non_debt
[CXF-2384] Add another test that tests a port open, but no service there;non_debt
Include in-flight data.;non_debt
"Merge pull request #2999 from sunbufu/feature#2981
Replay for ShardingPreparedStatement when execute.";non_debt
camel-swagger is deprecated;non_debt
GG-7434 -1 merge from sp-19;non_debt
PHOENIX-4389 Flapping tests SystemTablePermissionsIT and MigrateSystemTablesToSystemNamespaceIT( Karan Mehta);non_debt
Fixed deployVR - used to fail in case when system.vm.default.hypervisor was set to not NULL value;non_debt
AMBARI-13915 - Storm Upgrade Causes NPE Due To null Property Value Replacement (jonathanhurley);non_debt
HBASE-11152 Disable tput in test-patch.sh (Gustavo);non_debt
[CXF-7917]WebSocketDestinationFactory should check http-undertow or http-jetty on the classpath to determine which implementation should be used;non_debt
SOLR-854: Add run-example build target;non_debt
re-enable randomized test_ndarray_elementwise (#12300);non_debt
Explicitly pass Pipeline in AppliedPTransform;non_debt
"Julia: deprecate `mx.empty`, replace it with `UndefInitializer` (#13934)
In Julia 0.7+, constructing a uninitialized array is provided via
the APIs:
        - `Array{T,N}(undef, dims...)`
        - `Array{T,N}(undef, dims)`
        - `Array{T}(undef,   dims...)`
        - `Array{T}(undef,   dims)`
There is an API `mx.empty(dims...)` serving for this purpose.
This PR proposes that deprecating the original API `mx.empty` and
provide the functionality with the API design similar to Julia's Base.
        - `NDArray{T,N}(undef, dims...)`
        - `NDArray{T,N}(undef, dims)`
        - `NDArray{T}(undef,   dims...)`
        - `NDArray{T}(undef,   dims)`
        - `NDArray(undef,      dims...)`
        - `NDArray(undef,      dims)`
e.g.
- The original `mx.empty` APIs are still functional.
  If user invokes them, a deprecation warning will be popped up.";non_debt
update a few license issues in package.htmls;non_debt
CAMEL-12268 - Camel-AWS: Lets call shutdown on the clients while stopping endpoints - AWS EC2;non_debt
feat: support mTLS connection to ETCD (#1437);non_debt
2.1.x to 2.2.2 upgrade for Domain level vlans;non_debt
"[SPARK-13114][SQL] Add a test for tokens more than the fields in schema
https://issues.apache.org/jira/browse/SPARK-13114
This PR adds a test for tokens more than the fields in schema.
Closes #11020 from HyukjinKwon/SPARK-13114.";non_debt
Add weld2 property - weld 2.1.0-Final;non_debt
HBASE-22108 Avoid passing null in Admin methods;non_debt
Merge remote-tracking branch 'origin' into reef-bridge;non_debt
AMBARI-13735. Ambari throws error when updating Notification. (Laszlo Puskas via swagle);non_debt
HIVE-18352: introduce a METADATAONLY option while doing REPL DUMP to allow integrations of other tools (Anishek Agarwal reviewed by Daniel Dai);non_debt
"Fixes WebAppIntegrationTest teardown
Previously, wasn't correctly stopping app-server entities,
so subsequent tests were failing.";non_debt
"[docs] make the nav bar scroll instead of fixing it at the top
- we gain some precious space which helps people reading the docs";non_debt
add close to TestClientInfo.java;non_debt
"Adds ArchiveUtilsTest + fixes ArchiveUtils
- Fixes case where optionalTmpDir not supplied
- Adds various test cases";non_debt
CLOUDSTACK-4187: 2.2.1 - 4.2 Upgrade: Few Guest OS Types information is inconsistent on the Upgraded Setup when compared with the fresh 4.2 Installation.;non_debt
[AMBARI-25002] Allow Stack To Define Custom Rolling Orchestration Logic (#2695);non_debt
PHOENIX-2899 Add test for inflight transactions over partially evaluating filters;non_debt
Added Login Controller and Grails Generated Empty Folders (TEST);non_debt
Upating version in release.version as well;non_debt
"THIRDEYE-677 : Create azkaban project for pinot flow of thirdeye
RB=667613
G=thirdeye-dev-reviewers
A=kgopalak";non_debt
Note TS-2036 fix in CHANGES.;non_debt
"Change the cluster creation logic (#872)
* Change the cluster creation logic
In this commit, minor modifications have been added which:
1- Update topology information in the Cluster Config
if cloud is enabled for Azure environment.
2- Tests have been change accordingly.
3- The deprecated APIs have been changed in the test to
follow new APIs.";non_debt
"Merge pull request #761 from rinuboney/patch-1
Update tutorial.md";non_debt
"Update defaults.yaml
Fix incorrect comment";non_debt
Component Verifier: fix wrong scheme for camel-http4;non_debt
"Some refactoring around DataPublisher to make sure it is properly closed
RB=365362
R=etl-infra-reviewers
A=stakiar";non_debt
AMBARI-24166. Metric Collector goes down after HDFS restart post EU;non_debt
use get parameter();non_debt
"THRIFT-1103. py: TZlibTransport for python, a zlib compressed transport
This patch adds a new TZlibTransport to the Python library and extends the test suite to exercise it.
Patch: Will Pierce";non_debt
Merge branch 'yingdac-add-nameserverconfig' into reef-bridge;non_debt
HBASE-21928 Deprecated HConstants.META_QOS;non_debt
AMBARI-15285:AMS quicklink directory name is wrong causing errors in ambari server start (dili);non_debt
"Increase Heap size from 512m to 1g
Comment out additional JVM options following Felix notes";non_debt
"README: put the original logo back
This reverts commit da62cecb6883501767aec1bbe4448ab3c817540a and sneaks
in the change silently to not hurt anyone's sentiments.";non_debt
Use the prefixes defined in the wsdl;non_debt
Fixes #957 Fluo scripts copy jars into fluo software dir. (#964);non_debt
Fix problem with some OSX not handling the cast on imDecode (#13207);non_debt
"Merge pull request #686 from patrickleotardif/non-owner-notif
Notify owner when others perform critical DAG actions on Web UI";non_debt
"[CALCITE-528] When making field names unique, follow type system's case-sensitivity policy (Jacques Nadeau, Jinfeng Ni, Minji Kim)
Ensure that uniquify keeps the ordinal position of input names (Jinfeng Ni).
Add tests (Minji Kim).
Fix up (Julian Hyde).
Close apache/calcite#245";non_debt
Merge remote-tracking branch 'origin/sprint-2' into sprint-3;non_debt
BIGTOP-3169. Enable local repo is not working on yum systems (#472);non_debt
LANG-747 NumberUtils does not handle Long Hex numbers;non_debt
Update dependency org.webjars.npm:swagger-ui-dist to v3.35.0;non_debt
Threads = users;non_debt
fix DBI->connect calls to allow connection to remote host;non_debt
Add build status image to README.md;non_debt
"IGNITE-4494 .NET: Optimize ExamplesTest.TestRemoteNodes
Reuse standalone nodes between test runs";non_debt
"Fixed position integer overflow bug in Memory Segments and their Views.
Channel Readers and Writers tollerate asynchronously released memory segments.";non_debt
Merge branch 'cassandra-2.1' of http://git-wip-us.apache.org/repos/asf/cassandra into cassandra-2.1;non_debt
Upgrade AWS SDK and related bundle to version 1.11.186;non_debt
"Merge pull request #3229 from upthewaterspout/feature/make-immutable-GEODE-6380
GEODE-6380: Fixing a number of static fields to be immutable";non_debt
66141: SystemML Engine Enhancements - New dynamic write (language/compiler/runtime support, cp and mr), incl tests;non_debt
Merge branch 'messages-unification' of github.com:apigee/usergrid-portal-internal into rod;non_debt
AMBARI-11603. Raw-mode tooltip-message doesn't contain units (Richard Zang via srimanth);non_debt
"Change for Bug 3316 - manual live migration
The MigrateVMCmd response should be in all small case.";non_debt
"[SPARK-10046][SQL] Hive warehouse dir not set in current directory when not ��_
Doc change to align with HiveConf default in terms of where to create `warehouse` directory.
Closes #9365 from xwu0226/spark-10046-commit.";non_debt
AMBARI-6756. Rename Flume component name from 'Flume Agent' to 'Flume' (alexantonenko);non_debt
lint;non_debt
Merge branch 'master' of git://git.apache.org/incubator-trafodion;non_debt
HIVE-23547 Enforce testconfiguration.properties file format and alphabetical order (Miklos Gergely, reviewed by Laszlo Bodor);non_debt
"Remove StreamCoordinator.streamExecutor thread pool
patch by jasobrown reviewed by Dinesh Joshi for CASANDRA-14402";non_debt
"Revert ""fix setting compaction_strategy_class using CQL""
This reverts commit 2c62adab36a589e9ff9e9169fd2125272e067918.";non_debt
"Update scanCode.py so that it is configuration file driven. (#2030)
* Update scanCode.py that is configuration file driven.
* Python 3 updates, future proofing.
* Add files via upload";non_debt
66141: SystemML Engine Enhancements - New ultra-sparse mr aggregation runtime (various combinations, incl fix mean empty blocks);non_debt
"Merge pull request #9477 from lukecwik/python
[BEAM-8151, BEAM-7848] Swap to using an unbounded thread pool which shrinks when threads are not being used.";non_debt
pass in case insensitive class comparator for treeset;non_debt
Add CPU time to metrics for segment scanning.;non_debt
Upgrade AWS SKD v2 to version 2.10.81;non_debt
ignite-1.5 Fixed benchmark configuration.;non_debt
IGNITE-4473 - Client should re-try connection attempt in case of concurrent network failure.;non_debt
HIVE-6605 : Hive does not set the environment correctly when running in Tez mode (Sergey Shelukhin, reviewed by Gunther Hagleitner and Siddharth Seth);non_debt
"[FLINK-10791] Provide end-to-end test for Kafka 0.11 connector (#7038)
[FLINK-10791][e2e] Provide end-to-end test for Kafka 0.11 connector";non_debt
adding a dependency to make example work (because of #1291);non_debt
Fix calendar scatter;non_debt
"KAFKA-3292 ClientQuotaManager.getOrCreateQuotaSensors() may return a null ClientSensors.throttleTimeSensor
Closes #977 from ijuma/kafka-3292-null-throttle-time-sensor";non_debt
"LUCENE-913: Two consecutive score() calls return different 
            scores for Boolean Queries.";non_debt
"Add ability to customize cassandra log directory using $CASSANDRA_LOG_DIR
 Patch by Zephyr Guo Reviewed by Mick Semb Wever for CASSANDRA-15090";non_debt
[AMQ-6640] shrink test duration for ci boxes;non_debt
Classes/Structs are now hidden (using @internal...@endinternal tag).;non_debt
DISPATCH-909 Preparing for new overview charts page;non_debt
"HDDS-143. Provide docker compose files to measure performance in a pseudo cluster.
Contributed by Elek, Marton.";non_debt
"[FLINK-4144] Yarn properties file: replace hostname/port with Yarn application id
This closes #2191";non_debt
[CARBONDATA-1257] Measure Filter implementation. This closes #1079;non_debt
SOLR-5499: Log a warning if /get is not registered when using SolrCloud;non_debt
Update rhino from 1.7.R5 to 1.7.7;non_debt
"ISSUE #339: Use ephemeral port for bookkeeper tests and variable unit test improvements
Descriptions of the changes in this PR:
- Enable ephemeral port by default for all BookKeeperClusterTestCase based test cases
- Removed Multi* based classes. A lot of unit tests unnecessarily extended from those base classes. Converted them to extend BookKeeperClusterTestCase directly. Confirmed this with sijie
- Reduce sleep period for some test cases
LedgerEntry fixes for #317
- use checkState rather than checkNull to keep the behavior consistent as before
- fix BookKeeperTest#testReadEntryReleaseByteBufs
TestBackwardCompat:
- removed testCompact400 (400 has been very long time ago, no one is running 400)
- BookKeeperNettyServer should shut down netty server when failed to construct a bookie
TestDiskChecker:
- increased the threshold to 0.99f. be consistent with TestBKConfiguration
BookieInitializationTest
- make each test method using different ledgers path, so registration won't be conflicting between tests
BookieJournalRollingTest
- make sure bookie port is used correctly on restarting bookies.
This closes #340 from zhaijack/use_ephemral_ports, closes #339";non_debt
"Bug 11823: Added cloud-setup-encryption script for encryption upgrade
fix build";non_debt
Added tests for use of %WSP %WSP* %WSP+ as separator for lengthKind='delimited' to close DFDL-142;non_debt
"Merge branch 'cassandra-2.1' into cassandra-2.2
Conflicts:
	build.xml";non_debt
"set DbPrefix with value allocated with erlfdb_hca
Previously we are using the DbName to set DbPrefix for clarity. In order
to support soft-deletion while providing efficient value for DbPrefix
allocation, we use value allocated with erlfdb_hca for DbPrefix.";non_debt
STORM-2515: Rename SSL methods in KafkaSpoutConfig, fix new violations from master;non_debt
"Fix for:
https://issues.apache.org/activemq/browse/AMQ-1116
https://issues.apache.org/activemq/browse/AMQ-1575
https://issues.apache.org/activemq/browse/AMQ-1577
https://issues.apache.org/activemq/browse/AMQ-1581";non_debt
AMBARI-9666. Kerberos: Adding a service to a Kerberized cluster requires Kerberos-related tasks occur before INSTALL stage (rlevas);non_debt
 GUACAMOLE-1218: Update documentation to show tokens being used as part of the encrypted json;non_debt
Updating Tomcat;non_debt
"make EchoMessage a singleton
patch by dbrosius reviewed by jbellis for CASSANDRA-8972";non_debt
Move count and silenceCount into window.;non_debt
Merge branch 'master' of https://github.com/linkedin/gobblin;non_debt
"[SPARK-31242][SQL][TEST] mergeSparkConf in WithTestConf should also respect spark.sql.legacy.sessionInitWithConfigDefaults
### What changes were proposed in this pull request?
Make `mergeSparkConf` in `WithTestConf` respects `spark.sql.legacy.sessionInitWithConfigDefaults`.
### Why are the changes needed?
Without the fix, conf specified by `withSQLConf` can be reverted to original value in a cloned SparkSession.  For example, you will fail test below without the fix:
So we should fix it just as  #24540 did before.
### Does this PR introduce any user-facing change?
No.
### How was this patch tested?
Added tests.
Closes #28014 from Ngone51/sparksession_clone.";non_debt
This closes #795;non_debt
Add missing committers;non_debt
not needed per sujen.;non_debt
TestStringtoFile#testWriteToFileIOException: Make file writable again to allow deletion;non_debt
GG-11125 - Use BTree in metadata storage.;non_debt
[TC-136] Fixes a logic bug that prevented the easy case for finding bond speed, and handle the case where the CentOS 7.3 3.10.0-514 kernel uses lower_X as a pointer to enslaved interfaces, while retaining the slave_X case from earlier kernels.;non_debt
Updated the Key sign info;non_debt
"[BROOKLYN-183] Re-add deleted interfaces with deprecated annotation
Implemented in terms of newer classes and/or functions during OSGification.";non_debt
Refactor AbstractExecuteGroupEngine;non_debt
"[FLINK-10281] [table] Fix string literal escaping throughout Table & SQL API
This commit fixes the string literal escaping of the Table & SQL API. Proper
escaping of quotes was not possible in the past for Table API. SQL and SQL Client
were not standard compliant.
Due to FLINK-8301 backslashes were considered in SQL literals, however, they
should only be used in SQL `U&'\1234'` literals. For the Table API, the new
logic relies on the Java/Scala escaping and uses duplicate quotes for escaping
the quotes in expression strings. For SQL, we rely on unicode string literals
with or without the UESCAPE clause. The SQL Client was using backslashes for
escaping new lines. For the SQL Client, we allow unescaped new lines and
use '' for statement finalization similar to other SQL clients.
This closes #6671.";non_debt
use auto source_group (#146);non_debt
fix missing js image resources;non_debt
"Prevent checking for the field 'replication' while adding LLC tables. (#1375)
* Prevent checking for the field 'replication' while adding LLC tables.
LLC tables do not pay attention to repliction, only to replicasPerPartition.
In case of HLC, replication must equal to (or be a multiple of) the number of
realtime instances, checking it in PinotTableRestletResource.java and setting it to
some arbitrary configured value does not help.
For offline tables, the check is correct but should be done conditionally (i.e. table type is
OFFLINE)
* Addressed review comments & added verification to the put() call as well
* Another attempt to get this right
* We cannot test LLC at a unit test level, kafka setup is required. Commented out the assert statement";non_debt
Move init of testList and make final;non_debt
findbugs: (un)boxing of long from string;non_debt
Use gmavenplus to build neo4j.;non_debt
[CARBONDATA-797] Data loss for BigInt datatype if data contains long max and min values.This closes #676;non_debt
added support for random vertex cuts;non_debt
"Merge remote-tracking branch 'remotes/origin/sprint-2' into ignite-432
Conflicts:
	modules/core/src/main/java/org/apache/ignite/cache/query/Query.java
	modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/IgniteH2Indexing.java
	modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/sql/GridSqlElement.java";non_debt
"Python style error because of extraneous characters
Presence of Non-ASCII characters caused compilation errors.";non_debt
CLOUDSTACK-7006: Restore template ID in ROOT volume usages;non_debt
HADOOP-12481. JWTRedirectAuthenticationHandler doesn't Retain Original Query String. Contributed by Larry McCay.;non_debt
#GG-8400 Change path in deploy command.;non_debt
[BEAM-6148] ptest support arbitrary runners;non_debt
Camel-AWS2-SES: Fixed docs intro;non_debt
Merge branch 'sebastian-nagel/nutch:NUTCH-2281', fixes NUTCH-2281, closes #119;non_debt
LUCENE-6292: seed StringHelper better;non_debt
We can only remove this in 3.x at earliest (depending on our policy change).;non_debt
LUCENE-9050: Backport changes;non_debt
CAMEL-5503 renamed the annotation attribute header to headerName;non_debt
"GEODE-611: Change findbugs annotations to use ASL library
Swtich the findbugs annotation dependency to use an ASL version
from https://github.com/stephenc/findbugs-annotations.  This
library only supports the SuppressWarning annotation, not
SuppressFBWarning so some source files were updated.";non_debt
add role judgement;non_debt
fix format conversion for NimbusClient, and make timeout optional;non_debt
"[CALCITE-4075] Mock table 'EMPNULLABLES' should allow nulls in all non-pk columns
The name of the table implies that all columns are nullable so to avoid confusion 'ENAME' is also made nullable.";non_debt
Provide plugin development guide EN version.;non_debt
update couch_index (closes COUCHDB-3028);non_debt
AMBARI-11167. Move alert success logs to DEBUG level (dlysnichenko);non_debt
"Merge pull request #1696 from metamx/cpuTimeReporting
Add CPU time to metrics for segment scanning.";non_debt
This closes #971;non_debt
Add unit test with inlined groovt script for people who want to code in xml;non_debt
LDAP doc updates;non_debt
fxies;non_debt
add missing 'stop' help back to nodetool;non_debt
# IGNITE-753 Fixed build.;non_debt
MAPREDUCE-7165. mapred-site.xml is misformatted in single node setup document. Contributed by Zhaohui Xin.;non_debt
"[AMBARI-22770] Bring jenkins job build script under version control (#98)
[AMBARI-22770] Bring jenkins job build script under version control";non_debt
GROOVY-5366 unable to add assertions via compile time transform;non_debt
Regen website docs;non_debt
Added js/.net api docs to the vote thread email template CTR;non_debt
"Merge branch 'cassandra-1.1' into trunk
Conflicts:
	src/java/org/apache/cassandra/cql3/statements/SelectStatement.java";non_debt
PHOENIX-5194 Thread Cache is not update for Index retries in for MutationState#send()#doMutation();non_debt
tightened synchronization around dispatchQueue;non_debt
"CLOUDSTACK-6568:API:createVolume: Volume gets created with wrong domain
ID.";non_debt
"modify: (#137)
1. remove libunwind deps
2. modify install in build.sh
3. add SHOW USER stmt to show user privilege";non_debt
CAMEL-2875: sampling DSL supports async routing engine.;non_debt
JENA-685 : Don't try to reorder pattern of 0 or 1 triple patterns;non_debt
HADOOP-14596. AWS SDK 1.11+ aborts() on close() if > 0 bytes in stream logs error. Contributed by Steve Loughran;non_debt
# ignite-gg-9830 Minor fix.;non_debt
HBASE-3508. LruBlockCache statistics thread should have a name;non_debt
ZOOKEEPER-693: hudson failure in ZKDatabaseCorruptionTest (mahadev via henryr);non_debt
[AIRFLOW-3262] Add param to log response when using SimpleHttpOperator (#4102);non_debt
Fix issue number: 932 => 931;non_debt
test util supports print data table.;non_debt
AMBARI-19140 Ambari Server symbolic links has double // when root dir is just / (dili);non_debt
HIVE-4336 Selecting from a view, and another view that also selects from that view fails;non_debt
"Revert ""HIVE-15648: Hive throws compilation error due to powermock.version not being present in root pom (Vaibhav Gumashta reviewed by Thejas Nair)""
This reverts commit ec82b84f309119121dc55aa84c1b9b70e7a0c334.";non_debt
DISPATCH-375: Fix target .war file name in installation instructions;non_debt
"use weak references to track slab regions
patch by jbellis reviewed by stuhood for CASSANDRA-3162";non_debt
https://issues.apache.org/jira/browse/AMQ-3120 - test case in the making;non_debt
[CALCITE-1008] Replace Closeable with AutoCloseable;non_debt
Update bin scripts;non_debt
for #2722, move DDLStatement.index to CreateIndexStatement & DropIndexStatement;non_debt
add assertWatch();non_debt
"[hotfix] Extract JobLeaderService interface + rename impl into DefaultJobLeaderService
This commit allows to provide different JobLeaderService implementations to the TaskExecutor.";non_debt
MockCatalogReader is used in testing, so cache should be disabled there to avoid thread conflicts and/or stale results;non_debt
"Merge pull request #409 from mattcasters/master
HOP-2215 : NPE when creating project with relative path in home folder";non_debt
Added STORM-713 to CHANGELOG.;non_debt
HIVE-10538: Fix NPE in FileSinkOperator from hashcode mismatch (Peter Slawski reviewed by Prasanth Jayachandran);non_debt
AMBARI-17826. Change in Ambari for Atlas config properties for Kerberos auth (smohanty);non_debt
Upgraded to HAPI 2.1 and fixed two tiny bugs of the HL7DataFormat#isValidate() & HL7MLLPConfig#isValidate() methods.;non_debt
CAMEL-1940: Fixed pollEnrich from a JMS queue. Also fixed some other failing unit test due class renames.;non_debt
"Merge pull request #2353 from cloudant/exunit-cover
Exunit cover";non_debt
"Fix CqlRecordWriter with composite keys
patch by Craig McMillian reviewed by jbellis for CASSANDRA-5949";non_debt
ApiServlet: use HttpUtils instead of class specific implementation;non_debt
Issue 4635: Address pipe reuse after configuration reload issues;non_debt
AMBARI-6621. RM HA Wizard: Show confirmation popup if user try to close wizard on the last step. (akovalenko);non_debt
"Merge pull request #141 from Microsoft-CISL/Julia-TangConfigurationUpdate-11-26
Julia Tang Fork Injector and test case";non_debt
"Merge ""Fix for bug 1360493 - Use correct row ID length""";non_debt
CAMEL-3640: Lucene should type convert to String for headers and not type cast.;non_debt
Updated to log4j-2.11.1 (from log4j-2.11.0);non_debt
"Revert ""[FLINK-20033] Make JobManagerJobStatusListener call back run directly""
This reverts commit 03047a78b6ad8017eb240548a009424d68ffc971.
This closes #14037.";non_debt
"Revert ""[SPARK-5244] [SQL] add coalesce() in sql parser""
This reverts commit 812d3679f5f97df7b667cbc3365a49866ebc02d5.";non_debt
ZOOKEEPER-1380. zkperl: _zk_release_watch doesn't remove items properly from the watch list. (Botond Hejj via mahadev);non_debt
add catch (final Exception ex);non_debt
Merge branch 'cassandra-3.0' into trunk;non_debt
remove connections;non_debt
"Merge from trunk
TOBAGO-1455: Updating examples to Jetty 9";non_debt
Added crontab file;non_debt
Merge branch 'trunk' into branch-feature-AMBARI-20859;non_debt
"[SYSTEMDS-2812] Added conv1d layer to nn library (via conv2d)
Closes #1174.";non_debt
Upgrading to JAX-RS 2.1-m04, updating SSE server-side implementation to accomodate API changes. Sealed SseImpl;non_debt
for #1363 remove sharding-transaction-reg-api dependency.;non_debt
TOBAGO-163 Calculation of component-height doesn't work correctly if margin is set in gridLayout;non_debt
1.5.0-SNAPSHOT;non_debt
rebase;non_debt
Build derby sample DB from source instead of downloading prebuild binary;non_debt
"[Bug 55512] Summariser should be enabled by default in Non GUI mode
Restore 30 seconds as interval
Bugzilla Id: 55512";non_debt
add missing resources;non_debt
Adding database creation command to mysqlscript.sql file;non_debt
dfs->postorder;non_debt
add ulimit_asf wrapper class;non_debt
Merge pull request #8975 Use Beam's abstraction of pickler instead of dill in coder tests.;non_debt
modify AggregationDistinctQueryResult();non_debt
"indexing-service: fix HTML title on overlord console (#6671)
This follows a similar fix to the body of the page done in #5627.";non_debt
AMBARI-714. Job FSM Impl and tests. (Contributed by hitesh);non_debt
Fix the <firstVersion> of extensions that were released for the first time;non_debt
"[FLINK-2480][test] add test for PrintSinkFunction
This closes #991.";non_debt
Fixing LB not spawning issue;non_debt
"[SYSTEMML-2178,2183] Revert ANTLR version upgrade (back to 4.5.3)
This patch reverts the ANTLR version update from 4.5.3 to 4.7.1 for
Spark 2.3 because it lost backwards compatibility with Spark 2.1 and
2.2. Compiling our source with an older version works with warnings on
Spark 2.3 and without issues on Spark 2.1 and 2.2, while a newer version
would produce runtime errors on Spark 2.1 and 2.2. 
In our SystemML 1.1 release notes we should deprecate the support for
Spark 2.1 and 2.2 and in SystemML 1.2 make the switch to the newer ANTLR
version.";non_debt
"Thrift-1673: Ruby compile flags for exension for multi arch builds (os x)
Client: rb
Patch: Jake Farrell
Updating extconf to only grab arch flags from ruby binary to stop rvm version >= 1.9.x from breaking.";non_debt
"Merge pull request #7961 from amaliujia/rw-add_missing_bytes
[SQL] add missing bytes to fieldToAvatica";non_debt
Updates to README (#400);non_debt
Merge branch 'master' of https://github.com/ecomfe/echarts;non_debt
AMBARI-20700 - UI should use the URL as-given by the backend (rzang);non_debt
Updated to jodd-3.6.6.jar (from 3.6.4);non_debt
Merge branch 'master' of github.com:apigee/usergrid-stack-internal;non_debt
fix class for oraclejava;non_debt
"Merge pull request #495 from Daniel-Dos/TOMEE-2550
TOMEE-2550-Translate to portuguese: examples/application-composer";non_debt
"Merge branch 'master' into lucene-6835
Conflicts:
	lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomy.java
	lucene/facet/src/test/org/apache/lucene/facet/taxonomy/writercache/TestCompactLabelToOrdinal.java";non_debt
JENA-1108 : jena-cmds module;non_debt
Avoid resolution of `testClasspath` dependencies at configuration time;non_debt
"Merge pull request #1106 from pramodn02/develop
MIFOSX-1589 : accounting changes for waive interest and waive charge";non_debt
LOUDSTACK-6840: OVS refers to SDN provider. However, we are not supporting SDN in this release. Therefore, remove OVS from UI for this release.;non_debt
"ARTEMIS-392 Fixing Allocator after socket upgrade
https://issues.apache.org/jira/browse/ARTEMIS-392";non_debt
HADOOP-11163. MetricsSystemImpl may miss a registered source. Contributed by Chuan Liu.;non_debt
AMBARI-4222. Add historyserver to HDP1 on backend (aonishuk);non_debt
DataflowRunner: update worker image with fix for ValueOnlyWindowedCoder;non_debt
refactor opentracing.listener;non_debt
MINOR: improve Session expiration notice (#6618);non_debt
"Fixed how InterleaveContoller dealt with controllers that returned false
for hasNext()";non_debt
Tweak validation for `groupby`;non_debt
remove dumper from ort;non_debt
fixing datasource config for one arquillian test;non_debt
addressing comments.;non_debt
Allow for a POST of JSON to the HttpChannelizer #299;non_debt
"[SPARK-14966] SizeEstimator should ignore classes in the scala.reflect package
In local profiling, I noticed SizeEstimator spending tons of time estimating the size of objects which contain TypeTag or ClassTag fields. The problem with these tags is that they reference global Scala reflection objects, which, in turn, reference many singletons, such as TestHive. This throws off the accuracy of the size estimation and wastes tons of time traversing a huge object graph.
As a result, I think that SizeEstimator should ignore any classes in the `scala.reflect` package.
Closes #12741 from JoshRosen/ignore-scala-reflect-in-size-estimator.";non_debt
bug 7790: do not set default route in some cases;non_debt
"Add backward Type inference to main NN operators (#18378)
* Add backward Type inference to main DNN operators
* Add comments";non_debt
"madpack install-check:
- Test schema is now created/dropped by madpack. It can be specified on the command line using the (case-insensitive) parameter '--schema'.
- All tests are run with a temporary and unprivileged role of form ""madlib_xxx_installcheck"". That way we deliberately restrict our permissions to only run non-dangerous scripts.";non_debt
"NIFI-2542: - Ensuring transitive referencing components are able to be returned. - Ensuring we can enable/disable services with transitive referencing components. - Ensuring we cannot enable/disable services with unauthorized referencing components.
NIFI-2543: - Ensuring we have permissions before attempting to reload a controller service.
This closes #837";non_debt
PHOENIX-4287 Add null check for parent name;non_debt
[Trafodion 2942] Update year in license text;non_debt
"Removing gradle output directories from the eclipse classpath
The gradle eclipse target was generating a classpath that included
some artifacts generated by the command line build. The eclipse
classpath should not depend on the command line artifacts.
Reviewed by: Lynn G.";non_debt
Merge branch 'master' of https://github.com/linkedin/gobblin into gobblin-yarn;non_debt
Merge remote-tracking branch 'origin/master';non_debt
Add \n after the frame terminator \0;non_debt
Update graalsdk public packages.;non_debt
clarify that global hooks need to be setup to use per-remap rules with  header_rewrite;non_debt
Merge branch 'github/pr/15';non_debt
"update commit (#7)
update commit";non_debt
https://issues.apache.org/activemq/browse/AMQ-2453 - activemq script improvement - initial commit;non_debt
GROOVY-7627 Property calls are not correctly type checked if the setter parameter type or getter return type are different from the underlying field type;non_debt
Merge branch 'master' of github.com:amplab/graphx;non_debt
HIVE-3068 Export table metadata as JSON on table drop (Andrew Chalfant via egc);non_debt
Only set the gradle.proxy.args if the resolved proxy is not empty;non_debt
HDFS-13582. Improve backward compatibility for HDFS-13176 (WebHdfs file path gets truncated when having semicolon () inside). Contributed by Zsolt Venczel.;non_debt
compatible with JDK1.6 in remoting module;non_debt
Update document for zeros_like, ones_like, softmax_cross_entropy, c_array, c_str (#6021);non_debt
This closes https://github.com/apache/beam-site/pull/150;non_debt
HIVE-6345. Add DECIMAL support to vectorized JOIN and GroupBy Aggregate operators (Remus Rusanu via jitendra);non_debt
feat: add toolbox text style support;non_debt
"Implement profiling for Python DirectRunner and SDK Harness.
These are enabled with the existing --profile_xxx flags.";non_debt
"[FLINK-21259] Add tests for Failing state
This closes #14910";non_debt
"TINKERPOP-2076 Fix spark/yarn execution
Docs were failing. Wrong spark-yarn version for spark 3.0 was being pulled in by the plugin. Then that brought in a paranamer dependency conflict with hadoop - fixed that. Updated a few dev docs as well.";non_debt
LUCENE-7936: Improve serialization by using a shortcut way of describing classes.;non_debt
"ARROW-8575: [Developer] Add issue_comment workflow to rebase a PR
Instead of adding a PR comment of ""This needs rebase"" and wait for the author to get around to it, with this workflow you can just type ""rebase"" and GHA will do it for you. If it rebases cleanly, the workflow force pushes see [this demonstration](https://github.com/nealrichardson/arrow/runs/613698512?check_suite_focus=true#step:5:6) on my fork. If there are merge conflicts, well, the PR will probably tell you so you know not to try to auto-rebase, but if you do run this workflow and rebase is not clean, it exits with an error and does not push anything (see [this example](https://github.com/nealrichardson/arrow/runs/613691328?check_suite_focus=true)).
Relatedly, see https://github.com/r-lib/actions/pull/90 where I add the ability to add args to `git push` in the action. This workflows is currently set to run using my fork, which is fine. If that PR is merged before this one is, we can switch back to using upstream otherwise, I'll switch in ARROW-8489.
Recall that you can't test issue_comment workflow changes on PRs themselves because issue_comment workflows always run off of master, so if you make a ""rebase"" comment on this PR, it won't do anything.
Closes #7028 from nealrichardson/rebase";non_debt
make test iteration order independent;non_debt
modifiy the error comment;non_debt
Added benchmarks and created a BaseNumberOperator;non_debt
YARN-7962. Race Condition When Stopping DelegationTokenRenewer causes RM crash during failover. (BELUGA BEHR via wangda);non_debt
"MLP: Remove source table dependency for predicting regression models
JIRA: MADLIB-1223
We were getting the type of the dependent variable from the
input table to know if it was an array or not. With this commit, we now get
this information from the model summary table.
We also had to add a column in the minibatch preprocessor summary table
called `dependent_vartype` in order to get the dependent type in the mlp
code for minibatching.
Closes #255";non_debt
fix simulator;non_debt
Replace CounterOutputStream by commons-io CountingOutputStream;non_debt
SOLR-12574: Fix the SignificantTermStream to use the new bucket format;non_debt
"Move dev tests that were created for DFDL-251
Wrote test cases also.
DFDL-251
DFDL-738";non_debt
add imports;non_debt
Improved camel-hystrix;non_debt
Validating Deploymant policies, Autoscaling policies, Application policies and Network partitions as per the modifications;non_debt
"debian: Add JNA flag when starting agent
In some situations local JNA libraries might prevent the agent
from starting.";non_debt
"Cqlsh DESCRIBE output handles quoted index names incorrectly
Patch by Sam Tunnicliffe reviewed by Adam Holmberg and Alex Petrov for CASSANDRA-12847";non_debt
added get jar file content in REST;non_debt
"Merge pull request #1887 from shapeblue/4910-upgrade-fix
schema: Fix upgrade issue for 4.9.1.0->4.9.2.0
* pr/1887:
  schema: Fix upgrade issue for 4.9.1.0->4.9.2.0";non_debt
CAMEL-10914: Apply the same fix as CxfConsumer to CxfRsConsumer;non_debt
"[SPARK-24444][DOCS][PYTHON] Improve Pandas UDF docs to explain column assignment
## What changes were proposed in this pull request?
Added sections to pandas_udf docs, in the grouped map section, to indicate columns are assigned by position.
## How was this patch tested?
NA
Closes #21471 from BryanCutler/arrow-doc-pandas_udf-column_by_pos-SPARK-21427.";non_debt
GROOVY-8140: Invoke method not returning MOP super method if isCallToSuper (closes #520);non_debt
[FLINK-11463][tests] Support job submissions;non_debt
Removed local copy of the topology event message delegator from autoscaler, updated log4j properties, optimized service component activate method;non_debt
+ [ios] Add component count monitor;non_debt
CLOUDSTACK-6379: UI > fix a bug that domain admin failed to be created when current login doesn't have visibility to root domain object.;non_debt
"Doc mention camelcase (#348)
* * [doc] test synax highlight
* * [doc] add kebab case suggestion";non_debt
Ensure CamelContextAware beans have CamelContext set when bound to the registry;non_debt
refactor ConnectionAdapterTest.;non_debt
AMBARI-20857. After WE is enabled, graphana fails to start with SSL23_GET_SERVER_HELLO:tlsv1 alert protocol version (echekanskiy);non_debt
[BEAM-7389] Add code examples for Partition page;non_debt
"Pull versions up to parent
activemq 5.15.0
commons-logging 1.2
Remove BeanValidationAppendixInterceptor ref";non_debt
HIVE-12761: Add stack trace servlet to HS2 web ui (Shinichi Yamashita via Jimmy Xiang);non_debt
Possible fix for NPE seen in this test. (#4684);non_debt
Upgrade kotlin;non_debt
[Relay] Fix interpreter for dyanmic shape input of ndarray_size (#6086);non_debt
"[BUILD] Reference fasterxml.jackson.version in sql/core/pom.xml
Closes #6031 from tedyu/master and squashes the following commits:
5c2580c [tedyu] Reference fasterxml.jackson.version in sql/core/pom.xml
ff2a44f [tedyu] Merge branch 'master' of github.com:apache/spark
28c8394 [tedyu] Upgrade version of jackson-databind in sql/core/pom.xml";non_debt
"Better regexp to update overview.html (in docs-api task)
Accept jmeter.version like 2.7 ou 2.7-SNAPSHOT";non_debt
Merge remote-tracking branch 'ignite-gg/ignite-db-x' into ignite-db-x-backups;non_debt
"GROOVY-7639 Comparing primitive to null safe primitive property expression should not throw NPE
* Correct assertions in tests for GROOVY-5613
Closes #167";non_debt
remove debug;non_debt
list/kill container from cli;non_debt
Modify maven repository;non_debt
HIVE-10145 : set Tez ACLs appropriately in hive (Thejas Nair, reviewed by Vikram Dixit);non_debt
TS-3922: Add independent websocket timeouts. This closes #590;non_debt
rename stopped -> stopRequested;non_debt
fix(types): add encode in more series;non_debt
[euphoria-flink] register common classes by default;non_debt
BIGTOP-1996: Dockerfiles for bigtop-slaves;non_debt
"GEODE-7915: rc pipeline fixes and improvements (#4853)
* remove examples.zip test from pipeline as .zip is no longer produced
* check all source artifacts to ensure they do not contain any binaries
* check that no unexpected artifacts are present
* align release retention with ""N-2"" proposal";non_debt
Update README.md;non_debt
"Merge branch 'ios-feature-20170118-new-slider-neighbor-fix' of github.com:bluebird78999/weex into ios-feature-20170118-new-slider-neighbor-fix
# Via GitHub
* 'ios-feature-20170118-new-slider-neighbor-fix' of github.com:bluebird78999/weex:";non_debt
"Merge branch 'unstable' into touch-support
Conflicts:
	src/main/resources/mouse.js";non_debt
Fix running on java9, set the import version for javax.annotation;non_debt
"Powered By page: Final pass for consistency in language, tone
Closes #716 from vjagadish1989/website-reorg13";non_debt
fixing issues faced while evaluating status;non_debt
Add javadocs;non_debt
Merge #8341: Use a singleton PIPELINE_OPTION_PARAMETER in DoFnSignature.Parameter;non_debt
HBASE-891 HRS.validateValuesLength throws IOE, gets caught in the retries;non_debt
CAMEL-6604: Fixed recipient list EIP to work with stream caching properly.;non_debt
TS-3262 Change abs() to std::abs(), avoid compiler errors;non_debt
"package: bump to version v0.3.0 and update dependencies
Bumping to v0.3.0 to signify that most features/APIs are supported wrt
technical preview.";non_debt
HADOOP-7859. TestViewFsHdfs.testgetFileLinkStatus is failing an assert. Contributed by Eli Collins;non_debt
Remove use of MementoTransformer (in persistence);non_debt
LibvirtComputingResource: Fix coverity scan, recent bugfixes revealed a potential unhandled null in getResizeScriptType;non_debt
GEODE-17: Authorization tests for WanCommands;non_debt
"THIRDEYE-96 Adding support for different data types in star tree
RB=412320
R=gbrandt
A=gbrandt";non_debt
Merge branch '1.8';non_debt
add process define name verify. (#3864);non_debt
ignite-111module support added;non_debt
fixing fail2ban for sshd;non_debt
"Calcite SQL compiler syntax support for order by expression and set LENIENT SQL conformance (#5005)
* Make calcite parser support order by expression
* Set SqlConformanceEnum.LENIENT to CalciteParser";non_debt
Revert the change of camel-mail pom.xml, I should not commit any code before I go to bed :(;non_debt
[maven] add script to verify Scala suffixes;non_debt
HAWQ-599. Fixed coverity issues.;non_debt
"Merge pull request #13908 from ibzib/BEAM-10671-java
[BEAM-10671] Add environmentOptions to Java.";non_debt
Rare bug fix for deleted pipelines scripts;non_debt
Add comment.;non_debt
"CLOUDSTACK-7947:
double check if parent snapshot is removed or not, when creating new
snapshot";non_debt
ARTEMIS-2189 allow deleting temp dest when session is closed;non_debt
HBASE-19227 Nightly job should archive JVM dumpstream files.;non_debt
AMBARI-11407. Create widget wizard: Metric selection shown for JournalNode in non NN HA cluster. (jaimin);non_debt
[CALCITE-1267] Trivial pointer in README.md to release notes on the website;non_debt
[TRAFODION-3071] Add missing binder checks for DATEDIFF etc. + other fixes;non_debt
Fixing merge problems.;non_debt
Registers location in vmInstanceIds to allow it to be destroyed after use;non_debt
Merge branch 'rubys-rubys-rename-secmail-workbench' into deployment;non_debt
"Fix concurrency problem when moving ACL rules with drag&drop (#2703)
There was a concurrency problem with the ���moveNetworkAclItem�۝ API method. If two users were changing the ACL rules order at the same time, this could lead to inconsistent actions.
To solve the problem we added a ���consistency check �۝ parameter, which is used to hold the consistency hash. This hash is created using an MD5 hash function on a String that is created with all ACL rules UUIDs concatenated in their order, which is defined via the ���number�۪ field.
We also lock the editing of the ACL while executing the upgrade. This allows us to handle race conditions nicely, and present a good feedback for the user.";non_debt
LUCENE-3832: Port BasicAutomata.stringUnion from Brics to Lucene.;non_debt
integrate partialGroupReduce operator to properly optimize Combine.perKey;non_debt
SVM: Fix minor error with temp specifier;non_debt
fix(examples): Remove references to obsolete runtime argument;non_debt
"Upgrading GRPC version to 1.33, Netty to 4.1.50Final and ETCD client driver
Descriptions of the changes in this PR:
upgraded GRPC
Will need to upgrade GRPC in pulsar as well
Upgrading:
- GRPC version to 1.33
- Netty to 4.1.50Final
- ETCD client driver
- TestContainers
### Motivation
TableService stopped working under load.
jstack points to a problem with GRPC that is fixed in later versions
### Changes
upgraded GRPC
Master Issue: #2581
This closes #2582 from dlg99/master-grpc-upgrade";non_debt
FINERACT-344 : Should not allow to add guarantor ,If savings account activation date is gretar than loan application submitted date;non_debt
Camel-AMQP: Fixed docs;non_debt
"Have different callback for create template and create volume since they
will update different tables.";non_debt
Doc: Translate admin/forward-proxy;non_debt
Don't need ws-metadata since we are java6+ only now;non_debt
Restarting Ambari Server Fails Due to Recursive Injection of STOMPUpdatePublisher. (mpapirkovskyy) (#2740);non_debt
Use latest PMD version;non_debt
Fix link formating in README.md (#6097);non_debt
AMBARI-15204 Host checks should not be performed if 0 hosts register. (ababiichuk);non_debt
Test for ascending geo-distance in three of the GeoIT tests.;non_debt
"Java Thrift objects implement common base interface
Reviewed By: dreiss
Test Plan: Generate java code and run against new library.
Revert: OK
DiffCamp Revision: 900";non_debt
"[GOBBLIN-1389] Ensuring exception being propagated in Hive-Reg code path
Closes #3228 from autumnust/exception_hive_reg";non_debt
"[PARQUET-1506] Migrate  maven-thrift-plugin to thrift-maven-plugin (#600)
maven-thrift-plugin (Aug 13, 2013) https://mvnrepository.com/artifact/org.apache.thrift.tools/maven-thrift-plugin/0.1.11
thrift-maven-plugin (Jan 18, 2017) https://mvnrepository.com/artifact/org.apache.thrift/thrift-maven-plugin/0.10.0
The maven-thrift-plugin is the old one which has been migrated to the ASF
and continued as thrift-maven-plugin:
https://issues.apache.org/jira/browse/THRIFT-4083";non_debt
TOMEE-1916 conf option to tomee embedded;non_debt
Upgrade Zxing and related bundle to version 3.3.0;non_debt
"Cache HadoopUtils instance with specific days expire time (#2181)
* Cache HadoopUtils instance with 7 days expire time
* solve sonar issue
* add kerberos expire time config
* move KERBEROS_EXPIRE_TIME to Constants.java";non_debt
"[Relay] Add space_to_batch_nd and batch_to_space_nd operators (#6477)
* Correct python-format errors
* correct lint errors
* tflite frontend to use batch_to_space and space_to_batch operators
* Add new pad_value parameter with default value is 0 for space_to_batch_nd and correct variable names
* Fix cppdocs - add documentation for pad_value";non_debt
add jna dependenc;non_debt
Merge branch 'cassandra-3.0' into trunk;non_debt
singleton for MySQLResultCache;non_debt
exclude thrift-server's 'compile' dependency on junit;non_debt
IGNITE-5859 IgniteUtils.ceilPow2 overflow for values greater than 2^30;non_debt
[BEAM-3692] Remove maven deploy plugin configuration with skip in the hadoop-input-format IO module;non_debt
fix: still compat barBorderRadius, barBorderColor;non_debt
"Upgrade reporting plugin versions and fix issues upgrading maven-checkstyle-plugin from version 2.3 to 2.6
maven-checkstyle-plugin 2.4 onwards uses Checkstyle 5.0 (upgraded from Checkstyle 4.4). Checkstyle 5.0 is not 100% backwardly compatible with release 4.4 and the following changes need to be made to make it work. See the Release Notes for details of incompatible changes and fixes here:
    http://checkstyle.sourceforge.net/releasenotes.html";non_debt
This closes #3067;non_debt
Add test to make Groovy tests compliant with test enforcement of java tests.;non_debt
Release notes;non_debt
"Stop creating hook on instantiating of S3 operator
The operator was initializing hooks on instantiating instead of on execute.
Resolves: #1357";non_debt
"ARROW-1066: [Python] pandas 0.20.1 deprecation of pd.lib causes a warning on import
Closes #715 from jreback/pandas_compat and squashes the following commits:
842b19f [Jeff Reback] COMPAT: pandas 0.20.1 deprecation of pd.lib causes a warning on import";non_debt
HIVE-20255: Review LevelOrderWalker.java (BELUGA BEHR reviewed by Aihua Xu and Peter Vary);non_debt
Fix assertion to pass when a non-String value matches an expected String value.;non_debt
HDFS-13356. Balancer:Set default value of minBlockSize to 10mb. Contributed by Bharat Viswanadham;non_debt
KYLIN-3265 Add jobSearchMode as a filter condition for jobs api;non_debt
"Merge pull request #168 from Harper0122/master
Rewritten Engine";non_debt
use includes() instead;non_debt
Updating some of JAXRSClientServerBookTest tests not to depend on the state updates;non_debt
Improve take documentation. (#9717);non_debt
HDFS-7398. Reset cached thread-local FSEditLogOp's on every FSEditLog#logEdit. Contributed by Gera Shegalov.;non_debt
AMBARI-3823. Not selected but installed service. (onechiporenko);non_debt
Stub README.md file;non_debt
"Do not use the doc_id list from the previous replication request
on subsequent replication requests.
Closes COUCHDB-703.
Patch by Filipe Manana.";non_debt
[SERVER] fix load of JS UI in BrooklynJavascriptGuiLauncher;non_debt
Sync on network instead of ipAddressId when do create PF/StaticNat/LB rules;non_debt
Remove README.md references from the website;non_debt
Merge from trunk to llap (02/06/2015);non_debt
"[SYSTEMML-1634] Add SystemML.jar to root of bin artifacts
Closes #517.";non_debt
add logic for For loop and transfere the optimization flags into an internal helper class, to later have an optional optimization flag;non_debt
make sure compatible Router works fine;non_debt
"[hotfix][docs] Improve the filesystem SQL connector doc
This closes #14365";non_debt
Apollo config center optimization, use 'dubbo.properties' as default namespace for properties. (#5105);non_debt
closes #231 closes #318;non_debt
CAMEL-13557: Fixed test to use property binding support as the old has removed the legacy JDK PropertyEditor in CAMEL-13566;non_debt
Merge branch 'cassandra-2.0' into cassandra-2.1;non_debt
GROOVY 4780 - AstBrowser -- Added option to hide tree view and just show the decompiled source. ;non_debt
CAMEL-1325.  Patch applied with thanks!;non_debt
"CLOUDSTACK-4428: UI > volume > take snapshot action, recurring snapshot action > for volumes whose hypervisor is KVM and whose VM is not Running, always show the 2 actions regardless value of ""kvm.snapshot.enabled"".";non_debt
This closes #26 error prone errors and fixes on activemq5-tests;non_debt
Added upgrade docs around java driver performance improvement CTR;non_debt
HDDS-4396. Ozone TLP - update documents (#1661);non_debt
Updated manifest;non_debt
fixed scm url;non_debt
"Fauxton: Add typeahead support to jump to doc
Simple type ahead support to check for start of id. It also checks if
document exists if not return back to _all_docs list";non_debt
Merge branch 'cassandra-1.1' into trunk;non_debt
Merge branch 'cassandra-2.1' into trunk;non_debt
changes update for CASSANDRA-1216;non_debt
Added comments to pom around asciidoc generation.;non_debt
entityClass returning null for some reason now it uses a sensible default, rather than throwing NPE;non_debt
Bug 52129 - Reported Body Size is wrong when using HTTP Client 4 and Keep Alive connection;non_debt
BIGTOP-3128: Switch to new gitbox repository;non_debt
FELIX-2443: MDC information on logging events can't be displayed in the console;non_debt
"TINKERPOP-1946 Removed old version of Credentials DSL
This was deprecated on 3.3.3 - it can be removed for 3.4.0";non_debt
HIVE-13965: Empty resultset run into Exception when using Thrift Binary Serde (Ziyang Zhao reviewed by Vaibhav Gumashta);non_debt
HBASE-13470 High level Integration test for master DDL operations (Sophia Feng);non_debt
[SQL] Compute timeTaken correctly;non_debt
#1517, refactor ComStmtExecutePacket;non_debt
TS-2150: Fix broken string compare function.;non_debt
"[SPARK-30012][CORE][SQL] Change classes extending scala collection classes to work with 2.13
### What changes were proposed in this pull request?
Move some classes extending Scala collections into parallel source trees, to support 2.13 other minor collection-related modifications.
Modify some classes extending Scala collections to work with 2.13 as well as 2.12. In many cases, this means introducing parallel source trees, as the type hierarchy changed in ways that one class can't support both.
### Why are the changes needed?
To support building for Scala 2.13 in the future.
### Does this PR introduce any user-facing change?
There should be no behavior change.
### How was this patch tested?
Existing tests. Note that the 2.13 changes are not tested by the PR builder, of course. They compile in 2.13 but can't even be tested locally. Later, once the project can be compiled for 2.13, thus tested, it's possible the 2.13 implementations will need updates.
Closes #26728 from srowen/SPARK-30012.";non_debt
for and while loop to foreach conversions;non_debt
[RIP-10]  Add test cases for CheckClientRequestBody (#808);non_debt
"Merge pull request #46 from usergrid/elasticsearch-cluster
Add ElasticSearch to the Cassandra test cluster Cloud Formation template & scripts";non_debt
JENA-1662: Enable verbose request logging;non_debt
https://issues.apache.org/jira/browse/AMQ-5614 - additional expiration attribute on dead letter strategy and tests;non_debt
AMBARI-12906: Alert notifications are created even if credential fields are left empty (Qin Liu via rzang);non_debt
Merge branch 'APEXCORE-283.checkpoint' of https://github.com/ashishtadose/incubator-apex-core into devel-3;non_debt
Upgrade quidem;non_debt
Merge branch 'master' into fix/opentracing-plugin-issue;non_debt
Missing AL headers (one line files, so not strictly necessary);non_debt
fix origin api tests -- add a tenantId;non_debt
SOLR-2739: more assumptions to ensure file is not writable;non_debt
AMQ-4745: Upgrade to json-simple 1.1.1. Thanks to Jean Baptiste for the patch.;non_debt
[SCB-837] make http2 production ready: modify config settings;non_debt
SOLR-7560: Bump Presto Parser version to 0.108;non_debt
Fix macOS bash update instructions. (#3970);non_debt
AMBARI-20475. Issue with cut/copy functionality in workflow manager (Padma Priya via pallavkul);non_debt
[AIRFLOW-6552] Move Azure classes to providers.microsoft package (#7158);non_debt
Add conditional statement to check metricsKamon flag. (#3316);non_debt
"Closes #114
Driver copyResources walks the filesystem
So blueprint writers can replace
With
One minor difference: in the first example the two files end up in `runDir/` but in the second in `runDir/dest/`. If using the latter syntax I think this would be expected.
Each file is copied in a task so there's better visibility of what is in progress at any given point.";non_debt
NIFI-4573 Catch exceptions during flow content migration.;non_debt
HIVE-24564: Extend PPD filter transitivity to be able to discover new opportunities (Krisztian Kasa, reviewed by Jesus Camacho Rodriguez);non_debt
merge from 0.6;non_debt
modify assertExecuteQueryForMultipleStatementsSuccess();non_debt
"[SPARK-19019] [PYTHON] Fix hijacked `collections.namedtuple` and port cloudpickle changes for PySpark to work with Python 3.6.0
## What changes were proposed in this pull request?
Currently, PySpark does not work with Python 3.6.0.
Running `./bin/pyspark` simply throws the error as below and PySpark does not work at all:
The root cause seems because some arguments of `namedtuple` are now completely keyword-only arguments from Python 3.6.0 (See https://bugs.python.org/issue25628).
We currently copy this function via `types.FunctionType` which does not set the default values of keyword-only arguments (meaning `namedtuple.__kwdefaults__`) and this seems causing internally missing values in the function (non-bound arguments).
This PR proposes to work around this by manually setting it via `kwargs` as `types.FunctionType` seems not supporting to set this.
Also, this PR ports the changes in cloudpickle for compatibility for Python 3.6.0.
## How was this patch tested?
Manually tested with Python 2.7.6 and Python 3.6.0.
, manual creation of `namedtuple` both in local and rdd with Python 3.6.0,
and Jenkins tests for other Python versions.
Also,
Closes #16429 from HyukjinKwon/SPARK-19019.";non_debt
SOLR-2802: change min/max processors to fail hard if values are not comparable, also imrpvoe error handling/logging in FieldMutatingUpdateProcessor;non_debt
[TE] Bug fix in rootcause batch aggregates (#2628);non_debt
updated Annotation API.;non_debt
"Merge pull request #2671 from simon824/dev-1.3.0
add unique key for t_ds_process_definition";non_debt
"Fixed all bad ""javaee"" imports.  Flushed out some details on descriptor pojos";non_debt
# GG-8973 Fixed reset telemetry preferences.;non_debt
ExpiredMessagesWithNoConsumerTest - trying to tweak it a bit to prevent failures on slow machines;non_debt
Finalizing JWE EDCH direct code for now;non_debt
Merge branch 'pr/38';non_debt
Finish codes about selecting grpc service address and retry.;non_debt
fix the test builds.;non_debt
update CHANGES;non_debt
"[SPARK-9543][SQL] Add randomized testing for UnsafeKVExternalSorter.
The detailed approach is documented in UnsafeKVExternalSorterSuite.testKVSorter(), working as follows:
1. Create input by generating data randomly based on the given key/value schema (which is also randomly drawn from a list of candidate types)
2. Run UnsafeKVExternalSorter on the generated data
3. Collect the output from the sorter, and make sure the keys are sorted in ascending order
4. Sort the input by both key and value, and sort the sorter output also by both key and value. Compare the sorted input and sorted output together to make sure all the key/values match.
5. Check memory allocation to make sure there is no memory leak.
There is also a spill flag. When set to true, the sorter will spill probabilistically roughly every 100 records.
Closes #7873 from rxin/kvsorter-randomized-test and squashes the following commits:
a08c251 [Reynold Xin] Resource cleanup.
0488b5c [Reynold Xin] [SPARK-9543][SQL] Add randomized testing for UnsafeKVExternalSorter.";non_debt
"KAFKA-7633: Allow Kafka Connect to access internal topics without cluster ACLs (#5918)
When Kafka Connect does not have cluster ACLs to create topics,
it fails to even access its internal topics which already exist.
This was originally fixed in KAFKA-6250 by ignoring the cluster
authorization error, but now Kafka 2.0 returns a different response
code that corresponds to a different error. Add a patch to ignore this
new error as well.";non_debt
MIFOSX-282: remove min and max fields from loan table;non_debt
Ignite - Moved failover tests to proper test suite.;non_debt
"improve cli handlingof non-string column names
patch by Jim Ancona reviewed by Pavel Yaskevich for CASSANDRA-1701";non_debt
Merge branch cassandra-3.0 into cassandra-3.11;non_debt
correct equals method;non_debt
HIVE-12968 : genNotNullFilterForJoinSourcePlan: needs to merge predicates into the multi-AND (Gopal V, Ashutosh Chauhan via Jesus Camacho Rodriguez);non_debt
"Review/fix markdown in the NC Perserving Data section
    [#124827381]";non_debt
"Jenkins: Get error message from install-check FAIL
Closes #124";non_debt
HBASE-19936 Introduce a new base class for replication peer procedure;non_debt
IGNITE-8547 - Use JVM serialization for enum values with OptimizedMarshaller, avoid deadlock. - Fixes #4063;non_debt
fix(tree): code rebuild follow the review suggest;non_debt
HBASE-12745 Visibility Labels:  support visibility labels for user groups. (Jerry He);non_debt
Fix test may hang during stopping;non_debt
[AIRFLOW-XXX] Update chat channel details from gitter to slack (#4149);non_debt
add cleanEnvironment initEnvironment;non_debt
Add the member stat context for pending members, so that they will be accounted in scaling down member selection;non_debt
Allow absolute timers;non_debt
added support for RESTful browsing of message queues using a web container either as XML or as RSS/Atom feeds. Fixes AMQ-666 - crikey thats a bad number for an AMQ issue :);non_debt
"Deduplicate and generalise metric update!
MXNet allows for the design of networks that use the same label
for multiple outputs. Instead of failing for these kinds of
networks, warn the user and try to proceed.";non_debt
Add release page for 1.5.3 and update jekyll.;non_debt
CAMEL-13663: camel-main-maven-plugin to generte spring-boot tooling metadata to fool Java editors to have code completions for Camel Main application.properties files.;non_debt
Improve test initialization;non_debt
[FLINK-13934][rest] Use hamcrest for checking String contents;non_debt
unbreak clover/nightly builds until we do this right;non_debt
passing tests;non_debt
Merge remote-tracking branch 'origin/sprint-2' into sprint-2;non_debt
GUAC-1213: Parse time values leniently.;non_debt
"[SPARK-13548][BUILD] Move tags and unsafe modules into common
## What changes were proposed in this pull request?
This patch moves tags and unsafe modules into common directory to remove 2 top level non-user-facing directories.
## How was this patch tested?
Jenkins should suffice.
Closes #11426 from rxin/SPARK-13548.";non_debt
"Make the Spring bus build off the EM bus
Remove all the META-INF/cxf/cxf.extension things";non_debt
"GEODE-3596: remove getInstanceCalls (#1032)
GEODE-3596: remove getInstance calls
DM.getCache and DM.getExistingCache are now used instead.";non_debt
Update release guide for diff (#7916);non_debt
"Update Deltaspike to 0.5
Add Weld 2 profile for testing
configure test to have it working for Weld 1 and OWB profiles";non_debt
AMBARI-10624. Not apparent where the error is in Customize Services page (onechiporenko);non_debt
Make sure calling try_claim(0) more than once also trows exception. (#10922);non_debt
Add TO Go client steeringtarget funcs;non_debt
Run verifier during LLVM code generation (#2211);non_debt
Fixed CS for camel-aws-xray;non_debt
"firewallrules (VR) and metworkacl (VPC) did not as I believe they shgould get combined
in the underlying java code
Have split them out again.
Omce tested this will need some refactorinfg because it is currently PFU";non_debt
CTR changelog entry for TINKERPOP-1933;non_debt
added docs for influxdb_tools;non_debt
added a patch for CAMEL-412 https://issues.apache.org/activemq/browse/CAMEL-412 to support the DOT file execution being disbled via the pom.xml via the <configuration><useDot>false</useDot></configuration> option;non_debt
Upgrade OpenEjb to version 4.7.2;non_debt
Fix Copyright Headers in sdks/java/fn-execution;non_debt
Merge 1.2.0 changes back to master.;non_debt
"add support for arbitrary -D options to .ps1 script
patch by Joshua McKenzie reviewed by Philip Thompson for CASSANDRA-7435";non_debt
"Merge pull request #621 from bryancall/ts-4427
TS-4427: traffic_logstats: Count TCP_MEM_HIT as a ""normal"" hit";non_debt
Upgrade Zipkin to version 2.11.7;non_debt
Merge branch 'hotfix-SPOI-643' SPOI-643 #resolve;non_debt
Merge branch 'master' of gitli.corp.linkedin.com:pinot/pinot2_0;non_debt
"Add 410 status code to stats_descriptions
We started to emit that in CouchDB 4.x for temporary views and possibly other
endpoints.";non_debt
fix user;non_debt
"[FLINK-12232][hive] Support database related operations in HiveCatalog
This PR creates HiveCatalog in flink-connector-hive module and implements database related APIs for HiveCatalog.
This closes #8837";non_debt
"minor improvements 
moved jsf12 and jsf20 artifacts to myfaces-1.2 and myfaces-2.0 profile
update openwebbeans version";non_debt
GUAC-1238: Remove country code from English, as well. If none of the others use it, we really shouldn't either unless multiple dialects of English are added.;non_debt
SOLR-8182: Update TestSolrCloudWithKerberosAlt to work with JDK9+;non_debt
CAMEL-4441 Improvement for namespace-awareness in the camel-xmlsecurity component;non_debt
Cherry-pick changes for JIRA 2095;non_debt
"[FLINK-19147][sql-client] Support AutoCloseable interface for CliClient
This closes #13335.";non_debt
CLOUDSTACK-5530 attempt to add secondary storage with the same name is ignored;non_debt
"Added ""state"" parameter to LoadBalancerRules response";non_debt
HOP-2288 Sort perspective by id;non_debt
multilang serializer is not handled by stormConf. Renamed Emission and Immission to ShellMsg and BoltMsg respectively. Documented ISerializer interface.;non_debt
adding JPAPropertyConverter - to enhance ASAP;non_debt
Register components (entities or policies) by uploading groovy scripts;non_debt
Release procedure changed;non_debt
Spacepolice based on a patch by Graham Russell.;non_debt
Merge branch 'master' of github.com:tinkerpop/tinkerpop3;non_debt
"Tensor Expression Debug Display (TEDD) (#4651)
* Initial TEDD for publishing.
* 1. Fix lint issues. 2. Print intrin.body instead of intrin.name in Schedule Tree.  3. Add examples to top level APIs' comments.  4. Top level APIs don't print Dot string by default, unless outputdotstring is True.
* Fix more lint issues.
* Update top level API argument names and use raw strings to avoid Python lint warnings in the tests.
* Disable TEDD verification, but keep TE construction.
* Stop importing tedd to avoid failure.
* Separate data extraction and visualization. 1. Add API tedd.dump_json(schedule) to dump a json string for the schedule data for visualization.  2. Update tests.  3. Add a tutorial.  4. Add range information to IterVars.
* Update TEDD about InferBound failure.  1. TEDD doesn't call inferbound for DFG. 2. Update tutorial about the InferBound failure.
* 1. Import IPython only if SVG is requested.  This is required to fix a tutorial publishing faliure.  2. Fix test about IPython availability check.";non_debt
Merge branch 'cassandra-3.11' into trunk;non_debt
#sprint-23-6.1.7 - Update version for CPP client.;non_debt
"[FLINK-1979] [ml] Add logistic loss, hinge loss and regularization penalties for optimization
Use parameter to set regularization penalty in gradient descent solver
Update regularization penalty docs
This closes #1985.";non_debt
HAWQ-797. Implement reading tools for testing HDFS located orc file usage.;non_debt
Add name fields for JobContext and WorkflowContext;non_debt
CAMEL-11140: closing Camel context in tck tests;non_debt
Add Confluent Schema Registry Avro Message Decoder (#4973);non_debt
tweak;non_debt
Added in shutdown hook to kill topos on exit;non_debt
core: set the error handler to RouteDefinition (take 2);non_debt
"Drop view QI fix & fix for LP 1384485
Removed sqlparser.y change - it was not intended to be delivered.
Drop view QI fix:
  At drop view time, we need to send a QI message for the view being
  dropped and remove base tables referenced by the view from cache.
  Added a structure which describes a base table reference
    Added code to create a list of base table references by calling
    getListOfReferencedTables
      getListOfReferencedTables gets the list for the first layer of
        referenced objects (getListOfDirectlyReferencedObjects).
      If the referenced object is a view, it recursively calls
        getListOfReferencedTables
      If the referenced object is a table, it gets added to the base
        table list
  Set up a QI key during drop view
  Removed naTable entries for all tables referenced by the view
  Updated TEST122 with drop view tests
Fix for LP 1384485:
  Alter table allows adding a constraint to a _MD_ table
  Reworded error message 1289
  Added checks for reserved schema in missing places, mostly
    constraints";non_debt
cloudmonkey: print sync stats, asks users to use sync;non_debt
"Merge pull request #9142 from bmv126/Avro_field_to_beam_field
[BEAM-7808] Add method to convert avro field to beam field";non_debt
"ARROW-7596: [Python] Only permit zero-copy DataFrame block construction when split_blocks=True
We found that some code in the wild assumed that the arrays inside the DataFrame resulting from `to_pandas` are always writable, i.e. the result of new memory being allocated. So we only apply the zero copy optimizations for the split blocks case (which presumably will be used by memory-conscious users who will be okay with this)
Closes #6250 from wesm/ARROW-7596 and squashes the following commits:
bd0b69050 <Wes McKinney> Only permit zero-copy DataFrame block construction when split_blocks=True";non_debt
fix excessive file handle usage in test;non_debt
"[SPARK-15206][SQL] add testcases for distinct aggregate in having clause
## What changes were proposed in this pull request?
Add new test cases for including distinct aggregate in having clause in 2.0 branch.
This is a followup PR for [#12974](https://github.com/apache/spark/pull/12974), which is for 1.6 branch.
Closes #12984 from xwu0226/SPARK-15206.";non_debt
camel-drill-starter foder;non_debt
finally got the test case working with the hibernate profile haven't yet figured out how to fix some strange openjpa related exception (it'd be nice to make openjpa the default profile one day);non_debt
need to check ccp-qemu-img;non_debt
BIGTOP-1991. Add BigTop Weatherman;non_debt
fixed https://issues.apache.org/jira/browse/IGNITE-2168;non_debt
"SPARK-1767: Prefer HDFS-cached replicas when scheduling data-local tasks
This change reorders the replicas returned by
HadoopRDD#getPreferredLocations so that replicas cached by HDFS are at
the start of the list.  This requires Hadoop 2.5 or higher previous
versions of Hadoop do not expose the information needed to determine
whether a replica is cached.
Closes #1486 from cmccabe/SPARK-1767 and squashes the following commits:
338d4f8 [Colin Patrick Mccabe] SPARK-1767: Prefer HDFS-cached replicas when scheduling data-local tasks";non_debt
"[SPARK-25021][K8S] Add spark.executor.pyspark.memory limit for K8S
## What changes were proposed in this pull request?
Add spark.executor.pyspark.memory limit for K8S
## How was this patch tested?
Unit and Integration tests
Closes #22298 from ifilonenko/SPARK-25021.";non_debt
LUCENE-3501: random sampler was not random (and so facet SamplingWrapperTest occasionally failed);non_debt
"GEODE-1238: ensure EntryEventImpls are released
-- reviewed all EntryEventImpl creators
-- created two new subclasses to mark ones that are never off-heap
-- added annotations and comments on all creators
-- added missing release calls";non_debt
"TOBAGO-1468: NoSuchMethodException in security module, when using EL 2.0 paranthesis in actions
- performance optimization";non_debt
Merge [TRAFODION-2803] PR 1301 Fix a merge conflict;non_debt
https://issues.apache.org/activemq/browse/AMQ-3017 - fllesystem blob strategy;non_debt
Fix #2187;non_debt
CXF-1872 Applied patch with thanks to William;non_debt
"Revert ""AMBARI-10038 Add support for Oracle JDK 1.8 (default) (dsen)""
This reverts commit 4cf5414f5a83459efc983a9c37ac80dee41729e6.";non_debt
"Pact Record fixes.
Hash Join adoption complete.";non_debt
JENA-793 : Clear prefixes on PUT ensure prefixes overwrite when added.;non_debt
[SQL] Plumb through column nullable field;non_debt
"1) Updated code based on new thrift format
2) Fixed code review comments
3) Updated test cases";non_debt
fix log issues;non_debt
"THRIFT-138. java: Create deep-copy constructors for Thrift structs
- Create a copy constructor for every Thrift struct.  The constructor
  performs a deep copy on the argument, resulting in no shared state.
- Make thrift structions implement Cloneable and implement .clone()
  using the copy constructor.";non_debt
merge from 0.7;non_debt
CAMEL-12714: Fixed CS;non_debt
[KARAF-2937] Upgrade to json 20140107;non_debt
This closes #1308;non_debt
test again;non_debt
Deliver timers in the direct runner;non_debt
LUCENE-3249: Moved FunctionQuery impls to new Queries module;non_debt
"CLOUDSTACK-8390: Skipping VPC tests on Hyperv
This closes #179";non_debt
"Print versions for gossip states in gossipinfo.
Patch by brandonwilliams, reviewed by Stefania for CASSANDRA-10330";non_debt
Make class ShellUtils public;non_debt
"[SIP-5] Open a new /api/v1/query endpoint that takes query_obj (#6220)
- Introduce a new handle_superset_exception decorator to avoid repeating the logic for catching SupersetExceptions
- Create a query_obj_backfill method that takes form_data and constructs a query_obj that will be constructed in the client in the future. Use the backfill in explore_json.
- Create a new /api/v1/query endpoint that takes query_obj only and returns the payload data. Note the query_obj is constructed in the client. The endpoint currently only handles query_obj for table view viz (we'll be adding support to new viz types as we go).
- Unit test to verify the new endpoint for table view
* fix tests and lint errors
* - Move the new query endpoint into its own api.py view.
- Create QueryObject and QueryContext class to encapsulate query_object to be built from the client and additional info (e.g. datasource) needed to get the data payload for a given query
- Remove the query_obj_backfill as we'll start building the first query_object on the client so it no longer makes sense to have a short-lived backfill for the matter of days.
* Fixing lint and test errors
* Fixing additional lint error from the previous rebase.
* fixing additional lint error
* addressing additional pr comments
* Make /query accept a list of queries in the query_context object.
* fixing a lint error
* - Move time_shift based calculation and since, until check into util
- Add typing info for get_since_until
- Add new unit tests to verify time_shift calculation and the since until check";non_debt
NETBEANS-896 Added missing nullcheck on JCTree.ErrornousTree;non_debt
IGNITE-9875 Optimized GridDhtPartitionsStateValidator - Fixes #4983.;non_debt
HBASE-13596 src assembly does not build;non_debt
[Relay][docs] Details on comp. graphs in Relay dev intro (#2324);non_debt
Add a few more missing localization labels;non_debt
"remove IAuthority2
patch by Aleksey Yeschenko reviewed by jbellis for CASSANDRA-4875";non_debt
reset password back.;non_debt
"[LANG-1290] StringUtils.join() with support for List<?> with
configurable start/end indices.";non_debt
"Merge pull request #691 from elsloo/master
Add git rev count to RPM names in traffic_router and traffic_monitor";non_debt
"Summary: Fix null pointer and op_networks blocker to account cleanup
Detail: Accounts can fail in cleanup/gc process due to inconsistent op_networks
table and null pointer in looking up account for event publishing.
BUG-ID: CLOUDSTACK-3957";non_debt
"Merge pull request #1075 from airbnb/pig_operator
Pig hook and operator stub";non_debt
[hotfix][docs] Add 1.5 to list of previous versions;non_debt
This closes #445;non_debt
Fixing integration tests for staff creation with joiningDate as mandatory;non_debt
SOLR-2769: Added factory for the new Hunspell stemmer (janhoy, cmale);non_debt
wait test;non_debt
"Merge pull request #1046 from oknet/TS-4895
TS-4895: Initialize default_inactivity_timeout (CID 1021743 from TS-4612)";non_debt
"[Gandiva] Add validation checks for Java coding guidelines in the build
Add Java coding guideline rules
Add validation checks to validate Java coding guidelines";non_debt
google_auth_version 0.19.0;non_debt
Using CRUD for DAGs view;non_debt
"fixed NETBEANS-1792:
Behavior of BooleanStateAction has changed";non_debt
GEODE-1874: Changed setNextNeighbor to not create HashMap for every p2p invocation;non_debt
fix endpointagg test;non_debt
"KAFKA-5623: ducktape kafka service: do not assume Service contains num_nodes
��_m_nodes
Closes #3557 from cmccabe/KAFKA-5623";non_debt
IGNITE-3158: WebSessions: Passing genuine session to Ignite session.;non_debt
"Thrift: Zlib transport.
Summary:
Add a new transport to the C++ library: TZLibTransport.
This wraps another transport (just like TBufferedTransport),
compresses the data written to it, and uncompresses the data it reads.
Reviewed By: mcslee
Test Plan:
For ax_lib_zlib.m4
 - Ran ./bootstrap.sh.
 - Looked at configure.
 - Ran ./configure.
 - Looked at config.status
 - Ran ./configure --with-zlib=/usr.
 - Looked at config.status
 - Changed configure.ac to AC_LIB_ZLIB(1.2.4)
 - Ran ./configure.
 - Watched it fail.
For TZlibTransport
 - test/ZlibTest.cpp
 - Code coverage (hotness) report sent with review.
 - 100% line coverage for all the good stuff.
Revert Plan: ok";non_debt
Merge branches 'ignite-422' and 'sprint-2' of https://git-wip-us.apache.org/repos/asf/incubator-ignite into ignite-422;non_debt
"add JIRA capabilities to gitbox
This enables comments from GitHub to be transferred to JIRA tickets.";non_debt
"remove link from website downloads page to the snapshots download page
as @rdowner notes apache policy forbids promoting snapshot downloads";non_debt
"THRIFT-3426 Align autogen comment in XSD
Client: XSD
Patch: Jens Geyer";non_debt
"Merge pull request #1842 from metamx/DRUID-1841
Do not pass `druid.indexer.runner.javaOpts` to Peon as a property";non_debt
YARN-5843. Incorrect documentation for timeline service entityType/events REST end points (Bibin A Chundatt via Varun Saxena);non_debt
update example;non_debt
"Bump ansible version to 2.1.2.0 and docker-py to 1.9.0
- Documentation updates
- Fix wrong syntax to pull invoker images";non_debt
"GEODE-857: Wait for watchdog threads to start in SystemFailureJUnitTest
I can't reproduce this failure, but maybe it's possible the isAlive flag
is not set immediately on all platforms. So we'll have the test wait for
the threads to be alive, rather than assert.";non_debt
Use the endpointPublishURL and other properties to fill in the discovery details;non_debt
Change the name for azure data lake gen2 implementation (#5188);non_debt
incorporate comments for scratch dirs CQD;non_debt
AMBARI-8161. Alerts UI: Create individual alert definition page. (akovalenko);non_debt
"Fix DataflowWorkerLoggingHandlerTest on Windows
----Release Notes----
[]
-------------
MOE_MIGRATED_REVID=98038658";non_debt
finish merge remote master;non_debt
HADOOP-6839. [Herriot] Implement a functionality for getting the user list for creating proxy users. Contributed by Vinay Thota.;non_debt
"Revert due to missing author. ""HBASE-19685 Fix TestFSErrorsExposed#testFullSystemBubblesFSErrors by increasing scanner timeout.""
This reverts commit 0b9dc14dbca98565d29bcd2be5100e29ebcf0e65.";non_debt
"SOLR-14961 ZkMaintenanceUtils.clean doesn't remove zk nodes with same length
fixes #2042";non_debt
APEX-156 #resolve #comment using ImportOrder instead of CustomImportOrderModule;non_debt
This closes PR-416: Chaning UI for port-mapping;non_debt
[Bug 36059] [lang] Wrong length check in StrTokenizer.StringMatcher. From Oliver Heger <oliver.heger@t-online.de>. ;non_debt
Camel-RSS: Improve TIP section;non_debt
[FLINK-14791][coordination] ResourceManager tracks ClusterPartitions;non_debt
GEODE-3761 Document manual-start deprecation of gateway senders (#895);non_debt
"[BYOC] [ACL] include_non_call_ops = False (#7121)
ACL codegen now uses AnnotateTarget pass with include_non_call_ops = False
to prevent promoting non-call ops under the target of its arguments.
Squeezenet unit test added.";non_debt
ignite-1.5 Minor fix in JDBC POJO store.;non_debt
AVRO-375. Initializing uninizialized encoders fail;non_debt
HDFS-4052. BlockManager#invalidateWork should print log outside the lock. Contributed by Jing Zhao.;non_debt
"Bug 62110 - A broken junit class (due to missing dependency) breaks JMeter menus
Contributed by UbikLoadPack
Bugzilla Id: 62110";non_debt
Merge remote-tracking branch 'origin/sprint-21' into sprint-21;non_debt
whitespace;non_debt
# Moved local store to internal package.;non_debt
chore(deps-dev): bump typescript (#551);non_debt
DRILL-7773: Incorrect conversion result to TIME_EPOCH_BE;non_debt
SPOI-2364 #resolve Network latencies and parallelism across multiple threads may bring the application in a state where multiple clients are using the same identifier with the bufferserver. At least one of them will get out of sequence tuples. Upon detection of this anomaly, the container restarts which is an expected behavior;non_debt
fix useExplicitVersion (#3559);non_debt
CAMEL-3091: Fixed uri parameter mapping bug when value had question mark, such as cron expression from quartz.;non_debt
"Adjustment (#257)
* Correct yaml configuration file
* Update company list
* Adjust format of the md file";non_debt
add deleteSchedulerById for api document;non_debt
"Spacepolice
Add a space between if and the parenthesis";non_debt
"Fix Java Version check for versions > 100 on Windows (3.0 patch)
Patch by pmotta reviewed by jmckenzie for CASSANDRA-12278";non_debt
"GEODE-4721: Fix a case that client proxy region returns empty set if ��_ (#1532)
* GEODE-4721: Fix a case that client proxy region returns empty set if it is a first operation in the transaction.
Add additional test cases on set operation with JTA.";non_debt
Update README.md;non_debt
fix mappings, equality;non_debt
"Merge branch 'master' of github.com:apache/incubator-spark into kill
Conflicts:
	core/src/main/scala/org/apache/spark/rdd/CoGroupedRDD.scala";non_debt
Theme River animation;non_debt
[KARAF-1728] Add kar commands itest;non_debt
[hotfix] [bin] Reorder sections in flink-conf.yaml to reflect common use of options.;non_debt
# ignite-sprint-6 disabled failing tests;non_debt
[AIRFLOW-3161] fix TaskInstance log link in RBAC UI;non_debt
add new class EntityVersion;non_debt
@pietermartin --- I added IdentityStep skipping and IntervalStep adding to Neo4jGraphStepStrategy. Is there a reason you didn't have these two elses{} ? ... Ref #18;non_debt
fix reflection bug;non_debt
Fix unit test not passing under JDK7;non_debt
fixed the osgi integration test for the aws-s3 component;non_debt
[BEAM-8185] Properly backup sys config files in release script;non_debt
HBASE-18632 TestMultiParallel#testFlushCommitsWithAbort fails in master branch;non_debt
Moving folders around;non_debt
add STORM-2066 to CHANGELOG;non_debt
improved dependabot config;non_debt
"Merge branch 'STORM-811' of https://github.com/revans2/incubator-storm into STORM-811
STORM-811: remove old metastor_db before running tests again.";non_debt
SOLR-5244: Exporting Full Sorted Result Sets;non_debt
Prototyping OIDC Keys service;non_debt
"assign ""unassigned"" tenants";non_debt
[TE] rootcause poc - disable scrolling in heatmap (#2240);non_debt
"ARROW-4689: [Go] Add support for wasm
Closes #3707 from sbinet/go-wasm-support and squashes the following commits:
ea010ef9 <Sebastien Binet> ARROW-4689:  Add support for wasm";non_debt
HBASE-2544 Forward port branch 0.20 WAL to TRUNK;non_debt
Added jenkinsEnv.sh for jenkins build environment;non_debt
"[CARBONDATA-2648] Fixed NPE issue with legacy store when CACHE_LEVEL is Blocklet
Things done as part of this PR:
Fixed Null pointer exception when store is of <= 1.1 version and DataMap is of type BlockletDataMap.
Added clearing of SegmentProperties cache holder from executor
Problem 1:
Null pointer exception thrown when store is of <= 1.1 version and DataMap is of type BlockletDataMap.
Analysis:
In BlcokletDataMap schema is created to consider blockletInfo while adding to unsafe but in case of legacy store we dont weite the blocklet Info. This lead to Null pointer exception while calculating the size of row during adding to unsafe.
Solution
For legacy store always call super class methods which is BlockDataMap.
This closes #2499";non_debt
This closes #2882;non_debt
This closes #1599;non_debt
NUTCH-860 : Fixed package task;non_debt
removes traffic_portal ?API_KEY query parameter;non_debt
Tweak DEPENDENCIES;non_debt
added comment;non_debt
"Merge remote-tracking branch 'remotes/community/ignite-db' into ignite-db-x-10884
Conflicts:
	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/database/CacheDataRow.java
	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/database/freelist/io/FreeIO.java
	modules/indexing/src/main/java/org/apache/ignite/internal/processors/cache/database/IgniteCacheH2DatabaseManager.java";non_debt
[AIRFLOW-2508] Handle non string types in Operators templatized fields (#4292);non_debt
"Support ci apache license check (#921)
* CI github actions, license check and modify files.
* alter ci name and delete travis yml";non_debt
Added cloudera repository.;non_debt
"Make post_slow_server Au test work in Docker container.
For some reason, redirecting standard error into standard output for a curl command causes a line of standard output
to be lost when running in my Linux Docker container on MacOS.  Also made a few other small tweaks to the test.";non_debt
fixed NPE;non_debt
- Updated the note for LUCENE-730 to mention that docs can now be delivered out of order during scoring;non_debt
"Merge pull request #981 from druid-io/strictModuleTyping
Use Module instead of generic Object in Guice related items";non_debt
Updated both moin and translate to use server-status over https (no reason to be secure, just less messy redirects needed).;non_debt
AMBARI-4912. Trying to run ambari-server setup with -j fails.(vbrodetskyi);non_debt
"Fix empty row filtering and check if there are no rows returned.
Patch by Lanny Ripple, reviewed by brandonwilliams for CASSANDRA-3450";non_debt
HIVE-8920: IOContext problem with multiple MapWorks cloned for multi-insert [Spark Branch];non_debt
incrementing release number in publican;non_debt
Merge branch 'master' of github.com:DataTorrent/Core;non_debt
Fixed #485.;non_debt
[pulsar-broker] make replication mtls configuration dynamic (#4609);non_debt
create tests jar during package;non_debt
"Move to 6.2 (#2563)
* Move submodule plugin.
* Always auto-submodule
* Change keys location.";non_debt
bug 10848: Change function signatures to accept capacity type as an object..;non_debt
Remove dashboard transition related config (#5505);non_debt
CAMEL-3896: Filter EIP now validates it has child output on startup. That helps in XML DSL where end user may mis configure it.;non_debt
"Merge website-revamp (#13871)
Final merge of website revamp";non_debt
"Merge pull request #517 from davidkarlsen/fixParent
add cxf-rt-rs-security-http-signature to parent";non_debt
Add tag edit to LB rule;non_debt
BIGTOP-968. oozie is now part of the core hue;non_debt
Merge pull request #10378 [BEAM-8481] Fix a race condition in proto stubs generation.;non_debt
"Pinot batch ingestion hadoop (#4987)
* refactor common utils
* Adding pinot-batch-ingestion-hadoop module
* Address comments";non_debt
remove custom websocket servlets (CXF-5339);non_debt
"[CARBONDATA-3462][DOC]Added documentation for index server
Added documentation for index server
This closes #3294";non_debt
Add io.restriction_trackers_test to Python 3 test suite;non_debt
PHOENIX-1981 : PhoenixHBase Load and Store Funcs should handle all Pig data types;non_debt
Fix optimizer pickle (#10983);non_debt
HBASE-7729 TestCatalogTrackerOnCluster.testbadOriginalRootLocation fails occasionally;non_debt
[hotfix] Fix flink test;non_debt
"CLOUDSTACK-7960: [Automation] Creation of Volume from Snapshot fails due to StringIndexOutOfBoundsException
Fixed the appropriate CopyCommand handler in simulator plugin";non_debt
add executor.size test for ShardingPropertiesConstantTest;non_debt
AMBARI-2144. Installation with existing Oracle DB fails. (swagle);non_debt
"OWB 1.1.6
TOMEE-571: Update to OWB 1.1.6";non_debt
Explicit import of java.util;non_debt
Update symbol position in force layout iteration;non_debt
"Do Not Omit Fields from Activation Records
- Always display fields in an activation record even if their values are empty";non_debt
add the translation for Online Business Transformation;non_debt
"SQL syntax to cancel executing query, phase 1
This check-in implements the command ""control query cancel qid <qid>"".
The command will send a cancel message to the MXSSMP cancel broker,
but since the master executor is not yet sending a query started
message,
no query will be canceled, and if the message is successful SQLCODE
-8026 will be raised. The change also validates the cancel command.
produces new EXPLAIN and SHOWPLAN output and handles errors, as shown
in a new regression test.
Implements: blueprint sql-query-cancel";non_debt
added a dedup optimizer.;non_debt
Improve filtering in Snapshot#addedFiles (#341);non_debt
"NIFI-7367: Add tests for FetchAzureDataLakeStorage
NIFI-7367: Negative test cases for expression language in FetchAzureDataLakeStorage
FetchAzureDataLakeStorage throws exception when filesystem or filename is blank.
Fixed logged error messages in all 3 of the Delete, Fetch and Put ADLS processors.
testFetchDirectory test case marked as ignored.
This closes #4257.";non_debt
AMBARI-12244. Empty review content on step 8 of installer after page refresh and visiting Customize Services loses config customizations (alexantonenko);non_debt
"[SPARK-25036][SQL][FOLLOW-UP] Avoid match may not be exhaustive in Scala-2.12.
## What changes were proposed in this pull request?
This is a follow-up pr of #22014 and #22039
We still have some more compilation errors in mllib with scala-2.12 with sbt:
## How was this patch tested?
Existing UTs
Closes #22058 from kiszk/SPARK-25036c.";non_debt
"Fix validation for IN queries with non-PK cols
patch by slebresne reviewed by jbellis for CASSANDRA-4709";non_debt
HIVE-14277: Disable StatsOptimizer for all ACID tables (Pengcheng Xiong, reviewed by Ashutosh Chauhan);non_debt
Merge branch 'cassandra-3.0' into cassandra-3.11;non_debt
Updating cartridge docker image version;non_debt
"THRIFT-183 let non-root issues run fb303 status commands
Reviewed By: mcslee";non_debt
CAMEL-15310 - AWS* - Support for more than 1 client in the registry - Camel-AWS-EKS;non_debt
BIGTOP-1730 - Update Oozie website references.;non_debt
"Issue #1152: stats for durability violations in write/read path
Descriptions of the changes in this PR:
Durability contract demands that there are WQ copies spread
across fault zones as per the ensemble placement policy.
There are lots of areas where this contract is violated.
Add stats to track two areas that are well:
a. Write Path: if the write fails after satisfying AQ
b. Read Path: If the checksum error is detected on the read path
Master Issue: #1152
This closes #1155 from jvrao/bk-ssue-1152-stats-1, closes #1152";non_debt
Fix chown issue for PHP Cartridge;non_debt
YARN-10026. Pull out common code pieces from ATS v1.5 and v2. Contributed by Adam Antal;non_debt
"add wskdeploy to scriptRunner Dockerfile (#4144)
Prepare for wskdeploy being used to install catalog
by including wskdeploy cli in this image (which is used
to install the catalog in the kube-deploy project).";non_debt
CAMEL-15836 - Camel-AWS2-Kinesis: enable autowire on the Kinesis Firehose client, regen configurers and component;non_debt
Implement ORDER BY ... NULLS FIRST/LAST.;non_debt
Moved FunctionId/InstanceId to fs package (#94);non_debt
Fix jOOQ doc;non_debt
Reduced visibility of methods in HiveRetention and HiveDataset where desirable;non_debt
TAJO-513: Needs clone() method of LogicanNode and its subclasses;non_debt
TS-3793: Check the incoming header request length for HTTP/2 requests;non_debt
Added trivial invoke ejb, pojo webservice and ejb webservice tests to the servlet itest suite;non_debt
Created brooklyn projects, ready to be populated.;non_debt
"DRILL-6467: Percentage usage of memory is reported as zero by the WebUI
The memory reported as a percentage is incorrectly reported as 0%, irrespective of the actual usage.
closes #1305";non_debt
Generalization wdivmm compiler/runtime (basic/-X patterns), for als_cg;non_debt
"IGNITE-7174: Local MLP
this closes #3246";non_debt
"Increasing the timeout values to 600 seconds from 300 seconds
Timeout for ssh related test cases is increased based upon
few test run observations where ssh is taking more time during
restart scenarios as an example. We have done few changes to streamline
ssh library. This is in addition to those to keep less ssh script issues";non_debt
Fix for https://issues.apache.org/activemq/browse/AMQ-1382... if the broker.persistent==false then we should not create any files, not even for the Temp Store.;non_debt
"[FLINK-1937] [ml] Fixes sparse vector/matrix creation fromCOO with a single element
This closes #636.";non_debt
"Merge branch 'two-dot-o-dev' into USERGRID-593
# Conflicts:
#	stack/core/pom.xml
#	stack/core/src/main/java/org/apache/usergrid/corepersistence/CpEntityManager.java
#	stack/core/src/main/java/org/apache/usergrid/corepersistence/CpEntityManagerFactory.java
#	stack/core/src/main/java/org/apache/usergrid/corepersistence/CpRelationManager.java
#	stack/core/src/main/java/org/apache/usergrid/corepersistence/CpWalker.java
#	stack/core/src/main/java/org/apache/usergrid/corepersistence/rx/ApplicationObservable.java
#	stack/core/src/main/java/org/apache/usergrid/corepersistence/rx/EdgesFromSourceObservable.java
#	stack/core/src/main/java/org/apache/usergrid/corepersistence/rx/EdgesToTargetObservable.java
#	stack/core/src/main/java/org/apache/usergrid/persistence/EntityManager.java
#	stack/core/src/main/java/org/apache/usergrid/persistence/cassandra/EntityManagerImpl.java
#	stack/corepersistence/pom.xml
#	stack/corepersistence/queryindex/src/main/java/org/apache/usergrid/persistence/index/IndexFig.java
#	stack/corepersistence/queryindex/src/main/java/org/apache/usergrid/persistence/index/impl/EsEntityIndexImpl.java
#	stack/corepersistence/queryindex/src/main/java/org/apache/usergrid/persistence/index/impl/EsIndexBufferConsumerImpl.java
#	stack/corepersistence/queryindex/src/main/java/org/apache/usergrid/persistence/index/query/Query.java
#	stack/pom.xml";non_debt
Merge remote-tracking branch 'origin/master';non_debt
"Add support for pluggable jvm-metrics (#3428)
* Add support for pluggable jvm-metrics
* auto detect gc metrics impl";non_debt
[CXF-7193] Removing rt-bindings-object;non_debt
OF: Fall back to basic puppet pip installs;non_debt
allow for merge;non_debt
"Merge pull request #1050 from ekholabs/fix/upgrade_path-CLOUDSTACK-9046
CLOUDSTACK-9046 - Fix upgrade path from 4.4 and 4.5 to 4.6This PR fixes the upgrade path from 4.4.x/4.5.x to 4.6.0. We introduced the logic to update the database with the correct information about the SystemVMs.
We tested this PR with by doing an upgrade from 4.4.4 to 4.6.0 and it works as expected.
* pr/1050:
  CLOUDSTACK-9046 - Add new ACS systemVMs website
  CLOUDSTACK-9046 - Add SystemVM upgrade from 4.5 to 4.6 in the Upgrade452to460.java file";non_debt
"Bugfix: Fix permissions to triggering only specific DAGs  (#13922)
From 1.10.x -> 2.0, the required permissions to trigger a dag have changed from DAG.can_edit to DAG.can_read + DagRun.can_create. Since the Viewer role has DAG.can_read by default, it isn't possible to give a Viewer trigger access to a single DAG without giving access to all DAGs.
This fixes that discrepancy by making the trigger requirement DAG.can_edit + DagRun.can_create. Now, to trigger a DAG, a viewer will need to be given both permissions, as neither is with the Viewer role by default.
This PR also hides the Trigger/Refresh buttons on the home page if the user doesn't have permission to perform those actions.
closes: #13891
related: #13891";non_debt
"Adds SoftwareProcess.SSH_ADDRESS (user@ip:port)
- particularly useful for docker, where the ssh port is mapped so
  no each way of finding out that port otherwise";non_debt
Removing debug output.;non_debt
AVRO-236.  Add protocol support to avroj induce tool.;non_debt
Update default queue visibility timeout and add timer for ack'ing queue messages.;non_debt
Merge branch 'master' of https://opensource.ncsa.illinois.edu/fisheye/git/dfdl;non_debt
Re-enable rule prefer-destructuring (only for objects) (#10867);non_debt
"Replace Collections.sort() with List.sort() (#1601)
As of JDK 1.8 calls to Collections.sort(list, comparator) can be replaced with list.sort(comparator).";non_debt
[FLINK-11974][runtime] Introduce StreamOperatorFactory and replace StreamOperator.setup with StreamOperatorFactory.create;non_debt
fixes #816 introduced better way to setup observers and deprecated old;non_debt
update community;non_debt
"[MKLDNN] support using any format in pooling backward (#17900)
* use any format in pooling backward
* use data_type()";non_debt
CAMEL-939 - Get the camel-spring and camel-rest tests running on AIX.;non_debt
 GEODE-6897: re-organize all the security tests and add missing permissions to controllers. (#3744);non_debt
Fix two serious bugs. (#4741);non_debt
TS-2951: Remove xfd.;non_debt
CAMEL-15664: Automatically wrap secret properites with RAW when computing the URI (regen);non_debt
remove backup tomcat conf step;non_debt
Merge remote-tracking branch 'origin/ignite-45' into ignite-45;non_debt
"packaging: install python-dnspython or python-dns to fix issue with cloudstack-setup-management (#3854)
Fixes #3817 #3841";non_debt
successfully demo'd postinstall after lots of testing;non_debt
add www-us/eu to serveralias so it resolves to themis;non_debt
"fixes bookeeper statefulset's deployment url (#2514)
should be https://raw.githubusercontent.com/twitter/heron/master/deploy/kubernetes/general/bookkeeper.statefulset.yaml otherwise 404 will occur";non_debt
"CLOUDSTACK-7973: Proper handler for FenceCommand in simulator
Added a proper handler for FenceCommand in simulator";non_debt
if user has no tenant, check if tenancy is on and respond accordingly;non_debt
[CARBONDATA-1194] Problem in filling/processing multiple implicit columns. This closes #1063;non_debt
CAMEL-14904: Nav pane does not show current page;non_debt
adding uncommitted core classes, and updates to twitter, es, mongo, hdfs;non_debt
[FLINK-19539][jmx] Synchronize accesses to port;non_debt
Fixed Coverity issues Reported;non_debt
Merge branch 'dev' of https://github.com/apache/incubator-dolphinscheduler into dev;non_debt
escape placeholders in text that would otherwise be treated as AsciiDoc attributes;non_debt
Merge branch 'EventUtilsTest';non_debt
"Fix regression of CASSANDRA-7392
patch by blambov reviewed by yukim for CASSANDRA-10951";non_debt
"Merge ""Index-join scan trimming heuristics rework II""";non_debt
Fix SplittableParDoNaiveBounded DoFnInvoker.;non_debt
"MINOR: update streams.html with KStream API changes
mjsax guozhangwang
Closes #1534 from dguy/update-streams-doc";non_debt
[AIRFLOW-5614] Enable Fernet by default (#6282);non_debt
use ShardingProperties;non_debt
Exclude org.apache.httpcomponents stuff from geoip2;non_debt
"ARTEMIS-2229 Qpid jms consumer cannot receive from multicast queue using FQQN
If a client sends a message to a multicast address and using a qpid-jms
client to receive the message from one of the queues using fully
qualified queue name will fail with following error message:
Address xxxx is not configured for queue support
[condition = amqp:illegal-state]
It should be able to receive the message without any error.";non_debt
STORM-675. Allow users to have storm-env.sh under config dir to set custom JAVA_HOME and other env variables.;non_debt
"Integrate commit 158d17c1be0455b52d9d09d0f8f9fe5f4e18e716 from gobblin repo:
Original commit on gobblin:
https://gitli.corp.linkedin.com/ds-platform/gobblin/commit/158d17c1be0455b52d9d09d0f8f9fe5f4e18e716
Original RB: 390664
RB=390955
R=etl-infra-reviewers,ynli
A=ynli";non_debt
Set a 10s timeout on YARN connection failures for unit tests (#1677);non_debt
AMBARI-9097. Deploying Falcon via a Blueprint fails. (rnettleton);non_debt
# GG-9341;non_debt
"HBASE-24651 release script utils should set local user when GPG_KEY is defined.
closes #1992";non_debt
KYLIN-1323 update BuildCubeWithEngine for sharding storage;non_debt
"[SPARK-20749][SQL][FOLLOWUP] Support character_length
## What changes were proposed in this pull request?
The function `char_length` is shorthand for `character_length` function. Both Hive and Postgresql support `character_length`,  This PR add support for `character_length`.
Ref:
https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF#LanguageManualUDF-StringFunctions
https://www.postgresql.org/docs/current/static/functions-string.html
## How was this patch tested?
unit tests
Closes #18330 from wangyum/SPARK-20749-character_length.";non_debt
Compression options explicitly turned off to aviod SnappyCompression exceptions;non_debt
This closes #611;non_debt
CAMEL-7839 Fixed the issue that Xpath is not namespace aware in choice;non_debt
"Merge pull request #123 from rodsimpson/USERGRID-133
USERGRID-133 - Portal - fixed double append bug when hiding details in d...";non_debt
"Merge pull request #7553 from akedin/cacheless-root-schema
[SQL] Force cache-less root schema in Jdbc connection";non_debt
Disable MesosContainerFactory from subscribing after close (#4541);non_debt
"Merge pull request #109 from pwendell/master
Adding Java/Java Streaming versions of `repartition` with associated tests";non_debt
Add extra check that we can create an AccessControlContext for running test with lower privileges. It's trappy otherwise!;non_debt
"NIFI-4082 - Added EL on GetMongo properties
NIFI-4082 - Added EL on DB, URI and Collection
NIFI-4082 - Added UT for EL evaluation (URI, DB, Collection) and fixed ex. message for document validator.
This closes #1969";non_debt
CAMEL-5867: Jetty producer creates a new http client and uses any httpClient.xxx options configured. This avoids issue with handling proper lifecycle of these clients.;non_debt
"NIFI-2692
- Removing problematic timeout for SMTP Listen
- Converting anonymous method to lambda
- Adding debug and error logging
This closes #1924.";non_debt
for #2084, DMLStatement.getUpdateColumnValues => DMLStatement.assignments;non_debt
CLOUDSTACK-8335: removed ceph repository - artifact resolved from maven central;non_debt
[RUST] Remove empty ty.rs (#2958);non_debt
testing CC: trigger failure;non_debt
[CXF-7278] Correctly setting HttpResponseEncoder in the Netty server pipeline;non_debt
extract subquery from select clause;non_debt
[KARAF-5627] Upgrade to PAX-JMS 0.3.0;non_debt
THIRDEYE-414 A user should be able to submit feedback from the dashboard;non_debt
AMBARI-8731 Navigating to/from hosts causes increasing number of Versions tab. (ababiichuk);non_debt
define version of dependency plugin in parent pom;non_debt
HBASE-8704 Log the table name in ServerCallable.prepare;non_debt
merged from main branch and resolved the conflict in stram/src/main/java/com/malhartech/dag/AbstractNode.java;non_debt
HIVE-11793 : SHOW LOCKS with DbTxnManager ignores filter options (Wei Zheng, reviewed by Eugene Koifman);non_debt
[CXF-3226] Colons in path segments should not be url encoded by default;non_debt
BIGTOP-905. bump versions of test execution poms to match the BOM;non_debt
"docs: add a faq about mapbox api key (#968)
Also add it to sample config
Fix #952";non_debt
"CLOUDSTACK-6205: VPC VR start - skip private gateway when create Guest nics as the nic for the private gateway is being created separately
Conflicts:
	server/src/com/cloud/network/NetworkModelImpl.java
	server/src/com/cloud/network/router/VpcVirtualNetworkApplianceManagerImpl.java";non_debt
Add jenkins service;non_debt
"Merge branch 'v0.7.1-dev' into tb-dev
# Conflicts:
#	android/sdk/src/main/java/com/taobao/weex/WXSDKEngine.java
#	android/sdk/src/main/java/com/taobao/weex/ui/component/WXSlider.java";non_debt
mxrtc fix;non_debt
SOLR-8832: Faulty DaemonStream shutdown procedures;non_debt
adjust azure storage retry conditions (#8296);non_debt
modify config-spring-boot.cn.md;non_debt
HADOOP-7391 Document Interface Classification from HADOOP-5073 (sanjay Radia);non_debt
Commit files masked by 'bazel' in .gitignore (#451);non_debt
AMBARI-19403 : Hive View 2.0 : add REST endpoint for deleting database (nitirajrathore);non_debt
Adds (WIP) outline for VanillaWindowsProcess;non_debt
fix fresh button on right panel for mutliple-selection page (e.g. Instance page).;non_debt
Added snippets for wiki documentation;non_debt
"Revert ""NIFI-3352 - Address issue where ListenLumberjack was sending long numbers back to clients - instead of int""
This reverts commit 9609dafc34f40178d30480a41288fe4a89c2eb79.";non_debt
CAMEL-15394: PropertyBindingSupport: Old syntax for #ref values should be handled specially for reflection vs configurer for options that are String type based.;non_debt
split mesos and api;non_debt
Reduce complexity of TrafficRouter dns route method;non_debt
25269: miscellaneous bug fixes - Fixes to processing value types at run time.;non_debt
Merge branch 'dev' of https://github.com/apache/incubator-shardingsphere into dev;non_debt
Improve javadoc for RDFParser. Provide fromString() shortcut;non_debt
LANG-1097: Update org.easymock:easymock to 3.3.1. This fixes #54 from github. Thanks to Micha�� Kordas.;non_debt
"Separate input and output connection details in ConfigHelper.
Patch by Mck SembWever, reviewed by brandonwilliams for CASSANDRA-3197";non_debt
[hotfix][runtime] Add convenience TestingLogicalSlot constructor;non_debt
fixing dep policy with appId;non_debt
move BatchPreparedStatementExecutor.java;non_debt
"Merge branch 'cassandra-2.1' into trunk
Conflicts:
	doc/cql/CQL.textile
	src/java/org/apache/cassandra/cql/CFPropDefs.java";non_debt
"Merge pull request #374 from sebbASF/archive-fixes
Fixes to archiver";non_debt
HDFS-9889. Update balancer/mover document about HDFS-6133 feature. Contributed by Yongjun Zhang.;non_debt
DISPATCH-72: Fix c_entity locking to prevent add/remove entities during update.;non_debt
HDFS-15149. TestDeadNodeDetection test cases time-out. Contributed by Lisheng Sun.;non_debt
[SYSML-358] Add Apache License headers to assembly files;non_debt
[CXF-3574] Support additional JMS property types;non_debt
Merge remote-tracking branch 'origin/coreyg_2015091500' into deployment;non_debt
CAMEL-8232: Camel Toolbox - Include documentation about data formats;non_debt
Domain page - ROOT domain is not allowed to delete.;non_debt
Update to Apache WSS4J 2.3.0-SNAPSHOT;non_debt
Merging latest trunk into tez branch. (Gunther Hagleitner);non_debt
HIVE-2347. Make Hadoop Job ID available after task finish executing (Kevin Wilfong via Ning Zhang);non_debt
#ignite-629: remove CacheFlag SKIP_STORE.;non_debt
BIGTOP-3141. Release number is not honored by the build system (#452);non_debt
"Create resnet.py
Fixing print statements to make Python3 compatible.";non_debt
"Remove couch_crypto
The crypto:{hash,hash_init,hash_update,hash_final} functions exist
in all the versions of erlang supported by CouchDB.";non_debt
SPOI-1349 #resolve added pager capability to cli;non_debt
new builder engine;non_debt
"ARROW-8269: [Python] Add pandas mark to test_parquet_row_group_fragments to fix nopandas build
Closes #6759 from wesm/ARROW-8269";non_debt
"[BUGFIX] Fix for sbt/sbt script SPARK_HOME setting
In some environments, this command
    export SPARK_HOME=$(cd ""$(dirname $0)/.."" pwd)
echoes two paths, one by the ""cd .."", and one by the ""pwd"". Note the resulting
erroneous -jar paths below:
    ctn@ubuntu:~/src/spark$ sbt/sbt
    + EXTRA_ARGS=
    + '[' '' '!=' '' ']'
    +++ dirname sbt/sbt
    ++ cd sbt/..
    ++ pwd
    + export 'SPARK_HOME=/home/ctn/src/spark
    /home/ctn/src/spark'
    + SPARK_HOME='/home/ctn/src/spark
    /home/ctn/src/spark'
    + export SPARK_TESTING=1
    + SPARK_TESTING=1
    + java -Xmx1200m -XX:MaxPermSize=350m -XX:ReservedCodeCacheSize=128m -jar /home/ctn/src/spark /home/ctn/src/spark/sbt/sbt-launch-0.11.3-2.jar
    Error: Invalid or corrupt jarfile /home/ctn/src/spark
Committer: ctn <ctn@adatao.com>
On branch master
Changes to be committed:
- Send output of the ""cd .."" part to /dev/null
	modified:   sbt/sbt";non_debt
fix effector params bug, and better handling of effector timeout/errors;non_debt
"[SPARK-9831] [SQL] fix serialization with empty broadcast
Closes #8117 from davies/fix_serialization and squashes the following commits:
d21ac71 [Davies Liu] fix serialization with empty broadcast";non_debt
SOLR-12028: BadApple and AwaitsFix annotations usage;non_debt
AMBARI-24998 Not supported actions(like Start/Stop) should not be shown for HDFS/YARN clients in WL cluster with externalized HDFS/YARN;non_debt
HBASE-5997 Fix concerns raised in HBASE-5922 related to HalfStoreFileReader;non_debt
Merge branch 'PR372' into develop;non_debt
Fixed IN filter expression deserializing issue from thrift server This closes #67;non_debt
Make deleteAny algorithm publicly available.;non_debt
KAFKA-7169: Validate SASL extensions through callback on server side (#5497);non_debt
HBASE-2431 Master does not respect generation stamps, may result in meta getting permanently offlined;non_debt
"Update CQL doc for CASSANDRA-6839 (non equal conditions in LWT)
patch by slebresne reviewed by blerer for CASSANDRA-10752";non_debt
LUCENE-1007: allow flushing by ram, doc count, or both (whichever comes first) in IndexWriter;non_debt
Don't create one big byte[] for the wrapper, use multi streams;non_debt
Interest recalculation scheduler job enhancement;non_debt
TOMEE-1640 prevent not loadable bean classes to be seen by CDI - and fail later in extensions;non_debt
# GG-9198 WIP;non_debt
Converted Stretchy Report Into Pentaho Pentaho mifosx-1010;non_debt
"ISSUE #432: Add ""Google Analytics"" to the website
Descriptions of the changes in this PR:
Add ""google analytics"" script to the website for tracking the documentation traffic. We can learn the pattern and improve documentation.
The google account for analytics is managed by bookkeeper pmc.
This closes #433 from sijie/google_analytics, closes #432";non_debt
Changing property.value back to string and adding properties to handle kubernetes services and dynamic payload;non_debt
IGNITE-61 - Fixed compilation;non_debt
Push down guiceyfruit repo for faster builds;non_debt
"Design doc: Replace TikZ-UML with a pre-compiled figure
Pivotal tracker: #102604520
TikZ-UML is of GPL license and cannot be included after moving to Apache
license. We replace the class diagram in design document that used
TikZ-UML with a pre-compiled figure, built using MetaUML";non_debt
AMBARI-2397. Unencrypted master key stored in temporary file. Unit Test. (swagle);non_debt
"[rt-felix] embedded framework test survives teardown
When deleting files during teardown, if a temporary file can't be deleted
then the test should not fail for that reason. Log that the file could not
be delete and carry on.";non_debt
CAMEL-13398 - Added docs for AWS-ECS;non_debt
"ARROW-5137: [Flight] Implement auth API
Also sets up the server-side APIs for [ARROW-5136](https://issues.apache.org/jira/browse/ARROW-5136).
I mostly mirrored the existing Java APIs in each language, except I didn't add the BasicAuth specialization.
Closes #4125 from lihalite/arrow-5137-auth and squashes the following commits:
067ff3217 <Antoine Pitrou> Avoid making I/O methods const
48d42485f <David Li>  Implement auth API for Flight
14774082f <David Li>  Implement auth API for Flight
02a9663ae <David Li>  Implement auth API for Flight";non_debt
[FLINK-14890] Add utility class for initializing various process function test harnesses;non_debt
CAMEL-9119: xslt should throw exception if error/fatal parsing xslt source. Thanks to metatech for the patch.;non_debt
GEODE-4728: Docs - building out the open source repo;non_debt
tweak to UnrollJumpStrategy for @dkuppitz.;non_debt
Corrected AutoscalerTopologyReceiver class comment;non_debt
"[SPARK-7435] [SPARKR] Make DataFrame.show() consistent with that of Scala and pySpark
Closes #5989 from rekhajoshm/fix/SPARK-7435 and squashes the following commits:
cfc9e02 [Joshi] Spark-7435[R]: updated patch for review comments
62becc1 [Joshi] SPARK-7435: Update to DataFrame
e3677c9 [Rekha Joshi] Merge pull request #1 from apache/master";non_debt
"Handle host id conflicts properly.
Patch by brandonwilliams, reviewed by Tyler Hobbs for CASSANDRA-6615";non_debt
HIVE-11057 HBase metastore chokes on partition with ':' in name (gates);non_debt
Prevent edges-to-self in topological sort.;non_debt
[CARBONDATA-928] Added a link to configuration parameters in doc This closes #798;non_debt
HADOOP-12000. cannot use --java-home in test-patch (aw);non_debt
Support Multi part upload for S3 using TransferManager.;non_debt
APIChecker: Fix interface definition to take in User;non_debt
"Fix jclouds getPublicHostnameAws
- Pass sshConfig in correctly single key of ""config"" with map
  seems to be no longer supported.";non_debt
AMBARI-1270 - Add predicate objects for checking empty resource category;non_debt
"Merge pull request #1582 from mgeiss/MIFOSX-SPM-3
retrofitted SPM API to ease the usage";non_debt
"[ZEPPELIN-4650]. Allow to keep job running while close interpreter
### What is this PR for?
This PR is to allow keeping job running while close interpreter. This is pretty useful for streaming jobs that you would like to keep it running even after the the interpreter is closed. Such as flink/spark streaming job. This PR introduce property `zeppelin.interpreter.close.cancel_job` to control that, each interpreter can configure it in its interpreter properties.
### What type of PR is it?
[ Feature ]
### Todos
### What is the Jira issue?
* https://jira.apache.org/jira/browse/ZEPPELIN-4650
### How should this be tested?
* CI pass
### Screenshots (if appropriate)
### Questions:
* Does the licenses files need update? No
* Is there breaking changes for older versions? No
* Does this needs documentation? No
Closes #3669 from zjffdu/ZEPPELIN-4650 and squashes the following commits:
f64e01c18 [Jeff Zhang] [ZEPPELIN-4650]. Allow to keep job running while close interpreter";non_debt
adding stacktrace in Jenkinsfile_utils.groovy to inspect Python2 failure cause in CI (#17065);non_debt
bug 10567: In Basic zone, throw an exception with Pod scope when vm failed to be added to the network - so we retry to start it in a different pod;non_debt
Deprecate and stop use of ComponentFacade, ContainerFacade, and Startable.  All are superceeded in functionality by FactoryBuilderSupport;non_debt
KYLIN-1286 fix licenses in resource files;non_debt
It's an enhancement to View Results Tree;non_debt
Added unit test as CliTest and renamed the integration tests to CliIntegrationTest;non_debt
"[BUG] ReAgg when adding agg mv on dup base table (#4587)
When the keystype of mv and base table is difference, Doris should execute
sorting schema change instead of linked schema change.
If doesn't, the data size of mv actually is same as base table.
This will cause mv to have no pre-aggregation effect at all.
The query will not choose mv.
This commit fixed this problem. Fixed #4586";non_debt
"Add ProfilerRegisterThead() to PosixThread.
Adds an #ifdef'd block that calls ProfilerRegisterThread() if
""REGISTER_THREAD_GOOGLE_PERFTOOLS"" is set.  Apparently, this makes the
Google perftools CPU profiler work much better on x86-64.";non_debt
"GEODE-3260: Refactoring FunctionCommands
This closes #691";non_debt
Upgrade to OpenTracing java API 0.33;non_debt
"[CALCITE-2456] VolcanoRuleCall doesn't match unordered child operand when the operand is not the first operand. PruneEmptyRules UNION and MINUS with empty inputs cause infinite cycle. (Zuozhi Wang)
UNION and MINUS corrected by Vladimir Sitnikov.
Note: call.getChildRels(RelNode) was used previously to get inputs of UNION/MINUS,
and it looks like the method is ill-defined (at least, it returns wrong results).
fixes #784";non_debt
"[Bug] Fix bug #4886 and #4586 by refactoring code of method 'getDbs' (#4887)
fix issue #4886";non_debt
Adjusting filename of EvaluateJsonPath;non_debt
CAMEL-2920: beanRef and method call DSL now validate method name is a valid method on startup. Better to fail fast.;non_debt
"Merge pull request #632 from pnommensen/patch-2
1.4.5 to 1.4.6 update";non_debt
Merge commit 'f9a0676f' into ignite-1.7.3;non_debt
Removing System.out.println statements;non_debt
Add -i to docker command, otherwise doesnt work (#4864);non_debt
CAMEL-5604: camel-jackson added option to use list for unmarshal to pojo/map if the json is a list.;non_debt
"Merge pull request #574 from zhangkewei/NPE
AgentStream NullPointerException with RemoteWorker";non_debt
"add '**' to DOMCategory and XmlParser
make children() in DOMCategory behave like XmlParser
Add depth/breadthFirst to DOMCategory";non_debt
STORM-2813: Use a class for normalized resources not a map.;non_debt
SOLR-2163: SolrRequestParserTest.testStreamURL test failure;non_debt
Merge branch 'TRAFODION-2001' of github.com:zcorrea/incubator-trafodion into TRAFODION-2001;non_debt
"Merge pull request #825 from shivaram/maven-repl-fix
Set SPARK_CLASSPATH for maven repl tests";non_debt
SVN eol-style;non_debt
[hotfix] [streaming] Tasks print subtask in log statements;non_debt
"Remove Gobblin from NOTICE
RB=400417
A=mitu";non_debt
added changelog;non_debt
"KAFKA-9918 SslEngineFactory is NOT closed when channel is closing (#8551)
This patch ensures that `SslEngineFactory` is closed. The default implementation (**DefaultSslEngineFactory**) does not have any releasable object so we didn't notice this issue. However, it would be better to fix this issue for custom engine factories.";non_debt
Merge branch '1.8';non_debt
AVRO-1332.  Add missing files and fix a bug with defaults.  Contributed by David McIntosh.;non_debt
Sync both template files this time;non_debt
"Deprecated profile, svd_mf, quantile
Pivotal Tracker #68032808
Additional Author Pei, Liquan <lpei@gopivotal.com>
Change list:
	1. Added in ReleaseNotes that profile, svdmf and quantile are
	deprecated
	2. Move profile, svdmf and quantile to deprecated module section
	in online documentation
	3. Change the documentation in relevant .sql_in files
Squashed commit of the following:
commit 2ffe0812dbb357b00bc3ecccd602612dfed96b68
Date:   Thu Mar 27 13:23:29 2014 -0700
    minor fix
commit 1f150ae3bbe0c623e1bd7b706219200478474423
Date:   Thu Mar 27 12:30:03 2014 -0700
    Deprecated profile, svd_mf, quantile";non_debt
"ARROW-2802: [Docs] Move all release management instructions to Confluence
This developer documentation is now hosted at https://cwiki.apache.org/confluence/display/ARROW/Release+Management+Guide
Closes #2226 from wesm/ARROW-2802 and squashes the following commits:
469ae362 [Wes McKinney] Move all release management instructions to Confluence";non_debt
[CXF-4395] ClaimsAttributeStatementProvider add claims for subject of onbehalf/actas;non_debt
"bug 8239: NPE while executing CreateSnapshotCmd
status 8239: resolved fixed";non_debt
link webapp poms to parent, so deploy works in clean environment;non_debt
Add the execution tests for construct quad;non_debt
"TOBAGO-1283: New attribute ""placeholder"" for input fields";non_debt
DRILL-2021: In ProjectRecordBatch, for the case where expr != ref, allow duplicates when projecting, keep track of the used output names;non_debt
Merge branch 'cassandra-2.1' into trunk;non_debt
"Adding a avro timestamp converter config to the pull file
RB=273132
R=stakiar,kgoodhop,lqiao,ynli
A=stakiar";non_debt
"KAFKA-3025 Added timetamp to Message and use relative offset.
See KIP-31 and KIP-32 for details.
A few notes on the patch:
1. This patch implements KIP-31 and KIP-32. The patch includes features in both KAFKA-3025,  KAFKA-3026 and KAFKA-3036
2. All unit tests passed.
3. The unit tests were run with new and old message format.
4. When message format conversion occurs during consumption, the consumer will not be able to detect the message size too large situation. I did not try to fix this because the situation seems rare and only happen during migration phase.
Closes #764 from becketqin/KAFKA-3025";non_debt
Updated CHANGELOG.md;non_debt
HBASE-6522 Expose locks and leases to Coprocessors;non_debt
"[REEF-1686] Create a variant of YarnClientConfiguration for Unmanaged AM
Summary of changes:
   * Create Driver and Client configuration modules for the Unmanaged AM app, and add extra parameters required for that mode
   * Implement Unmanaged AM app submission functionality
   * Make `YarnDriverConfigurationProviderImpl` class public so that Unmanaged AM configuration can refer to it.
JIRA: [REEF-1686](https://issues.apache.org/jira/browse/REEF-1686)
This closes #1243";non_debt
Merge remote-tracking branch 'origin/master';non_debt
[KARAF-690]install http feature will start both 8080 and 8181 jetty port;non_debt
SOLR-503 -- restructure src/webapp to keep jsps and WEB-INF in same directory.  Added test to hit jsp files.  (currently only checks if they compile ok);non_debt
"[SYSTEMML-1532] python launch script for spark-submit
Closes #501";non_debt
[hotfix] fixing infinite retries in prod;non_debt
GROOVY-7967: AstNodeToScriptAdapter should output source using the recommended modifier order (closes #447);non_debt
"Changed ""*Value"" to ""*Type"" in PostgreSQL sources";non_debt
GROOVY-8253: Groovy console fails to launch;non_debt
YARN-1451. TestResourceManager relies on the scheduler assigning multiple containers in a single node update. (Sandy Ryza via kasha);non_debt
Update Dockerfile to use user-provided MySQL IP;non_debt
Not using PathParam regexp because Jersey applies the regexp on the URI encoded param rather than the decoded param;non_debt
fix hive stats not being used by the compiler;non_debt
Merge branch '1.9';non_debt
Put String literals first when comparing using String.equals;non_debt
SOLR-792: fix pivot facet native type representation via FieldType.toObject(indexedTerm);non_debt
Added function for pretty printing JSON;non_debt
Fixed the CS errors of camel-cdi;non_debt
Add tag @since 3.1.0;non_debt
reorder to avoid NPE;non_debt
Updated javadoc with greater specifity about GroovyTranslator moving to gremlin-core CTR;non_debt
[android] remove static viewport;non_debt
Merge HTTP Sampler tests (currently only base is tested);non_debt
MAPREDUCE-5257. Fix issues in TestContainerLauncherImpl after YARN-617. Contributed by Omkar Vinit Joshi.;non_debt
"Merge pull request #584 from lukemetz/lm/add_pow
Added pow.";non_debt
"Introduce --main flag for Java actions
Also added test from docs, which uses default (Java) package.";non_debt
[maven-release-plugin] prepare release parquet-format-1.0.0;non_debt
Fix trailing whitespace.;non_debt
"ARROW-9102: [Packaging] Upload built manylinux docker images
However the secrets were set on azure pipelines the upload step is [failing](https://dev.azure.com/ursa-labs/crossbow/_build/results?buildId=13104&view=logs&j=0da5d1d9-276d-5173-c4c4-9d4d4ed14fdb&t=d9b15392-e4ce-5e4c-0c8c-b69645229181).
So the manylinux builds take more than two hours. This is due to azure's secret handling, we need to explicitly export the azure secret variables as environment variables.
Closes #7404 from kszucs/linux-wheel-docker-upload";non_debt
ACCUMULO-167 expanded test for SummingArrayCombiner, fixed bug in its initialization;non_debt
TS-587 Added the -c / CGI option.;non_debt
Copyright headers set #1;non_debt
"[WEEX-137][iOS] Weex support css value for safe-area-inset-left, safe-area-inset-right, safe-area-inset-top, and safe-area-inset-bottom
 close #916
  you may specify safe-area-inset-left, safe-area-inset-right, safe-area-inset-top, and safe-area-inset-bottom
for element and for iPhone X, it will be the safe area and 0 for other model machine.
Bug:137";non_debt
"Pad Operator Type Support (#12035)
* fix no data type inference for pad
* add support for int types
* add tests for all types
* fix gpu type switch
* remove integer support
* fix python op test style issues
* fix type bug in python tests";non_debt
"Merge branch 'android-feature-20160607' of https://github.com/alibaba/weex into android-feature-20160607-opt
* 'android-feature-20160607' of https://github.com/alibaba/weex:
  + [android] add update finish callback
  *[android] update main.js
  + [android] add fetch method";non_debt
PHOENIX-4399 Remove explicit abort on RegionServerServices;non_debt
"TAJO-1222: DelimitedTextFile should be tolerant against parsing errors.
Closes #277";non_debt
"debian: Packaging update for mainly the Agent
The new cloudstack-agent package wouldn't boot due to various issues.
Those all seem to be resolved.
Other changes include path changes like /etc/cloud -> /etc/cloudstack
The new package now installs, but the upgrade hasn't been tested yet.";non_debt
"NIFI-4092: This closes #2365.
- Removing direct dependency on jaxb.";non_debt
"KAFKA-2467: Fix changes to behavior in ConsoleConsumer: properly parse consumer.config option, handle exceptions during message processing, and print number of processed messages to stderr.
Closes #166 from ewencp/kafka-2467-fix-console-consumer-behavior-regressions and squashes the following commits:
8b5e30c [Ewen Cheslack-Postava] KAFKA-2466: Fix ConsoleConsumer exit process for new consumer to avoid ConcurrentModificationException.
c6abe38 [Ewen Cheslack-Postava] Fix missing parameter in test.
a6961ee [Ewen Cheslack-Postava] KAFKA-2467: Fix changes to behavior in ConsoleConsumer: properly parse consumer.config option, handle exceptions during message processing, and print number of processed messages to stderr.";non_debt
TOMEE-2818-Translate to Portuguese: examples/injection-of-entitymanager;non_debt
"Merge pull request #1196 from jbonofre/KARAF-6843
[KARAF-6843] Upgrade to Felix SCR 2.1.24";non_debt
Update to camel 3.0.0-M4 #811;non_debt
Merge branch 'cassandra-2.2' into cassandra-3.0;non_debt
Fix example syntax in SQL walkthough;non_debt
verify no duplicate aggregator names in DataSchema (#3917);non_debt
"Merge pull request #56 from metamx/determine-partitions
Determine partitions better";non_debt
"Setup Travis CI (#7)
* Setup Travis CI
* add source
* fix source";non_debt
PHOENIX-3296 ArrayConstructor expression does not serialize arrays with leading nulls correctly;non_debt
Merge branch 'cassandra-3.11' into trunk;non_debt
Fix javadoc.;non_debt
"Refine start script for sharding-proxy (#5585)
* refine start script for sharding-proxy
* refine start script for sharding-proxy";non_debt
IGNITE-11262 Compression on Discovery data bag - Fixes #6125.;non_debt
add _system resource for munin plugins;non_debt
call back to java;non_debt
Lets include these files in the rars too.;non_debt
"avoid dropping tombstones when they might still be needed to shadow data in another sstable
patch by slebresne and jbellis for CASSANDRA-2786";non_debt
shardingsphere 4.x RC1 RC2 test (#4118);non_debt
Shade commons-pool and commons-jocl library in kylin-job jar;non_debt
[TE] frontend - rca/harleyjj - Enable forecast baseline in RCA UI (#6304);non_debt
Unit test for Location -> HostGeoInfo conversions;non_debt
[SCB-2083]provide client api for config center using blocking http client (#1962);non_debt
HIVE-2098. Makes couple of convenience methods in EximUtil public. Contributed by Krishna Kumar;non_debt
Fix css files for addon mode;non_debt
Merge branch 'cassandra-1.2' into cassandra-2.0;non_debt
fix small bug about dense_grad (#5695);non_debt
ApiUtils#writeShortString uses String length instead of byte length kafka-680 patched by David Arthur reviewed by Jun Rao;non_debt
"nodetool no longer shows node joining (Also fix nodetool status)
patch by Vijay reviewed by driftx for CASSANDRA-6811";non_debt
Update for AMQ-5242, exclude tests that hang on AIX;non_debt
GROOVY-833: fix without delegate;non_debt
https://issues.apache.org/jira/browse/AMQ-3454 - all the little performance test, non imperative;non_debt
LUCENE-5675: more rote factoring;non_debt
LUCENE-5992: add SI tests remove FieldInfos from SegmentInfosWrite.write;non_debt
"Merge pull request #675 from jdtoy/getting-started-download-link
Docs: Impr to Getting Started and Webcluster Example";non_debt
tweak default value.;non_debt
Replaced Cloud.com & Citrix copyright notices with the Apache Software License, Version 2.0.;non_debt
IGNITE-2889 .NET: Added tests for IBinaryNameMapper. This closes #578.;non_debt
"Never store shuffle blocks in BlockManager
After the BlockId refactor (PR #114), it became very clear that ShuffleBlocks are of no use
within BlockManager (they had a no-arg constructor!). This patch completely eliminates
them, saving us around 100-150 bytes per shuffle block.
The total, system-wide overhead per shuffle block is now a flat 8 bytes, excluding
state saved by the MapOutputTracker.";non_debt
add license header for licenseCheck.sh file (#5143);non_debt
"Merge pull request #1228 from ibuenros/templates-fixed
Templates use config instead of properties.";non_debt
modify tests and docs, have segfault;non_debt
"Update README.md
Add Gitter Badge";non_debt
Add PartitionStrategy and related tests as a TraversalStrategy.;non_debt
"Merge pull request #320 from tomdz/master
Shaded repl jar for hadoop1 profile needs to include hadoop classes";non_debt
Added concurrency test.;non_debt
"nice
Co-Authored-By: kezhenxu94 <kezhenxu94@163.com>";non_debt
"Merge pull request #968 from mike-tutkowski/removed_column
CLOUDSTACK-8985: Deleted volume's removed column not updatedI found this issue when a SolidFire integration test yesterday wasn't able to delete primary storage because it claimed there were still volumes using the primary storage in question (this was due to the removed column not being updated appropriately).
I decided to go with a solution where the delete logic would pass in a volume ID to ignore when computing the used space of the primary storage in question.
* pr/968:
  CLOUDSTACK-8985: Deleted volume's removed column not updated";non_debt
HIVE-5794 - HiveServer2 should retry startup (Brock reviewed by Prasad);non_debt
removing 1234;non_debt
HIVE-3348 semi-colon in comments in .q file does not work;non_debt
Improved mechanism to find application;non_debt
4830: This is the walk through example, so we should keep it simple as in the documentation.;non_debt
HDFS-2973. Re-enable NO_ACK optimization for block deletion. Contributed by Todd Lipcon.;non_debt
SOLR-8548: Core Discovery was not following symlinks;non_debt
"add CompositeType ref to the CLI doc for create/update column family
patch by Pavel Yaskevich reviewed by Brandon Williams for CASSANDRA-3980";non_debt
"Merge pull request #500 from tzezula/tzezula/mx1
COS Synchronization is performed at the end of initial scan.";non_debt
HIVE-23546: Skip authorization when user is a superuser (#1033) (Zhihua Deng reviewed by Zoltan Haindrich);non_debt
"[GOBBLIN-768] Add MySQL implementation of SpecStore
Closes #2631 from jack-moseley/mysql-spec-store";non_debt
"AMBARI-8317 Refactor the OS-dependent Ambari Server Windows components - Part 1.4
+Further decomposing ambari-server.py: Moved setup, reset and upgrade into their own files
+Made them OS-independent - now the same routines are being used in Windows too (save upgrade, which is not active in Windows yet)
+Merged the OS-dependent code for JDBC & JDK setup, database interface creation, firewall checks
+Refactored the database setup: split the supported DBMSes into distinct objects
+Replaced recursive calls in the user input routines";non_debt
Rerun 3.2.1 release notes;non_debt
This closes #919;non_debt
"Merge pull request #41 from DataTorrent/SPOI-3840
SPOI-3840 #comment Don't mark operators with future activation windowId ...";non_debt
Optimize auto category interval calculation.;non_debt
Throw FetchFailedException for cached missing locs;non_debt
TS-1339: Check for pread capability on VC before range request.;non_debt
update changelog;non_debt
made the column optional;non_debt
Split history main/groovy/groovy/ui/ to main/groovy/groovy/console/ui - rename source-file to temp;non_debt
Improved version by Paul Elschot that can handle files longer than 2^31.;non_debt
AMBARI-3758. Make Ambari Web changes for CSRF prevention. (onechiporenko);non_debt
"Revert ""[maven-release-plugin] prepare for next development iteration""
This reverts commit 94ff5f013db113108855f86a9078b017c0667fdb.";non_debt
SOLR-1522;non_debt
Merge branch 'tp33' into tp34;non_debt
add final;non_debt
66141: SystemML Engine Enhancements - Changed the version number in the pom files;non_debt
fix uninstall;non_debt
trunk-tracking: port tests for r3935 which changes image lazyloading;non_debt
AMBARI-10173. RU: Wizard does not show up in UI when triggered by API. (akovalenko);non_debt
Fixed CS for Camel-AWS-Xray;non_debt
fix(OLM): CSV name must be DNS-1123 subdomains and consist of lower case alphanumeric characters;non_debt
Normalize EOL for cmd and bat files;non_debt
"[TE] Self-Serve onboarding acceptance test 2B - transition to Alert Page (#2684)
* TE Self-Serve onboarding acceptance test 2B - transition to Alert Page";non_debt
"ARROW-1602: [C++] Add IsValid method to pair with IsNull
Closes #1177 from wesm/ARROW-1602 and squashes the following commits:
0b97e18 [Wes McKinney] Add IsValid method to pair with IsNull";non_debt
RVH should use RC.getRow for correctness and maintainability (in particular the path for get_columns_since was missing).  patch by Jun Rao reviewed by jbellis for #93;non_debt
OPENEJB-2009 is stateful is already destroyed don't remove it, it is done;non_debt
ignite-272 review;non_debt
add test case for #557;non_debt
GUACAMOLE-870: Replace POSITION with CHARINDEX for SQL Server.;non_debt
[CARBONDATA-91] Concurrent query returning empty result (#849);non_debt
# GG-8749 - Portables meta;non_debt
refactor merger into ShardingResultSet 4th version, add decorator for limit;non_debt
"DRILL-5242: The UI breaks when trying to render profiles having unknown metrics
Skip any metrics whose metric ID is unknown, This prevents any ArrayIndexOutOfBoundsException from being thrown and breaking the UI rendering.";non_debt
"YARN-8194.  Fixed reinitialization error for LinuxContainerExecutor.
            Contributed by Chandni Singh";non_debt
KAFKA-7838: Log leader and follower end offsets when shrinking ISR (#6168);non_debt
Merge [TRAFODION-2880] PR 1375 Update Messages Guide messages 1500-1601 etc.;non_debt
AMBARI-13872: Rolling Upgrade: Configuration Groups not applied for upgrades across stack versions (jluniya);non_debt
Adding option for proxy.;non_debt
Regen for commit a7221b229bc4beed94b887027e93688cd358daac;non_debt
[KARAF-2582] Upgrade to json 20131018;non_debt
OF: fix pubsub address;non_debt
do not decode;non_debt
"Merge pull request #12979 from [BEAM-10545] Add 2 show options
[BEAM-10545] Add 2 show options";non_debt
"[GOBBLIN-264] Add a SharedResourceFactory for creating shared DataPub��_
Closes #2116 from htran1/shareable_publishers";non_debt
"changing commandline arguments to be passed in a key value fashion (#2471)
* changing commandline arguments to be passed in a key value fashion
allow override config in heron_executor.py to actually override heron internal configs in HeronInstance
* fixing unittest
* shading dep";non_debt
[CALCITE-3060] MutableProject should be generated based on INVERSE_SURJECTION mapping (DonnyZone);non_debt
Closes #1150;non_debt
# sprint-23 - javadoc fix.;non_debt
"NIFI-6827 This closes #3862. Mismatch in ""lib"" directories of rpm and non-rpm build";non_debt
add uniform category sizing with inline-block styling;non_debt
"Update to Architecture intro file:
* Updated description of druid architecture components
* Added links from descriptions to actual component pages
* Removed Data-Flow page, which was a (mostly) redundant subset of other pages under Architecture)
* Moved non-redundant info from Data-Flow to other Architecture pages
* Updated info on how data actually flows in Druid 0.6";non_debt
"[PIP-43] Support producer to send msg with different schema (#5165)
Master Issue: #5141 
### Motivation
Implement part-1 of [PIP-43](https://github.com/apache/pulsar/wiki/PIP-43%3A-producer-send-message-with-different-schema#changespart-1).
### Modifications
* New message api to specify message schema explicitly
* Mechanism of registering schema on producing
* Batch message container support to check message schema
* Configuration for seamless introduction of this feature";non_debt
HIVE-3153 : Release codecs and output streams between flushes of RCFile (Owen Omalley via Ashutosh Chauhan);non_debt
HADOOP-8423. MapFile.Reader.get() crashes jvm or throws EOFException on Snappy or LZO block-compressed data. Contributed by Todd Lipcon. (harsh);non_debt
"Expose Callbacks that can let async operation of ZkClient function
Current async related operation in ZkClient cannot be utilized as the input arguments are the Callbacks hidden in ZkAsyncCallbacks class.";non_debt
fix #90;non_debt
"chore: remove harmless incubator refs (#12289)
* chore: migrate all harmless incubator refs like comments and documentation files
* chore: migrate all superset.incubator.apache.org to superset.apache.org to
* chore: migrate dist.apache.org refs
* chore: removing incubating and Disclaimer
* fix: linting issues";non_debt
"NIFI-5667: Add nested record support for PutORC
NIFI-5667: Fixed default table name
NIFI-5667: Fixed handling of binary types
NIFI-5667: Added backticks in Hive DDL generation
This closes #3057.";non_debt
Merge branch 'cassandra-3.0' into cassandra-3.9;non_debt
"ARROW-5765: [C++] Fix TestDictionary.Validate in release mode, add docker-compose job for testing C++ release build
This was exposed by ARROW-5145 https://github.com/apache/arrow/commit/f77c3427ca801597b572fb197b92b0133269049b
I also added a docker-compose job for testing the release build nightly at least in Crossbow on https://github.com/ursa-labs/crossbow
Closes #4730 from wesm/ARROW-5765 and squashes the following commits:
d49f9be25 <Wes McKinney> Add check as death test
cc9ca13ec <Wes McKinney> Remove checks that cannot be run in either DEBUG or RELEASE builds
96141e81a <Wes McKinney> Add missing task configuration
90a22de0b <Wes McKinney> Fix TestDictionary.Validate in release mode";non_debt
ASN.1 File JVM support;non_debt
[CI] Update docker image ci_cpu,i386 to include verilator (#3738);non_debt
[KARAF-3526] feature:install foo doesn�۪t fail anymore;non_debt
Fixed issue 1012: pool not used with celery executor;non_debt
CAMEL-1588: Using default work queue capacity of 1000 to avoid queing too many tasks if consumers cannot keep up.;non_debt
ACCUMULO-47: put the classname aliases in trunk;non_debt
"[ZEPPELIN-4500] Refactor getEditorSetting by leverage the paragraph local properties
### What is this PR for?
This PR refactor the getEditorSetting. Now beside the repl text, it will also look at the paragraph local properties to decide the editor setting. This is for jupyter interpreter where kernel name will decide which language will be used.
### What type of PR is it?
[ Improvement | Refactoring]
### Todos
### What is the Jira issue?
* https://jira.apache.org/jira/browse/ZEPPELIN-4500
### How should this be tested?
* CI pass
### Screenshots (if appropriate)
### Questions:
* Does the licenses files need update? No
* Is there breaking changes for older versions? No
* Does this needs documentation? No
Closes #3562 from zjffdu/ZEPPELIN-4500 and squashes the following commits:
553eb6dd3 [Jeff Zhang] [ZEPPELIN-4500] Refactor getEditorSetting by leverage the paragraph local properties";non_debt
"Allow using cached security and revs_limit properties
By default, transactions are used to check metadata, and possibly
reopen the db, to get a current db handle. However, if a `max_age`
option is provided and db handle was checked less than `max_age`
milliseconds ago, use properties from that cached handle instead.
The main use of this feature be in pluggable authorization handlers
where it might be necessary to inspect the security doc multiple times
for the same request before a final decision is made.
`revs_limit/1` was updated as well, mainly for consistency since it is
almost identical to `get_security/1`.";non_debt
[maven-release-plugin] prepare for next development iteration;non_debt
HDDS-2748. interface/OzoneFS.md translation (#491);non_debt
"[SPARK-30814][SQL] ALTER TABLE ... ADD COLUMN position should be able to reference columns being added
### What changes were proposed in this pull request?
In ALTER TABLE, a column in ADD COLUMNS can depend on the position of a column that is just being added. For example, for a table with the following schema:
, the following should work:
Currently, the above statement will throw an exception saying that AFTER x cannot be resolved, because x doesn't exist yet. This PR proposes to fix this issue.
### Why are the changes needed?
To fix a bug described above.
### Does this PR introduce any user-facing change?
Yes, now
works as expected.
### How was this patch tested?
Added new tests
Closes #27584 from imback82/alter_table_pos_fix.";non_debt
"ARROW-4996: [Plasma] Enable uninstalling of signal handler and fix log_dir
1. `UninstallSignalAction` is added at exiting time.
2. When `log_dir` is empty, we should not call InitGoogleLogging, which means there should be not log files. If `log_dir` is not empty, we should call `SetLogDestination` for different log levels.
Closes #4013 from guoyuhong/fixLog and squashes the following commits:
03615f95d <Yuhong Guo> Move UninstallSignalAction to store.cc
822e3966c <Yuhong Guo> Address comments
a9bcd31b9 <Yuhong Guo> Move log_dir_ to logging.cc
ca03541b3 <Yuhong Guo> Move app_name_ to function static variable.
95c3ab394 <Yuhong Guo> Enable uninstall of signal handler and fix log_dir";non_debt
CAMEL-3161: Check that load balancer is not misconfigured, eg having configured it double.;non_debt
"Merge pull request #5303: update machine numbers to 1..16 for inventory tests
update machine numbers to 1..16 for inventory tests";non_debt
[AIRFLOW-6054] Add a command that starts the database consoles (#6653);non_debt
Expose new size values;non_debt
tweak license.;non_debt
"[FLINK-20654][checkpointing] Decline checkpoints until restored channel state is consumed
In scenarios with multiple inputs (e.g. co-group not union) one input may receive a
checkpoint barrier while the second input is still restoring state. This (previous)
state is currently not included into the snapshot, which therefore will be incomplete.";non_debt
This closes #686;non_debt
"erlang: move thrift_client connect logic into a handle_call and call it in start_link
Summary: a failure in thrift_client:init would cause the invoker to exit, but we'd rather just return {error, Error} from start_link and let the invoker crash if it wants
Reviewed By: eletuchy
Test Plan: makes mouths happy
Revert Plan: ok";non_debt
Added camel-jaxb docs to gitbook;non_debt
clarify reuse-addr behaviour and check all nics when starting web server;non_debt
"[GEODE-2324] Dunit test for AcceptorImpl.close()
* Add AcceptorImplObserver
* Add AccceptorImplDunitTest";non_debt
interval chunk query runner now processes individual chunk in a thread pool and prints metrics query/time per chunk;non_debt
"numpy operator hypot (#15901)
* rebase master
* edit test
* add IsIntType to check the input type
* fix error in test
* remove hypot in doc";non_debt
This closes https://github.com/apache/beam-site/pull/431;non_debt
TS-4340: fix small issue related to match typ e NONE;non_debt
"Revert ""Merge branch 'dev' into android""
This reverts commit bc35badfe99504f0acd35ba55f5350ba55f2a873, reversing
changes made to d5b537475fb9f4ec69e4fbb6a79553f86596b8b3.";non_debt
fix: submit setting grafanaURl without validation (#413);non_debt
 [FLINK-19466][runtime / state backends] Add JobManagerCheckpointStorage and FileSystemCheckpointStorage;non_debt
Camel-Support: Fixed CS;non_debt
fix package name for apache repo migration.;non_debt
"Merge commit 'df728fcf41ba0dfddabfaadea8cbcb77d18bfa96'
Conflicts:
	engine/orchestration/src/com/cloud/vm/VirtualMachineManagerImpl.java";non_debt
GEODE-3395 Variable-ize product version and name in user guide - reflect bookbinder v10.1.7 requirement;non_debt
"add example of what comma-delimited means to seeds line
patch by Joaquin Casares";non_debt
add java doc;non_debt
TINKERPOP-1698 Gryo 3.0 WIP;non_debt
[BEAM-6432] Set dependent libraries' versions for the starter archetype automatically;non_debt
SOLR-4055: clone params for create calls;non_debt
AMBARI-7953. Modify HDP-2.2 stack advisor for the tez config properties (aonishuk);non_debt
MAPREDUCE-6384. Add the last reporting reducer info for too many fetch failure diagnostics. Contributed by Chang Li;non_debt
KYLIN-1121 Fix newHBaseConfiguration(url) to fail on bad URL input;non_debt
Merge pull request #2229 from abti/master;non_debt
"added a default buffer size for the monitor. this is so users who
want to monitor a large number of servers can reduce the memory
requirements.
peter lin";non_debt
Added GuacamoleReader.available(), using to determine appropriate times to flush tunnel servlet output.;non_debt
PHOENIX-58: Client jars are missing phoenix code;non_debt
Regen;non_debt
Ticket #268: Add pagination for connections.;non_debt
LUCENE-2864: add FieldInvertState.getMaxTermFrequency;non_debt
releasing 4.2.1;non_debt
upgrade semver and add exclude for shaded stuff;non_debt
SPOI-1770 exposing list of latest 100 topics;non_debt
"Merge pull request #328 from rxin/spark-635
SPARK-635: Pass a TaskContext object to compute() interface and use that to close Hadoop input stream.";non_debt
Update GroupAlsoByWindowEvaluatorFactory;non_debt
TOBAGO-1544: Demo;non_debt
adjust the checkpoint value to zero before checkpointing;non_debt
"BOOKKEEPER-987: BookKeeper build is broken due to the shade plugin
This is simply an upgrade of the maven-shade-plugin to version 2.4.3
Closes #94 from eolivelli/BOOKKEEPER-987";non_debt
HADOOP-12579. Deprecate WriteableRPCEngine. Contributed by Wei Zhou;non_debt
# GG-8089;non_debt
"Reformatted to JMeter conventions.
Minor JavaDoc updates.
No changes to the actual code.";non_debt
SOLR-889: Upgraded to commons-io-1.4.jar and commons-fileupload-1.2.1.jar;non_debt
[KARAF-4737] Update bundle state according to start attribute only at feature installation;non_debt
GUACAMOLE-256: Merge NoAuth deprecation.;non_debt
"Merge pull request #1320 from Humbedooh/deployment
trying again..";non_debt
Mention script changes.;non_debt
used a separate room for CI messages;non_debt
[maven-release-plugin] prepare for next development iteration;non_debt
Upgrade Credo to 1.3.1;non_debt
ignite-1304 Changed GridNearOptimisticTxPrepareFuture to do not execute whole prepare process with topology read lock held;non_debt
SOLR-6095 SolrCloud cluster can end up without an overseer with overseer roles;non_debt
"Allow tests to share a single Spark context.
It's not possible to have multiple Spark contexts per JVM (even if not running concurrently),
and while one solution is to fork a new JVM per test class, it's not always possible or desirable
to do this - if for example the test suite has a dataflow test per test method, or the test
suite has many very small tests.
This JIRA has more background and discussion about the JVM limitation:
https://issues.apache.org/jira/browse/SPARK-2243
This change makes it possible to share a SparkContext when running tests that use the
SparkPipelineRunner by setting the system property 'dataflow.spark.test.reuseSparkContext'
to 'true'.";non_debt
"CXF-8237 OAuth 2.0 Authorization Server Metadata / OpenID Provider Metadata (#650)
* CXF-8237 OAuth 2.0 Authorization Server Metadata / OpenID Provider
Metadata
* use WELL_KNOWN_PATH in annotation";non_debt
"Merge pull request #2473 from entlicher/headlessUQEinDES_delivery
Reload external changes automatically in headless mode.";non_debt
Document some Findbugs info;non_debt
Changing data accessor;non_debt
"Don't allow to specify security groups when deployVm in Vmware setup.
Also fixed a couple of other problems:
* verify security group ids before vm creation
* don't create ""default"" security group (if missing) as a part of deployVm process when vm is deployed from vmWare template";non_debt
HIVE-20848 : After setting UpdateInputAccessTimeHook query fail with Table Not Found. (Rajkumar Singh via Ashutosh Chauhan);non_debt
GEODE-8159: Adds sourceforge as alternative download source for Boost. (#614);non_debt
Add test case for oneDNN RNN (#19465);non_debt
This closes #52;non_debt
merge from master;non_debt
[hotfix][test] Extract common variables;non_debt
generate doc for Groovy JDK enhancements �� la javadoc;non_debt
CAMEL-12182 - reset connection after acknowledgement timeout;non_debt
"unify config-center model (#4388)
* unify config-center model
* change ut to meet the new model
* add back the wrongly deleted line";non_debt
Bump HikariCP to version 2.4.13 and passed to Hikaricp-java7;non_debt
https://issues.apache.org/jira/browse/AMQ-4662 - kahadb default checksumJournalFiles = true - validate no migration impact as we currently store default checksum value of 0;non_debt
"CAMEL-12691: XmlConverter should use logger api when reporting parsin��_ (#2445)
* CAMEL-12691: XmlConverter should use logger api when reporting parsing errors.";non_debt
possible solution for 1.5.x;non_debt
disable build tests;non_debt
"Merge pull request #6370 from huygaa11/master
[BEAM-5367] Removed beam/website check from the Beam build dependency.";non_debt
"fix NPE
patch by Benedict Elliott Smith reviewed by jbellis for CASSANDRA-6671";non_debt
Relocated Spec Catalogs to be made available outside of gobblin-service;non_debt
fix assembly tar mode on some platforms;non_debt
# gg-7167-2 - code review.;non_debt
"Revert ""Encode last_seq correctly for non-continuous _changes.""
This reverts commit d07ad516fb94843c9080ce3931e18f7252576015.";non_debt
OPENEJB-1305: patch from Andy. Hook standalone shutdown process. Cool patch! Thanks Andy;non_debt
HIVE-6594: UnsignedInt128 addition does not increase internal int array count resulting in corrupted values during serialization (Remus Rusanu reviewed by Jitendra Pandey);non_debt
Add non-persistent topic stats separately in brokers-stat (#1235);non_debt
Fix windows line endings.;non_debt
Regen;non_debt
Introduce `global_changes_plugin:transform_change/3`;non_debt
Merge branch 'cassandra-2.1' into trunk;non_debt
KYLIN-1722 add serialVersionUID in IntegerDimEnc;non_debt
"[FLINK-19608][table-planner-blink] Introduce SqlOperator definitions for TUMBLE, HOP, CUMULATE table-valued function
We don't use the definitions in Calcite, because we have some special needs:
1) we have time attribute type check on the DESCRIPTOR time column
2) we need to derive type of window columns from the time attribute type (e.g. TIMESTAMP_LZ)
3) we will output an additional column `window_time` which extends time attribute type
This closes #14905";non_debt
ARTEMIS-1420 updated docs;non_debt
remove dependencies on stram from lib/contrib/demos/poc;non_debt
Add support for move.;non_debt
"[Issue-190]dict generation support complex datatype and load csv file without header (#193)
* global dictionary generation support complex data type and  load csv file without header
* read global dictionary from cache during global dictionary generation";non_debt
Make sure initial log messages go somewhere for agent and usage;non_debt
PUT call to database that is not guaranted to exist.;non_debt
"Fix session based replicator auth when endpoints have require_valid_user set
If _session response is 401 and WWW-Authentication header is set assume
endpoint has require_valid_user set. Remember that in the state and
retry to reinitialize again. If it succeeds, keep sending basic auth
creds with every subsequent _session request.
Since session uses the replicator worker pool, it needs to handle worker
cleanup properly just like couch_replicator_httpc module does. If response
headers indicate the connection will be closed, don't recycle it back to the
pool, otherwise during an immediate retry there will be a connection_closing
error, instead follow what the server indicated and stop the worker then
release it to the pool. The pool already knows how to handle dead worker
processes. This is needed with this commit, because we now have a pattern of an
immediate retry after an auth failure.
Fixes #1550";non_debt
"TAJO-939: Refactoring the column resolver in LogicalPlan.
Closes #71";non_debt
system: roll back fd optimization;non_debt
Add per-resource number of message received monitoring;non_debt
"Merge pull request #13600 from apache/fix/release-fix
fix: ensure folder exist for i18n build.";non_debt
Updating javax.annotation-api version to 1.2-b04;non_debt
AMBARI-406. Monitoring dashboard does not show ZK service state correctly (Contributed by Ramya);non_debt
v0.17.2rc2;non_debt
Merge branch '1.6.0-SNAPSHOT';non_debt
Addressed PR comment;non_debt
ignite-4929 Fixed issue with incorrect return value on backup for one-phase tx invoke (anyway old value is sent on backups on changed topology, use this value on backup for invoke);non_debt
"Add unit tests for ThrottlingExceptionRoutePolicy and include in LC
strategy";non_debt
[BEAM-4148] Add pluggable UrlFactory to ServerFactory;non_debt
old maven version on builds.apache.org doesn't pick up correct plugin version;non_debt
added support for AssertStatement;non_debt
clear nocommits;non_debt
setter for max duration;non_debt
"[FLINK-7997] [avro] Make Avro part of the user code space
By not setting Avro as 'provided', the build system will put it
into the user code fat jar, rather than assuming it will be part
of Flink's 'lib' folder.
That way Avro is loaded child-first through the user code class
loader, giving it independent separate copies per load that avoid
version conflicts and caching problems.";non_debt
"Merge pull request #573 from Aaaaaaron/minor-log
minor, correct the config name printed in logs/exception.";non_debt
CAMEL-14868 - Camel-AWS2-*: Where possible, give the possiblity to the end user to pass an AWS Request pojo as body, aws2-eks regen;non_debt
bug 6163: implementing the search function for zone wide searches for vlans;non_debt
HBASE-1522;non_debt
61184: SystemML Engine Enhancements - checking in DML scripts: m-svm.dml, m-svm-score.dml, l2-svm.dml, l2-svm-score.dml;non_debt
"Merge pull request #454 from coheigea/AMQ-7406
AMQ-7406 - ActiveMQSslConnectionFactory truststore settings don't wor��_";non_debt
[CAMEL-12326]Improve CamelCxfClientImpl a bit ensure it can handle camel side usecase;non_debt
Upgrade AWS SDK v2 to version 2.13.16;non_debt
LUCENE-4410: Fix LeapFrog initialization & add santiy test cases for individual strategies;non_debt
"ARROW-7630: [C++][CI] Check fuzz crash regressions in CI
Closes #6254 from pitrou/ARROW-7630-ci-fuzz-regressions and squashes the following commits:
c35155906 <Antoine Pitrou> ARROW-7630:  Check fuzz crash regressions in CI";non_debt
"[AIRFLOW-2060] Update pendulum version to 1.4.4
This fixes a task clearing issue with deep copy
Closes #3154 from cinhil/AIRFLOW-2060";non_debt
Check just a few well known clusters;non_debt
Updated committer/contributor list. (yusaku);non_debt
[BEAM-6052] Fix the bug of checkForErrors, add update response parse logic for this.;non_debt
CAMEL-10197: Fix for camel-avro configuration;non_debt
HAWQ-1431. Do not use StatsAccessor when column specified in SELECT clause.;non_debt
"network: don't show acquire public IP in listview
The acquire IP feature is already implemented as a tab feature for
isolated networks and VPC.";non_debt
[AIRFLOW-241] Add testing done section to PR template;non_debt
SPOI-4032 #comment build a java type graph with reading java bytecode only;non_debt
"Skip loading corrupt key cache
patch by Mikhail Stepura reviewed by jbellis for CASSANDRA-6260";non_debt
CAMEL-3633: Forced disabling Quartz update checker. CAMEL-3579: You can now use multiple QuartzScheduler instances in the same JVM classloader. Thanks to Sergey for the patch.;non_debt
"Moving store test to TestContainerStorageManager from TestSamzaContainer
There was a test in TestSamzaContainer that needs to be moved to TestContainerStorageManager because the restore logic is moved there.
Minor change in TestSamzaContainer and ContainerStorageManager
Closes #838 from rmatharu/storeTest-fix";non_debt
missing indexes;non_debt
TOMEE-2316 Convert Markdown files to Asciidoc in the docs folder - 12;non_debt
Add assertj as test dependency;non_debt
"Suppress CVEs for jackson-mapper-asl:1.9.13 (#9604)
The jackson-mapper-asl:1.9.13 CVEs via curator-x-discovery are all
suppressed for now as fixing them requires updating the curator version.";non_debt
Add words in two License files. (#1450);non_debt
HBASE-21718 Implement Admin based on AsyncAdmin;non_debt
"Applying patch AMQ-5074: MQTT paths with empty levels are not handled correctly.
Thanks Dhiraj!";non_debt
AMBARI-6719. Package Jobs View as a jar. (yusaku);non_debt
"[SYSTEMML-2037] Fix output representations binary/ternary instructions
This patch fixes special cases of binary instructions where the input
sizes (e.g., matrix-vector) do not cover a potential dense-sparse
change, which causes outputs to remain in wrong sparse/dense
representations. For execution types such as singlenode as used in JMLC
scenarios this is unnecessary. Furthermore, for special cases of ternary
instructions such as ctable rexpand, the output representation cannot be
determined upfront and hence, we should similar to binary operations,
check for sparse/dense conversions accordingly.";non_debt
CLOUDSTACK-1: Working on new install/compiling documentation for 4.1;non_debt
TINKERPOP-1686 Fixed up gryo io docs for 3.0;non_debt
[maven-release-plugin] prepare release kylin-0.7.2-incubating;non_debt
"MINOR: Use an explicit `Errors` object when possible instead of a numeric error code
Closes #2475 from vahidhashemian/minor/use_explicit_Errors_type_when_possible";non_debt
SOLR-14993: Unable to download zookeeper files of 1byte in size;non_debt
HIVE-2549 Support standard cross join syntax. Navis Ryu (via egc);non_debt
add compatibility report;non_debt
"ORC-126. Remove our fork of storage-api. (omalley)
Fixes #80";non_debt
fallback;non_debt
"Render the /threadz page using plain text.
----Release Notes----
[]
-------------
MOE_MIGRATED_REVID=114122363";non_debt
"[SPARK-21633][ML][PYTHON] UnaryTransformer in Python
## What changes were proposed in this pull request?
Implemented UnaryTransformer in Python.
## How was this patch tested?
This patch was tested by creating a MockUnaryTransformer class in the unit tests that extends UnaryTransformer and testing that the transform function produced correct output.
Closes #18746 from ajaysaini725/AddPythonUnaryTransformer.";non_debt
"[FLINK-10435][yarn] Fix client sporadically hangs after Ctrl + C
This closes #10010";non_debt
"This commit adds support for invoking constructors through indy. To enable this an internal class MetaConstructor has been added to MetaClassImpl (for internal use only hopefully), also MetaClassImpl got a new method retrieveConstructor used only by indy. The bootstraping method has been unified for all types of calls, so that constructor invocations as well as normal method calls can go through the same bootstrapper. In InvokeDynamicWriter a null adapter was used to show an constrcutor path to be easily be able to reuse the InvocationWriter infrastructor. Also a ""callsite name"" was introduced, since the verifier does not allow <init> method names in invokedynamic based invocations. CachedConstructor got an getCachedClass to be able to get to the direct call information to enable indy to unreflect. To support the bean constructor with properties a method setBeanProperties has been added to IndyInterface as a handle callback.";non_debt
Start a standalone cluster locally.;non_debt
AMBARI-9043. Views: Pig, update ember.js version, minor bugfixes (alexantonenko);non_debt
fixed race condition in admin creation - thanks Matt Goodall;non_debt
[Release] Update versions for 1.0.0-SNAPSHOT;non_debt
treat subject Node uniformly through PF test in Indexes;non_debt
This closes #3227: Fixes pb2.py path in gitignore;non_debt
Update POM <name> fields to align with other Jena modules;non_debt
Merge branch 'trafodion-2356' of github.com:selvaganesang/incubator-trafodion into trafodion-2356;non_debt
HIVE-1498. support IDXPROPERTIES on CREATE INDEX;non_debt
AMBARI-10470. Alert Notifications : save button is disabled when creating alert notification. (akovalenko);non_debt
orderItemId;non_debt
Merge branch 'cassandra-1.1' into trunk;non_debt
"Update references to web sites, git repositories, jira, mailing lists, travis CI now that [INFRA-8413] is fixed.
Update references to jira cases from OPTIQ-xxx to CALCITE-xxx.
Expand instructions in HOWTO for publishing a release.";non_debt
fix to make flux compatible with Storm versions earlier than 0.9.3;non_debt
"Merge pull request #1057 from pagespeed/jmarantz-2-pass-ipro
suppress errors on new 2-pass and 3-pass ipro tests";non_debt
"Merge pull request #405 from zliu41/master
fix bug in AvroSchemaFieldRemover";non_debt
"Merge pull request #350 from metamx/topN
Approximate TopN Query";non_debt
Fix ContentHandler.startPrefixMapping bug;non_debt
javadoc: use 'a href' for links after @see;non_debt
release 3.6.1;non_debt
Merge branch 'v0.7.1-dev' into v0.7.1-release;non_debt
[CXF-4818] Fix problems with adding soap:Header things to existing MessageMode Provider/Dispatch;non_debt
Merge branch 'dev' of ssh://github.com/shardingjdbc/sharding-jdbc into dev;non_debt
Merge branch 'tp31' into tp32;non_debt
revert a change for bindSetEntry;non_debt
"Merge pull request #2083 from jlahoda/avoid-assert-in-scope
Preventing AssertionError from javac due to use of incorrect scope on��_";non_debt
CAMEL-8614: Align mvn coordinate for Camel components for linkedin and olingo2;non_debt
"Merge branch 'master' into ui-plugins
Conflicts:
	ui/index.jsp";non_debt
Added listVsphereStoragePoliciesCmd;non_debt
Regen;non_debt
fix recovery checkpoint;non_debt
Regenrated the files using thrift-0.9.2 and fixed some bugs introduced by upmerging.;non_debt
Add ability to filter brokers based on their build version (#397);non_debt
This closes #115;non_debt
ENGR-1703 Set lat and long on mock location.;non_debt
GROOVY-2428: Provide a reverseEach method for arrays;non_debt
[FLINK-17800][rocksdb] Support customized RocksDB write/read options and use RocksDBResourceContainer to get them;non_debt
"Fix NPE when writetime() or ttl() are nested inside a fn call
Patch by Tyler Hobbs reviewed by Benjamin Lerer for CASSANDRA-8451";non_debt
Merge remote-tracking branch 'origin/3.x-dev' into 3.x-dev;non_debt
SPOI-4379 #fixes Identify the terminated state differently from uninitialized state;non_debt
Added rat exclude for patchprocess for precommit build;non_debt
Kernel Machines goes new installer and install-check.;non_debt
CAMEL-13723 - Camel-AWS: Harmonize how to specify region in all the components, MSK;non_debt
Merge remote-tracking branch 'origin/gg-8081' into gg-8081;non_debt
"AMBARI-2510. Can't complete install after executing ""ambari-server setup-https"" (Dmitry Sen via mahadev)";non_debt
Change to ascii mode;non_debt
AMBARI-4523. Host registering failure from primary/agent os checking on centos6 (aonishuk);non_debt
Upgrade Kubernetes/Openshift client to version 1.4.7;non_debt
delete tearDown();non_debt
Merge branch 'dev-2.0.0' of https://github.com/ecomfe/echarts into dev-2.0.0;non_debt
AMBARI-6450. Changes to YARN configs require restarting Oozie (aonishuk);non_debt
review fix;non_debt
Merge remote-tracking branch 'upstream/dev' into dev;non_debt
"Merge pull request #2150 from himanshug/emit_query_bytes
emit query/bytes metric";non_debt
Reverted AbstractJoseConsumer/Producer with JwsHeader/JweHeader changes;non_debt
"Merge pull request #1228 from jbonofre/KARAF-6885
[KARAF-6885] Upgrade to Hibernate 5.4.22.Final";non_debt
Nesed Jar Files are also added to class path for assembler instantiation.;non_debt
"Add StoreParams arguiments to many methods.
Separate out StoreParamsConst.";non_debt
Add MoreFutures utility;non_debt
Merge branch 'master' into CoreNetworkAndScriptingAPI;non_debt
CAMEL-4643: buildingstools now use camel-parent as parent pom;non_debt
"AMBARI-15456. Manual Kerberos: JS error on clicking next button of ""Configure Identities page"" on Add Service wizard (alexantonenko)";non_debt
back protected;non_debt
"[BEAM-2556] Add client-side throttling.
This closes #3507";non_debt
added server resources;non_debt
IMetricsConsumer handles data points in batches.;non_debt
Merge branch 'ios-feature-20160706' of https://github.com/alibaba/weex into ios-feature-20160706;non_debt
 [KARAF-6112] Fix encoding in SshTerminal to works on Windows;non_debt
added server resources;non_debt
Add missing spring boot tests;test_debt
MINOR: Remove ignored tests that hang, added new versions for EOS tests (#5666);test_debt
"add kinesis lag metric (#9509)
* add kinesis lag metric
* fixes
* heh
* do it right this time
* more test
* split out supervisor report lags into lagMillis, remove latest offsets from kinesis supervisor report since always null, review stuffs";test_debt
temporary test code;test_debt
AcidPtr: Tweaks tests to be a bit more robust.;test_debt
"Fixes and tests related to the Indexer process. (#10631)
* Fixes and tests related to the Indexer process.
Three bugs fixed:
1) Indexers would not announce themselves as segment servers if they
   did not have storage locations defined. This used to work, but was
   broken in #9971. Fixed this by adding an ""isSegmentServer"" method
   to ServerType and updating SegmentLoadDropHandler to always announce
   if this method returns true.
2) Certain batch task types were written in a way that assumed ""isReady""
   would be called before ""run"", which is not guaranteed. In particular,
   they relied on it in order to initialize ""taskLockHelper"". Fixed this
   by updating AbstractBatchIndexTask to ensure ""isReady"" is called
   before ""run"" for these tasks.
3) UnifiedIndexerAppenderatorsManager did not properly handle complex
   datasources. Introduced DataSourceAnalysis in order to fix this.
Test changes:
1) Add a new ""docker-compose.cli-indexer.yml"" config that spins up an
   Indexer instead of a MiddleManager.
2) Introduce a ""USE_INDEXER"" environment variable that determines if
   docker-compose will start up an Indexer or a MiddleManager.
3) Duplicate all the jdk8 tests and run them in both MiddleManager and
   Indexer mode.
4) Various adjustments to encourage fail-fast errors in the Docker
   build scripts.
5) Various adjustments to speed up integration tests and reduce memory
   usage.
6) Add another Mac-specific approach to determining a machine's own IP.
   This was useful on my development machine.
7) Update segment-count check in ITCompactionTaskTest to eliminate a
   race condition (it was looking for 6 segments, which only exist
   together briefly, until the older 4 are marked unused).
Javadoc updates:
1) AbstractBatchIndexTask: Added javadocs to determineLockGranularityXXX
   that make it clear when taskLockHelper will be initialized as a side
   effect. (Related to the second bug above.)
2) Task: Clarified that ""isReady"" is not guaranteed to be called before
   ""run"". It was already implied, but now it's explicit.
3) ZkCoordinator: Clarified deprecation message.
4) DataSegmentServerAnnouncer: Clarified deprecation message.
* Fix stop_cluster script.
* Fix sanity check in script.
* Fix hashbang lines.
* Test and doc adjustments.
* Additional tests, and adjustments for tests.
* Split ITs back out.
* Revert change to druid_coordinator_period_indexingPeriod.
* Set Indexer capacity to match MM.
* Bump up Historical memory.
* Bump down coordinator, overlord memory.
* Bump up Broker memory.";test_debt
Test more graph ops and skipStale;test_debt
Disable flaky test test_conv in gluon (#11507);test_debt
Polished camel-ftp. Added missing unit test. Trying to close Apache FTP Server so Bamboo is happy. Better handling of exception thrown during ftp consumer if its stopping etc.;test_debt
Adding some more SAML SSO tests;test_debt
"fill out missing test coverage for druid-datasketches postaggs (#9730)
* fill out missing test coverage for druid-datasketches postaggs
* fixup
* fixup merge
* oops
* oops again";test_debt
mark test slow for now, can take nearly a minute;test_debt
    #1689: Enhance the test coverage part-10 : dubbo-plugin module (#1976);test_debt
LUCENE-7099: improve test to exercise searchAfter;test_debt
hack broken test to not waste hours of jenkins time;test_debt
Polished and fixed test on slow CI server.;test_debt
Merge pull request #10999: [BEAM-9345] Fix source of test flakiness in FlinkSubmissionTest;test_debt
Added an unit test based on a stackoverflow question;test_debt
"Fix the flakiness of OfflineClusterIntegrationTest (#1700)
With multiple servers, there is no way to check and guarantee that all servers get all segments reloaded, which cause the flakiness of the tests.
To fix that, in OfflineClusterIntegrationTest, only start one server.
Added a MultiNodesOfflineClusterIntegrationTest to keep the same coverage for multiple brokers and multiple servers.";test_debt
"Changed some spark-gremlin tests to integration tests.
This change cuts the build time in about half on my system. Dicussed here https://lists.apache.org/thread.html/7a37a3967ad15e8cd30a2bc29e15bf266f44df040f482f94e09b1e8e@%3Cdev.tinkerpop.apache.org%3E CTR";test_debt
"SAMZA-1711: Re-enable existing standalone integration tests.
**Changes:**
* Enable all existing standalone integration tests except `TestZkStreamProcessorSession`(`TestZkStreamProcessorSession` is flaky. It spawns `x` StreamProcessors and kills one StreamProcessor through zookeeper session expiration. Sleeps for 5 seconds and proceeds to do validation. If the rebalancing phase takes longer the sleep time, validation fails).
* Remove zookeeper unavailable unit test from LocalApplicationRunner(Race condition in zookeeper shutdown fails other tests). The deleted test will be added back in a separate test class.
* Increase zookeeper server minimum session timeout from 6 seconds to 120 seconds.
* Add assertions to validate if kafka topics setup were successful before the unit tests.
**Validation:**
Verified by running the following script on top of this patch in master branch.
**Result:**
Closes #515 from shanthoosh/turn_all_integration_tests_on";test_debt
Unskip skipped tests;test_debt
"Add proper closing of S3PinotFS and S3Client in S3PinotFSTest. (#5287)
1. Added a tearDown() method for propoer un-initialization.
2. Changed the annotation from @BeforeMethod to @BeforeClass, as it only
   needs to be done once.
3. Temporarily disabling the test as it seems to give the following error in our environment, that is blocking this while we figure out the root cause.
   23:59:48.761 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter -
***************************
APPLICATION FAILED TO START
***************************
Description:
Web server failed to start. Port 1947 was already in use.
Action:
Identify and stop the process that's listening on port 1947 or configure this application to listen on another port.";test_debt
"[SPARK-24123][SQL] Fix precision issues in monthsBetween with more than 8 digits
## What changes were proposed in this pull request?
SPARK-23902 introduced the ability to retrieve more than 8 digits in `monthsBetween`. Unfortunately, current implementation can cause precision loss in such a case. This was causing also a flaky UT.
This PR mirrors Hive's implementation in order to avoid precision loss also when more than 8 digits are returned.
## How was this patch tested?
running 10000000 times the flaky UT
Closes #21196 from mgaido91/SPARK-24123.";test_debt
"[BEAM-5709] Fix flaky tests in BeamFnControlServiceTest.
See the Jira issue for a description of the cause of the flakiness. This attempts to fix the issue by waiting a sufficiently long time for any actions that rely on the server shutdown to finish.";test_debt
Ignore new test that's not completely accurate yet.;test_debt
HDFS-3894. QJM: testRecoverAfterDoubleFailures can be flaky due to IPC client caching. Contributed by Todd Lipcon.;test_debt
SOLR-12923: Harden TestSimNodeLostTrigger#testTrigger.;test_debt
"GEODE-8211: fix flaky shutdown test (#5209)
The problem was that the instance variable being set by one thread and read by another was not volatile.";test_debt
"Remove doubleNL test that was not valid
DFDL-721";test_debt
"[tests] Try to improve CI test stability
Squashes the following commits:
  Possible fix for: https://s3.amazonaws.com/archive.travis-ci.org/jobs/110235128/log.txt
This closes #1676.";test_debt
"Added schemas and validators to Config
Details:
* For every Config there is a schema of type Object named with the
  _SCHEMA suffix (e.g., TOPOLOGY_WORKERS_SCHEMA)
* For simple Classes (String, Number, Boolean), just the Class is
  sufficient for the schema's value
* For other Classes, instances of the FieldValidator interface are used.
* FieldValidator declares a method to validate the field and a method to
  return a plain-language description of the criteria for the user.
Status: Compiles, but not tested.  Nothing makes use of the schemas yet.";test_debt
"Merge pull request #11401 from ibzib/performance-region
[BEAM-9744] Add missing region option to py perf tests.";test_debt
Initial check-in of APIs for multiple/related supported and incremental replication of only changed attachments. Needs more far more testing and to be hooked up the replicator.;test_debt
"[FLINK-20679][tests] Remove unstable test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering
The test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering is no longer needed because the scheduling
part is coveredy by DefaultSchedulerTest.restartVerticesOnSlotAllocationTimeout which ensures that vertices
are restarted on allocation timeouts. The allocation timeout part should be covered by
PhysicalSlotRequestBulkCheckerImplTest.testUnfulfillableBulkIsCancelled which ensures that PhysicalSlotRequestBulks
are timed out after a configured allocation timeout.
This closes #14448.";test_debt
    HBASE-19940 TestMetaShutdownHandler flakey ADDENDUM: yet more debug;test_debt
"ZEPPELIN-377 CI hanging on ./testing/startSparkCluster.sh 1.4.0 2.3
Address https://issues.apache.org/jira/browse/ZEPPELIN-377.
This patch change spark package download location from apache archive to mirror, to download in 10min.
Also add missing test for 1.5.1 and change test version from 1.4.0 to 1.4.1
Closes #380 from Leemoonsoo/fix_spark_test and squashes the following commits:
142583a [Lee moon soo] Add test for 1.5.1
b8323e6 [Lee moon soo] Use mirror for 1.3.x and later version of spark";test_debt
Disable two flaky tests (BEAM-8035, BEAM-9164);test_debt
"HBASE-24479: Deflake TestCompaction#testStopStartCompaction (#1820)
Polling of active compaction count is racy. Tightened the asserts
to be more reliable.";test_debt
"[SPARK-15783][CORE] still some flakiness in these blacklist tests so ignore for now
## What changes were proposed in this pull request?
There is still some flakiness in BlacklistIntegrationSuite, so turning it off for the moment to avoid breaking more builds -- will turn it back with more fixes.
## How was this patch tested?
jenkins.
Closes #13528 from squito/ignore_blacklist.";test_debt
Delete duplicated test class TestZkCallbackHandlerLeak.;test_debt
"GEODE-5036: Make ""enable-chunk-handler-thread"" = ""false"" default (#292)
* Sdded new integration test for chunkhandler
* Delete test adding no value
* Changing 'disable-chunk-handler-thread' to 'enable-chunk-handler-thread'";test_debt
Temporarily removed test.  Need to rebuild with plugin structure.;test_debt
lenet example (not tested);test_debt
"[hotfix] Harden RocksDBAsyncSnapshotTest#testCancelFullyAsyncCheckpoints
Depending on RocksDBOptions#TIMER_SERVICE_IMPL we have to adapt the testCancelFullyAsyncCheckpoints wrt
how many checkpointing streams we skip.";test_debt
Hive: Flaky test testScanTable (#1817) (#1824);test_debt
"Merge pull request #3060 from apache/prototype/fdb-layer-ebtree-speedy-tests
Speed up ebtree test suite without losing coverage";test_debt
Fix flaky comparison in log_handler_test.py;test_debt
avoid unnecessary runs of the unit test cases;test_debt
"LTR Test Hardening:
1) use per-method state isolation in several tests...
This helps prevent failures in one test to allow persisted date to leak into other test methods,
as well as ensuring that these tests play nicely with -Dtests.iters > 1
2) TestRerankBase cleanup to eliminate unnecessary extra SolrCore (that was being leaked)";test_debt
Remove fake test again (it's been tested with an empty m2 repository). Will trigger the build on Continuum;test_debt
"Add more tests to verify fix for DFDL-471 -
""Literal (non-entity) whitespace should not be acceptable
within certain properties""
DFDL-471";test_debt
"Initial workaround for JENA-820
Currently only works correctly when the output is line based, need to
add more test cases and research further into how to implement this for
block and whole file based modes.";test_debt
"BigQueryIO.read().fromQuery() improvements
- Makes it use a randomly generated query job ID, to make the source splitting retriable
- Fixes bugs in handling of query priority. The enum rename is a backwards incompatible change per se, but this feature never worked, so there's not much to be compatible with.
- Removes vacuous tests of priority setting (it only makes sense for queries, but was - vacuously - tested for tables)";test_debt
Increase test coverage of ToStringBuilder class to 100%;test_debt
"Lin. Regression: Conforms to package manager. Added more testing. Changed student_t_cdf() to accept signed integer for argument ""nu"" (because PostgreSQL does not have unsigned).";test_debt
HIVE-11946: TestNotificationListener is flaky (Jimmy, reviewed by Sergio);test_debt
"improved coverage for package table (#3201)
* test case added for TableMetas and TableMetaData
* 1. remove ok, e.g. instead of assertGetOk, use assertGet
2. instead of Lists.newArrayList(), use Collections.singleton
* 1. remove ok, e.g. instead of assertGetOk, use assertGet
2. instead of Lists.newArrayList(), use Collections.singletonList";test_debt
Added missing Spring Boot tests.;test_debt
Included the necessary Spring Boot tests that were missing.;test_debt
Fixed the issue by adding the missing Spring Boot tests.;test_debt
Addressed the problem by incorporating the required Spring Boot tests that were previously omitted.;test_debt
Rectified the situation by including the missing Spring Boot tests.;test_debt
Include the absent spring boot tests;test_debt
Add the tests that were missing for spring boot;test_debt
Incorporate the spring boot tests that were overlooked;test_debt
MINOR: Removed ignored tests that hang and added new versions for EOS tests (#5666).;test_debt
Refactored the code by removing ignored tests that were causing hangs and introduced new versions for EOS tests (#5666).;test_debt
Addressed the issue by removing ignored tests that were leading to hanging and incorporated new versions for EOS tests (#5666).;test_debt
Rectified the problem by excluding ignored tests that were causing hangs and integrated updated versions for EOS tests (#5666).;test_debt
Fixed the minor issue by eliminating ignored tests that were resulting in hanging and included new versions for EOS tests (#5666).;test_debt
Eliminate the ignored tests that result in hanging and introduce updated versions for EOS tests;test_debt
Remove the hanging ignored tests and add new versions for EOS tests;test_debt
Exclude the ignored tests causing hanging and introduce new versions for EOS tests;test_debt
"Added a Kinesis lag metric (#9509).
Implemented a new metric for measuring lag in Kinesis.
Addressed some fixes related to the Kinesis lag metric.
Corrected an issue with the implementation of the Kinesis lag metric.
Expanded the test coverage for the Kinesis lag metric.
Refactored the supervisor report lags into lagMillis, removed unnecessary latest offsets from the Kinesis supervisor report, and conducted a thorough review.";test_debt
"Added a new metric for measuring the lag in Kinesis (#9509).
Implemented a Kinesis lag metric to track the lagging data.
Resolved issues and improved the Kinesis lag metric.
Made necessary adjustments to ensure the accuracy of the Kinesis lag metric.
Enhanced the test suite to cover various scenarios for the Kinesis lag metric.
Refactored the supervisor report to separate lag measurements in milliseconds, removed unused latest offsets from the Kinesis supervisor report, and conducted a comprehensive review.";test_debt
"Included a new metric for monitoring Kinesis lag (#9509).
Introduced a Kinesis lag metric to measure data latency.
Fixed issues and fine-tuned the Kinesis lag metric.
Implemented the Kinesis lag metric correctly this time.
Performed additional testing for improved accuracy.
Refactored the supervisor report to isolate lag measurements in milliseconds, eliminated irrelevant latest offsets from the Kinesis supervisor report, and conducted a thorough review.";test_debt
"Implemented a Kinesis lag metric to track the latency of data (#9509).
Made necessary adjustments to accurately measure the lag in Kinesis.
Resolved issues and improved the Kinesis lag metric implementation.
Enhanced the test suite to cover various scenarios and ensure the reliability of the Kinesis lag metric.
Separated the supervisor report into lagMillis to measure latency, removed the unused latest offsets from the Kinesis supervisor report, and conducted a comprehensive review.";test_debt
"Introduced a new metric to measure the lag in Kinesis streams (#9509).
Addressed issues and refined the Kinesis lag metric implementation.
Revised the Kinesis lag metric to ensure accurate measurements.
Expanded the test suite to cover additional scenarios for the Kinesis lag metric.
Refactored the supervisor report to separate lag measurements in milliseconds, removed redundant latest offsets from the Kinesis supervisor report, and conducted a comprehensive review.";test_debt
"""Introduce kinesis lag metric to the system (#9509)

Implement the addition of kinesis lag metric
Address various bug fixes
Enhance implementation for better performance
Conduct additional testing
Separate supervisor report lags into lagMillis
Remove latest offsets from kinesis supervisor report as they are always null
Review and refine the changes""";test_debt
"Add a metric for Kinesis lag (#9509)
* Introduce a new metric for measuring Kinesis lag
* Fix issues
* Address the problem correctly this time
* Add additional tests
* Separate supervisor report lags into lagMillis, remove latest offsets from Kinesis supervisor report as they are always null, review changes";test_debt
"Add a Kinesis lag metric to the system
Include fixes for the Kinesis lag metric implementation
Address issues related to the Kinesis lag metric
Make necessary corrections to the Kinesis lag metric implementation
Perform additional testing for the Kinesis lag metric
Separate supervisor report lags into lagMillis and remove latest offsets from the Kinesis supervisor report
Review and refine the changes made to the Kinesis lag metric";test_debt
Temporary test code (for testing purposes only).;test_debt
Temporary code used for testing.;test_debt
Test code that is meant for temporary usage.;test_debt
Code snippet used as a temporary test.;test_debt
Temporary code for running tests.;test_debt
Temporary test code snippet for testing purposes;test_debt
Temporary code snippet for testing purposes;test_debt
Temporary code snippet for testing purposes;test_debt
AcidPtr: Improved the robustness of tests by making some tweaks.;test_debt
AcidPtr: Made tests more resilient by implementing some adjustments.;test_debt
AcidPtr: Enhanced the reliability of tests through minor tweaks.;test_debt
AcidPtr: Refined the test cases to increase their robustness.;test_debt
AcidPtr: Adjusted the tests for better resilience and reliability.;test_debt
AcidPtr: Enhancements made to increase the robustness of tests.;test_debt
AcidPtr: Improvements made to enhance the reliability of tests.;test_debt
AcidPtr: Modifications made to make the tests more resilient.;test_debt
"Bug fixes and test enhancements related to the Indexer process (#10631).
Addressed three specific bugs:

Fixed an issue where Indexers would not announce themselves as segment servers if they did not have storage locations defined. This was caused by a previous change and has now been resolved by introducing an ""isSegmentServer"" method and updating the SegmentLoadDropHandler accordingly.
Rectified a problem with certain batch task types that relied on the ""isReady"" method being called before ""run"". This assumption was not guaranteed, so the AbstractBatchIndexTask has been updated to ensure ""isReady"" is called before ""run"" for these tasks.
Resolved an error in handling complex datasources by introducing DataSourceAnalysis and making necessary adjustments in the UnifiedIndexerAppenderatorsManager.
Test-related changes include:
Added a new configuration file, ""docker-compose.cli-indexer.yml"", to spin up an Indexer instead of a MiddleManager.
Introduced the ""USE_INDEXER"" environment variable to determine whether to start an Indexer or a MiddleManager using docker-compose.
Duplicated all jdk8 tests and executed them in both MiddleManager and Indexer mode.
Made various adjustments to enhance error detection in Docker build scripts.
Optimized integration tests for improved speed and reduced memory usage.
Implemented an additional method to determine the machine's own IP on Mac-specific environments.
Updated the segment-count check in ITCompactionTaskTest to resolve a race condition.
Javadoc updates include:
Added clarifying comments to the AbstractBatchIndexTask regarding the initialization of taskLockHelper.
Clarified in the Task javadocs that ""isReady"" is not guaranteed to be called before ""run"".
Improved deprecation messages in ZkCoordinator and DataSegmentServerAnnouncer.
In addition, the commit includes fixes to the stop_cluster script, adjustments to test and documentation files, additional tests and test adjustments, splitting ITs into separate files, reverting a change to druid_coordinator_period_indexingPeriod, and memory-related updates for various components.";test_debt
"Fixes and enhancements related to the Indexer process (#10631).
Addressed three bugs related to Indexer functionality and introduced corresponding tests.
Bug 1: Indexers were not announcing themselves as segment servers if storage locations were not defined. This was fixed by adding the ""isSegmentServer"" method to ServerType and updating SegmentLoadDropHandler to always announce when this method returns true.
Bug 2: Certain batch task types assumed that ""isReady"" would be called before ""run"", causing issues with task initialization. AbstractBatchIndexTask was updated to ensure ""isReady"" is called before ""run"" for these tasks.
Bug 3: UnifiedIndexerAppenderatorsManager did not handle complex datasources correctly. Introduced DataSourceAnalysis to address this issue.
Test changes were made to support Indexer mode and improve test coverage and performance. Docker-compose configurations were updated, additional tests were added, and various adjustments were made to the build scripts and integration tests.
Javadoc updates were made to clarify certain methods and deprecation messages.
Additionally, improvements were made to the stop_cluster script, sanity checks, hashbang lines, and memory configurations for different components of the system.";test_debt
"Enhancements and bug fixes for the Indexer process (#10631) were implemented, including improvements to the Indexer functionality and related tests.

Three bugs were fixed, addressing issues such as Indexer announcement, batch task initialization, and handling complex datasources.
Test changes were made to support Indexer mode, improve test coverage, and enhance test performance.
Various adjustments were made to the build scripts, integration tests, and memory configurations for different components.
Javadoc updates were performed to provide clearer explanations for certain methods and deprecation messages.
Additionally, improvements were made to the stop_cluster script, sanity checks, hashbang lines, and memory allocations for specific components.";test_debt
"Improvements and bug fixes for the Indexer process (#10631) were implemented, focusing on enhancing functionality and addressing issues in the codebase.

Three bugs were resolved, including fixing Indexer announcement behavior, ensuring proper initialization of batch tasks, and handling complex datasources correctly.
Test changes were made to support Indexer mode, duplicate and run tests for both MiddleManager and Indexer, and optimize test execution and resource usage.
Adjustments were made to the Docker build scripts, integration tests, and memory allocations for different components to improve build speed and resource utilization.
Javadoc updates were performed to provide clearer explanations and deprecation messages for relevant classes and methods.
The stop_cluster script was fixed, sanity checks were improved, and hashbang lines were corrected.
Additional tests were added, and adjustments were made to existing tests for better coverage and accuracy.
Some configurations for Indexer, Historical, Coordinator, and Broker components were fine-tuned for optimal performance and resource allocation.




User
give me 3 more rephrased results";test_debt
"The commit (#10631) includes several improvements and bug fixes for the Indexer process. Here are three more rephrased results:

The update addresses three specific bugs: fixing Indexer announcement behavior, ensuring proper initialization of batch tasks, and handling complex datasources accurately.
Test-related changes introduce a new configuration for running the Indexer instead of the MiddleManager, duplicate tests to cover both modes, and optimize integration tests for speed and memory usage.
Various adjustments were made to the Docker build scripts, improving error handling, optimizing resource utilization, and enhancing build efficiency.
Please note that the above rephrased results are for reference only and may not capture the complete context or details of the original commit message.";test_debt
"Fixes and tests implemented for the Indexer process. (#10631)

Addressed several bugs and conducted tests related to the Indexer process.
Three specific bugs were resolved:
Indexers were not announcing themselves as segment servers when they didn't have defined storage locations. This functionality was previously working but broke in #997The fix involved adding an ""isSegmentServer"" method to ServerType and updating SegmentLoadDropHandler to always announce if this method returns true.
Certain batch task types were written with an assumption that ""isReady"" would be called before ""run"", which was not guaranteed. In particular, they relied on it to initialize ""taskLockHelper"". The update in AbstractBatchIndexTask ensured that ""isReady"" is always called before ""run"" for these tasks.
The UnifiedIndexerAppenderatorsManager didn't handle complex datasources properly. A fix was made by introducing DataSourceAnalysis.
Changes in tests included:
Introduction of a new ""docker-compose.cli-indexer.yml"" configuration that launches an Indexer instead of a MiddleManager.
Implementation of an ""USE_INDEXER"" environment variable to determine whether docker-compose will start an Indexer or a MiddleManager.
Duplication of all JDK8 tests and execution in both MiddleManager and Indexer modes.
Various adjustments to improve error handling in Docker build scripts.
Various adjustments to enhance the speed and reduce memory usage in integration tests.
Addition of another Mac-specific approach to determine a machine's own IP.
Update of the segment-count check in ITCompactionTaskTest to eliminate a race condition.
Updates in Javadoc included:
Added clarifying documentation in AbstractBatchIndexTask regarding the initialization of taskLockHelper.
Clarified that ""isReady"" is not guaranteed to be called before ""run"" in the Task class.
Provided clarifications in the Javadoc for ZkCoordinator and DataSegmentServerAnnouncer regarding deprecation.
Additional changes involved fixing the stop_cluster script, sanity check, and hashbang lines. Test and documentation adjustments were made, along with additional tests and adjustments. ITs were split back out, a change to druid_coordinator_period_indexingPeriod was reverted, and memory capacities for Indexer, Historical, Coordinator, and Overlord were adjusted.";test_debt
"Fixes and enhancements related to the Indexer process. 

Three bugs were addressed in this commit:
1) Indexers were not announcing themselves as segment servers if they didn't have storage locations defined. This issue was resolved by adding an ""isSegmentServer"" method to the ServerType class and updating the SegmentLoadDropHandler to always announce if this method returns true.
2) Certain batch task types were assuming that the ""isReady"" method would be called before ""run"", which was not guaranteed. The AbstractBatchIndexTask was modified to ensure that ""isReady"" is called before ""run"" for these tasks.
3) The UnifiedIndexerAppenderatorsManager did not handle complex datasources properly. To fix this, the DataSourceAnalysis class was introduced.

Several changes were made to the tests:
1) A new configuration file, ""docker-compose.cli-indexer.yml,"" was added to spin up an Indexer instead of a MiddleManager.
2) The ""USE_INDEXER"" environment variable was introduced to determine whether docker-compose starts an Indexer or a MiddleManager.
3) The jdk8 tests were duplicated and run in both MiddleManager and Indexer mode.
4) Various adjustments were made to the Docker build scripts to encourage fail-fast errors, speed up integration tests, and reduce memory usage.
5) Another approach to determine a machine's own IP was added for Mac-specific environments.
6) The segment-count check in ITCompactionTaskTest was updated to address a race condition.
   
Additionally, some updates were made to the Javadoc and fixes were applied to the stop_cluster script, sanity check in the script, and hashbang lines. Test and documentation adjustments were made, along with the addition of more tests. The ITs (Integration Tests) were split back out, and a change to druid_coordinator_period_indexingPeriod was reverted. Various memory settings were adjusted for different components of the system.
";test_debt
"""Fixes and tests made to address issues related to the Indexer process. (#10631)
* Fixes and tests implemented to resolve issues with the Indexer process.
This commit addresses three bugs:
1) Indexers were not announcing themselves as segment servers if they did not have storage locations defined. This functionality used to work but was broken in #997The fix includes adding an """"isSegmentServer"""" method to ServerType and updating SegmentLoadDropHandler to always announce when this method returns true.
2) Certain batch task types were written with an assumption that """"isReady"""" would be called before """"run,"""" which was not guaranteed. In particular, they relied on this order to initialize the """"taskLockHelper."""" The fix involves updating AbstractBatchIndexTask to ensure that """"isReady"""" is called before """"run"""" for these tasks.
3) UnifiedIndexerAppenderatorsManager did not handle complex datasources properly. To address this, DataSourceAnalysis was introduced.
Changes were also made to the tests:
1) Added a new """"docker-compose.cli-indexer.yml"""" configuration that sets up an Indexer instead of a MiddleManager.
2) Introduced the """"USE_INDEXER"""" environment variable to determine whether docker-compose starts an Indexer or a MiddleManager.
3) Duplicated all jdk8 tests and ran them in both MiddleManager and Indexer modes.
4) Various adjustments were made to encourage fail-fast errors in the Docker build scripts.
5) Various adjustments were made to speed up integration tests and reduce memory usage.
6) Added another Mac-specific approach to determine a machine's own IP.
7) Updated the segment-count check in ITCompactionTaskTest to eliminate a race condition.
Javadoc updates were made as well:
1) Added clarifying javadocs to determineLockGranularityXXX methods in AbstractBatchIndexTask.
2) Clarified that """"isReady"""" is not guaranteed to be called before """"run"""" in the Task javadocs.
3) Clarified deprecation messages in ZkCoordinator and DataSegmentServerAnnouncer.
The commit also includes fixes to the stop_cluster script, sanity checks in scripts, hashbang lines, and test and documentation adjustments. Additional tests were added, and adjustments were made for existing tests. ITs were split back out, a change to druid_coordinator_period_indexingPeriod was reverted, and memory settings for Indexer, Historical, Coordinator, and Overlord were adjusted.""";test_debt
Increased the coverage of graph operations in the test suite and added support for skipStale functionality.;test_debt
Enhanced testing for additional graph operations and introduced skipStale option.;test_debt
Expanded the range of graph operations being tested and implemented skipStale feature.;test_debt
Improved the testing of various graph operations by incorporating skipStale functionality.;test_debt
Enhanced the test coverage for graph operations and introduced support for skipStale behavior.;test_debt
Performed additional tests on graph operations and implemented skipStale functionality.;test_debt
"Expanded the test coverage for various graph operations and introduced the ""skipStale"" functionality.";test_debt
"Expanded the test coverage for graph operations and introduced the ""skipStale"" functionality.";test_debt
Disabled the execution of the flaky test test_conv in the gluon module.;test_debt
Deactivated the flaky test test_conv in the gluon package.;test_debt
Temporarily disabled the execution of the unreliable test test_conv in gluon.;test_debt
Excluded the execution of the flaky test test_conv in the gluon module.;test_debt
Turned off the execution of the unstable test test_conv in the gluon package.;test_debt
"Disabled the flaky test ""test_conv"" in the Gluon module to improve test reliability.";test_debt
"Temporarily excluded the test case ""test_conv"" in the Gluon module due to its flaky nature.";test_debt
"Disabled the ""test_conv"" test in Gluon as it was causing intermittent failures and affecting the overall test stability.";test_debt
Improved the camel-ftp component by polishing its codebase. Added a missing unit test to ensure proper functionality. Implemented better exception handling during FTP consumer operations, specifically when stopping the consumer. Also made adjustments to properly close the Apache FTP Server instance for better compatibility with Bamboo.;test_debt
Enhanced the camel-ftp component by refining its implementation and addressing various aspects. Included a previously missing unit test to ensure comprehensive test coverage. Took steps to gracefully handle exceptions during FTP consumer operations, particularly when stopping the consumer. Additionally, improved the handling of the Apache FTP Server instance closure to ensure compatibility with Bamboo.;test_debt
Made several improvements to the camel-ftp component, focusing on enhancing its functionality and test coverage. Added a previously missing unit test to validate the expected behavior. Implemented more robust exception handling during FTP consumer operations, specifically when stopping the consumer. Also, optimized the closing process of the Apache FTP Server instance to ensure smooth integration with Bamboo.;test_debt
Updated and fine-tuned the camel-ftp component, addressing various areas for improvement. Included a new unit test that was missing to ensure thorough testing. Enhanced the exception handling mechanism during FTP consumer operations, taking into account scenarios such as stopping the consumer. Made adjustments to the closure process of the Apache FTP Server instance, ensuring proper compatibility with Bamboo.;test_debt
Refined the camel-ftp component by making necessary adjustments and additions. Introduced a missing unit test to cover the previously untested scenario. Implemented more robust exception handling during FTP consumer operations, including improved handling when the consumer is in the stopping phase. Furthermore, optimized the closure of the Apache FTP Server instance to meet the requirements of Bamboo.;test_debt
Improved the camel-ftp component by adding a missing unit test. Additionally, made refinements to better handle exceptions thrown during FTP consumer operations, especially when stopping the consumer. Also, made efforts to close the Apache FTP Server to ensure compatibility with Bamboo.;test_debt
Enhanced the camel-ftp component by addressing various aspects and adding a previously missing unit test. Made improvements to handle exceptions more effectively during FTP consumer operations, taking into account scenarios such as stopping the consumer. Also, ensured proper closure of the Apache FTP Server to maintain compatibility with Bamboo.;test_debt
Enhanced the functionality of camel-ftp by including a previously missing unit test. Implemented better exception handling during FTP consumer operations, specifically when the consumer is being stopped. Took measures to properly close the Apache FTP Server to ensure smooth integration with Bamboo.;test_debt
Including additional SAML SSO tests to the codebase.;test_debt
Expanding the scope of SAML SSO testing by incorporating more tests.;test_debt
Incorporating supplementary SAML SSO tests into the existing code.;test_debt
Integrating extra SAML SSO tests to enhance the testing coverage.;test_debt
Augmenting the number of SAML SSO tests for improved testing.;test_debt
Expanded the test suite for SAML SSO to include additional scenarios and edge cases. This ensures comprehensive coverage and validation of the SAML single sign-on functionality.;test_debt
Enhanced the SAML SSO tests with additional test cases to improve test coverage. These tests cover a wider range of scenarios to validate the functionality of SAML single sign-on.;test_debt
Enhanced the existing SAML SSO tests with new test cases to improve test coverage. These additional tests cover various aspects of the SAML single sign-on flow and help ensure the robustness of the implementation.;test_debt
"Completing the test coverage for druid-datasketches postaggs (#9730).

Completing the missing test coverage for postaggs in the druid-datasketches module.
Making necessary additions to the test coverage for druid-datasketches postaggs.
Addressing the missing test coverage for postaggs in the druid-datasketches module.
Fixing issues related to test coverage for druid-datasketches postaggs.
Merging fixes and improvements to the test coverage for druid-datasketches postaggs.
Correcting an error in the previous commit related to test coverage.
Rectifying an oversight in the test coverage for druid-datasketches postaggs.";test_debt
"Enhancing the test coverage for druid-datasketches postaggs (#9730).

Strengthening the existing test coverage for postaggs in the druid-datasketches module.
Improving the completeness of the test coverage for druid-datasketches postaggs.
Expanding the test coverage to encompass all aspects of postaggs in the druid-datasketches module.
Addressing the gaps in the test coverage for druid-datasketches postaggs.";test_debt
"Completing the missing test cases for druid-datasketches postaggs (#9730).

Adding the necessary test cases that were previously missing for postaggs in the druid-datasketches module.
Filling in the gaps in the test cases for druid-datasketches postaggs.
Ensuring comprehensive test coverage by including the previously omitted test cases for postaggs in the druid-datasketches module.
Rectifying the incomplete test coverage by incorporating the missing test cases for druid-datasketches postaggs.";test_debt
"Addressing the test coverage gaps for druid-datasketches postaggs (#9730).

Resolving the deficiencies in the test coverage for postaggs in the druid-datasketches module.
Dealing with the gaps in the test coverage by taking necessary actions for druid-datasketches postaggs.
Correcting the insufficient test coverage by handling the missing aspects of postaggs in the druid-datasketches module.
Making adjustments to ensure comprehensive test coverage for druid-datasketches postaggs.";test_debt
"Adding the required tests to cover druid-datasketches postaggs (#9730).

Including the essential tests needed to adequately cover postaggs in the druid-datasketches module.
Incorporating the necessary test scenarios to ensure proper coverage for druid-datasketches postaggs.
Appending the missing tests that are required for comprehensive coverage of postaggs in the druid-datasketches module.
Supplementing the existing tests with additional ones to achieve full coverage for druid-datasketches postaggs.";test_debt
"""Enhance test coverage for druid-datasketches postaggs (#9730)
* Improve test coverage for druid-datasketches postaggs by filling out missing test cases.
* Address minor issues and fix inconsistencies.
* Merge and resolve conflicts.
* Correct an oversight in the previous commit.
* Rectify another oversight that occurred during the development process.""";test_debt
"""Enhance test coverage for druid-datasketches postaggs (#9730)

Improve test coverage for druid-datasketches postaggs by filling out missing tests
Fix minor issues in the code
Resolve merge conflicts
Address a mistake in the implementation
Correct an oversight in the code""";test_debt
"""Enhanced test coverage for druid-datasketches postaggs (#9730)
* Expanded test coverage for druid-datasketches postaggs to ensure comprehensive testing.
* Fixed issues identified during testing.
* Resolved merge conflicts in the codebase.
* Addressed an oversight in the implementation.
* Fixed another issue that was identified during testing.""";test_debt
Marking the test as slow for the time being, as it may take close to a minute to complete.;test_debt
Temporarily flagging the test as slow due to its approximate one-minute execution time.;test_debt
Labeling the test as slow for now, as it may require nearly a minute to finish.;test_debt
Indicating that the test is currently considered slow, with an estimated execution time of around a minute.;test_debt
Making a note that the test is expected to take nearly a minute to complete and should be treated as a slow-running test for now.;test_debt
Temporarily mark test as slow due to extended execution time (nearly a minute);test_debt
Designate test as slow temporarily due to its prolonged execution time (nearly a minute);test_debt
Temporarily flag test as slow due to its extended runtime (close to a minute);test_debt
#1689: Improving test coverage for part-10 of the dubbo-plugin module (#1976).;test_debt
#1689: Boosting the test coverage for part-10 of the dubbo-plugin module (#1976).;test_debt
#1689: Expanding the test coverage for part-10 of the dubbo-plugin module (#1976).;test_debt
#1689: Enhancing the test coverage of part-10 in the dubbo-plugin module (#1976).;test_debt
#1689: Increasing the test coverage for part-10 of the dubbo-plugin module (#1976).;test_debt
Enhancement of test coverage in dubbo-plugin module (Part 10) - #1689 (#1976);test_debt
Improvement of test coverage in dubbo-plugin module - Part 10 (#1689) (#1976);test_debt
Enhance test coverage in dubbo-plugin module - Part 10 (#1689, #1976);test_debt
LUCENE-7099: Enhancing the test to improve coverage of searchAfter.;test_debt
LUCENE-7099: Refining the test to better exercise the searchAfter feature.;test_debt
LUCENE-7099: Improving the test to provide better coverage for searchAfter usage.;test_debt
LUCENE-7099: Enhancing the test to effectively test the searchAfter functionality.;test_debt
LUCENE-7099: Updating the test to include comprehensive testing of searchAfter.;test_debt
Improvement of test case to enhance searchAfter functionality - LUCENE-7099;test_debt
"""Enhancement of test case for improved searchAfter functionality - LUCENE-7099""";test_debt
"""Refinement of test coverage to better exercise searchAfter in LUCENE-7099""";test_debt
Making a temporary workaround for the broken test to avoid prolonged execution and resource utilization in Jenkins.;test_debt
Temporarily patching the broken test to minimize the time and resources consumed by Jenkins.;test_debt
Mitigating the impact of the broken test on Jenkins resources by applying a temporary fix.;test_debt
Implementing a temporary solution to bypass the broken test and prevent unnecessary burden on Jenkins resources.;test_debt
Adjusting the broken test to reduce the strain on Jenkins resources temporarily and expedite the build process.;test_debt
Temporary workaround for a broken test to avoid consuming excessive Jenkins resources;test_debt
Temporary fix for a test failure to prevent excessive resource usage in Jenkins;test_debt
Quick hack to bypass a broken test and save Jenkins execution time;test_debt
Refining and rectifying the test to address issues encountered on a slow CI server.;test_debt
Fine-tuning and resolving issues in the test to ensure compatibility with a slow CI server environment.;test_debt
Improving and rectifying the test to deliver reliable results on a slow CI server.;test_debt
Polishing and fixing the test to optimize its execution on a slow CI server.;test_debt
Enhancing and resolving issues in the test to ensure smooth execution on a slow CI server.;test_debt
Improved and fixed a test case to address slowness on the CI server.;test_debt
Refined and resolved issues with a test on a slow CI server.;test_debt
Optimized and resolved issues in a test to accommodate the slow CI server.;test_debt
Fine-tuned and addressed issues in a test to ensure smoother execution on the slow CI server.;test_debt
Merge pull request #10999: [BEAM-9345] Addressing the underlying issue causing test flakiness in FlinkSubmissionTest.;test_debt
Merge pull request #10999: [BEAM-9345] Rectifying the test flakiness problem in FlinkSubmissionTest.;test_debt
Merge pull request #10999: [BEAM-9345] Correcting the source of test instability in FlinkSubmissionTest.;test_debt
Merge pull request #10999: [BEAM-9345] Fixing the issue that led to test flakiness in FlinkSubmissionTest.;test_debt
Merged pull request #10999: [BEAM-9345] Resolved source of test instability in FlinkSubmissionTest.;test_debt
Merged changes from pull request #10999: [BEAM-9345] Addressed test flakiness in FlinkSubmissionTest.;test_debt
Pull request #10999 merged: [BEAM-9345] Fixed test instability in FlinkSubmissionTest.;test_debt
Pull request #10999 successfully merged: [BEAM-9345] Fixed source of test instability in FlinkSubmissionTest.;test_debt
Include a unit test based on a Stack Overflow question.;test_debt
Add a test case derived from a question on Stack Overflow.;test_debt
Incorporate a unit test that addresses a specific scenario raised in a Stack Overflow post.;test_debt
Implement a unit test inspired by a question from the Stack Overflow community.;test_debt
Added a unit test based on a question from Stack Overflow.;test_debt
Implemented a new test case inspired by a question on Stack Overflow.;test_debt
Included a unit test that replicates the scenario described in a Stack Overflow post.;test_debt
Resolving the flakiness of OfflineClusterIntegrationTest (#1700) by addressing segment reloading across multiple servers.;test_debt
Fixing test flakiness in OfflineClusterIntegrationTest (#1700) caused by incomplete segment reloading across multiple servers.;test_debt
Correcting the test flakiness in OfflineClusterIntegrationTest (#1700) by starting only one server and ensuring complete segment reloading.;test_debt
Resolving the issue of test flakiness in OfflineClusterIntegrationTest (#1700) by modifying server configuration to guarantee complete segment reloading.;test_debt
Fixing the flakiness problem in OfflineClusterIntegrationTest (#1700) by modifying server startup to ensure consistent segment reloading, and introducing MultiNodesOfflineClusterIntegrationTest for comprehensive coverage of multiple brokers and servers.;test_debt
"Resolved the issue of flakiness in the OfflineClusterIntegrationTest (#1700) by addressing the challenges related to segment reloading across multiple servers.
To ensure more reliable test results, modified the OfflineClusterIntegrationTest to start only one server instead of multiple servers.
Introduced a new test class, MultiNodesOfflineClusterIntegrationTest, to maintain the same level of coverage for scenarios involving multiple brokers and servers.";test_debt
"Resolved the flakiness issue in OfflineClusterIntegrationTest by addressing the challenge of ensuring all servers receive the necessary segment reloads.
Modified OfflineClusterIntegrationTest to start only one server, ensuring better test reliability.
Introduced MultiNodesOfflineClusterIntegrationTest to maintain test coverage for scenarios involving multiple brokers and servers, offering a comprehensive testing approach.";test_debt
Resolved the issue of flakiness in the OfflineClusterIntegrationTest (#1700) by addressing the challenge of ensuring all servers receive the required segment reloads. To mitigate this problem, the test now initiates a single server instead of multiple ones. Additionally, introduced the MultiNodesOfflineClusterIntegrationTest to maintain the desired coverage for scenarios involving multiple brokers and servers.;test_debt
Refactor specific Spark-Gremlin tests into integration tests, leading to approximately 50% reduction in build time on my personal setup. Further details discussed at: [link to the relevant Apache mailing list thread]. Changes approved through CTR (Commit Then Review) process.;test_debt
Optimize build time by converting certain Spark-Gremlin tests to integration tests. This modification results in around a 50% decrease in build duration on my local environment. Detailed discussion can be found at: [link to the Apache mailing list conversation]. Approval obtained through CTR approach.;test_debt
Improve build efficiency by transforming chosen Spark-Gremlin tests into integration tests. This adjustment significantly reduces build time by approximately 50% on my system. Relevant discussion available at: [link to the Apache mailing list thread]. Approved through the CTR process.;test_debt
Streamline build process by converting specific Spark-Gremlin tests to integration tests. This alteration substantially cuts down build time by around 50% on my personal setup. The details of the modification were discussed on the Apache mailing list: [link to the relevant thread]. Approved through the CTR approach.;test_debt
Enhance build speed by transitioning selected Spark-Gremlin tests to integration tests. This change results in a notable 50% reduction in build time on my local system. The discussion on this modification can be found at: [link to the Apache mailing list thread]. Approval obtained through the CTR process.;test_debt
Modified certain spark-gremlin tests to be categorized as integration tests, resulting in a significant reduction in build time on the system.;test_debt
Reclassified specific tests in spark-gremlin as integration tests, resulting in a notable improvement in build time on the system.;test_debt
Adjusted the classification of certain tests in spark-gremlin to be integration tests, resulting in a significant reduction in build time on the system.;test_debt
SAMZA-1711: Enabling the existing standalone integration tests, except for TestZkStreamProcessorSession due to flakiness. Also, removing the zookeeper unavailable unit test from LocalApplicationRunner to address a race condition. The minimum session timeout for the zookeeper server has been increased to 120 seconds. Additionally, assertions have been added to validate successful setup of Kafka topics before running the unit tests. This change has been validated by executing the script on top of the master branch with this patch. Closes #515 by shanthoosh/turn_all_integration_tests_on.;test_debt
SAMZA-1711: Restoring the functionality of the standalone integration tests and implementing necessary modifications. All existing standalone integration tests, except TestZkStreamProcessorSession, have been re-enabled. The zookeeper unavailable unit test in LocalApplicationRunner has been removed to resolve a race condition issue. The minimum session timeout for the zookeeper server has been adjusted from 6 seconds to 120 seconds. Furthermore, assertions have been introduced to validate the successful setup of Kafka topics before executing the unit tests. This commit has been validated by running the provided script on the master branch. Closes #515 by shanthoosh/turn_all_integration_tests_on.;test_debt
SAMZA-1711: Reinstating the standalone integration tests and introducing necessary changes. This commit enables all existing standalone integration tests, excluding TestZkStreamProcessorSession, which has shown flakiness. The zookeeper unavailable unit test has been removed from LocalApplicationRunner to address a race condition that affects other tests. The minimum session timeout for the zookeeper server has been increased from 6 seconds to 120 seconds. Additionally, assertions have been added to verify the successful setup of Kafka topics before executing the unit tests. The changes have been validated by running the provided script on the master branch. Closes #515 authored by shanthoosh/turn_all_integration_tests_on.;test_debt
SAMZA-1711: Reactivating the existing standalone integration tests and implementing relevant adjustments. All standalone integration tests, except TestZkStreamProcessorSession, have been re-enabled in this commit. The zookeeper unavailable unit test has been removed from LocalApplicationRunner due to a race condition impacting other tests. The minimum session timeout for the zookeeper server has been raised from 6 seconds to 120 seconds. Furthermore, assertions have been incorporated to validate the successful setup of Kafka topics prior to running the unit tests. The changes have been validated by executing the provided script on the master branch. This commit concludes #515, contributed by shanthoosh/turn_all_integration_tests_on.;test_debt
SAMZA-1711: Restoring the standalone integration tests and introducing necessary modifications. This commit re-enables all existing standalone integration tests, with the exception of TestZkStreamProcessorSession due to its flakiness. The zookeeper unavailable unit test has been removed from LocalApplicationRunner to resolve a race condition that affects other tests. The minimum session timeout for the zookeeper server has been increased to 120 seconds. Additionally, assertions have been added to validate the successful setup of Kafka topics before executing the unit tests. The provided script has been used to validate the changes on the master branch. Closes #515 by shanthoosh/turn_all_integration_tests_on.;test_debt
"SAMZA-1711: Re-enable existing standalone integration tests.
**Changes:**
* Activated all existing standalone integration tests, excluding `TestZkStreamProcessorSession` (which is known to be flaky). This test involves spawning multiple StreamProcessors, killing one through zookeeper session expiration, and validating the results. However, due to potential delays in the rebalancing phase, the validation process may fail if the sleep time is exceeded.
* Removed the zookeeper unavailable unit test from LocalApplicationRunner as it was causing race conditions in zookeeper shutdown, which in turn impacted other tests. The test will be reintroduced in a separate test class.
* Increased the minimum session timeout for the zookeeper server from 6 seconds to 120 seconds.
* Added assertions to validate the successful setup of kafka topics before running the unit tests.
**Validation:**
The changes have been verified by executing the provided script on top of this patch in the master branch.
**Result:**
This resolves #515, merging the changes from the branch ""shanthoosh/turn_all_integration_tests_on"".";test_debt
"SAMZA-1711: Re-enable existing standalone integration tests.
**Modifications:**
* Activated all existing standalone integration tests, except for `TestZkStreamProcessorSession` (which has flakiness issues). This specific test involves spawning multiple StreamProcessors, terminating one StreamProcessor through zookeeper session expiration, waiting for 5 seconds, and performing validation. If the rebalancing phase takes longer than the sleep time, the validation fails.
* Eliminated the zookeeper unavailable unit test from LocalApplicationRunner due to a race condition in zookeeper shutdown that affects other tests. The removed test will be reintroduced in a separate test class.
* Raised the minimum session timeout of the zookeeper server from 6 seconds to 120 seconds.
* Added assertions to ensure successful setup of Kafka topics before running the unit tests.
**Verification:**
The changes were validated by executing the provided script on top of this patch in the master branch.
**Outcome:**
This resolves #515 by shanthoosh/turn_all_integration_tests_on.";test_debt
"SAMZA-1711: Re-enable existing standalone integration tests.
**Summary of Changes:**
* Enabled all standalone integration tests except for `TestZkStreamProcessorSession`. This specific test is known to be flaky due to its reliance on ZooKeeper session expiration and rebalancing timing.
* Removed the zookeeper unavailable unit test from LocalApplicationRunner to resolve a race condition during zookeeper shutdown that was causing failures in other tests. This test will be reintroduced in a separate test class.
* Increased the minimum session timeout for the zookeeper server from 6 seconds to 120 seconds.
* Added assertions to validate the successful setup of Kafka topics before running the unit tests.
**Validation Process:**
The changes were verified by executing the provided script on top of this patch in the master branch.
**Result:**
The changes have been successfully merged and closed the issue #515 authored by shanthoosh.";test_debt
Re-enable the previously skipped tests.;test_debt
Remove test skipping and enable previously skipped tests.;test_debt
Unskip tests that were previously marked as skipped.;test_debt
Reinstate the previously skipped tests by removing the skip annotation.;test_debt
Enable tests that were previously excluded or skipped.;test_debt
Enable previously skipped tests to include them in the test suite.;test_debt
Enable previously excluded tests to ensure their inclusion in the test suite.;test_debt
Reinstate previously skipped tests to incorporate them into the test suite.;test_debt
"Add proper closing of S3PinotFS and S3Client in S3PinotFSTest (#5287)
Added a tearDown() method to ensure proper un-initialization of resources.
Changed the annotation from @BeforeMethod to @BeforeClass since it only needs to be executed once.
Temporarily disabled the test due to an error encountered in our environment. The error message indicates that the web server failed to start due to port 1947 already being in use. The test will remain disabled until the root cause of the issue is identified and resolved.";test_debt
Improve S3PinotFSTest (#5287) by changing the annotation from @BeforeMethod to @BeforeClass, as the setup only needs to be performed once.;test_debt
Temporarily disable a test in S3PinotFSTest (#5287) due to a specific error encountered in our environment. The error message indicates that the web server failed to start because port 1947 was already in use. Further investigation is required to determine and resolve the root cause.;test_debt
Ensure proper resource handling in S3PinotFSTest (#5287) by adding a tearDown() method for closing S3PinotFS and S3Client. Additionally, update the annotation from @BeforeMethod to @BeforeClass to optimize the setup process.;test_debt
Disable a test in S3PinotFSTest (#5287) temporarily due to an error encountered in our environment. The error indicates that the web server failed to start as port 1947 was already in use. We will investigate the issue further before re-enabling the test.;test_debt
"Add appropriate closing of S3PinotFS and S3Client in S3PinotFSTest for proper cleanup.
Introduce a tearDown() method to ensure proper un-initialization of resources.
Change the annotation from @BeforeMethod to @BeforeClass to execute the setup process only once.
Temporarily disable the test due to an error that occurs in the current environment, causing a port conflict.";test_debt
"""Implement proper closing of S3PinotFS and S3Client in S3PinotFSTest. (#5287)
Introduce a tearDown() method for appropriate cleanup and resource release.
Change the annotation from @BeforeMethod to @BeforeClass, as it only needs to be executed once.
Temporarily disable the test due to an error encountered in our environment. The error message indicates that port 1947 is already in use. We are investigating the root cause and will address it accordingly.
   Error Details:
   - Application failed to start.
   - Web server failed to start.
   - Port 1947 is already in use.
   - Action: Identify and stop the process using port 1947 or configure the application to use a different port.""";test_debt
"""Implement proper closing of S3PinotFS and S3Client in S3PinotFSTest. (#5287)
Introduce a tearDown() method to ensure appropriate un-initialization.
Change the annotation from @BeforeMethod to @BeforeClass since it only needs to be executed once.
Temporarily disable the test due to an error occurring in the environment where it is being executed. The error message indicates that port 1947 is already in use, and further investigation is required to determine the root cause.
   23:59:48.761 [main] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter -
***************************
APPLICATION FAILED TO START
***************************
Description:
Web server failed to start. Port 1947 was already in use.
Action:
Identify and stop the process that's listening on port 1947 or configure this application to listen on another port.""";test_debt
"[SPARK-24123][SQL] Resolve precision issues in monthsBetween function for more than 8 digits

What changes were proposed in this pull request?
The previous pull request, SPARK-23902, introduced the capability to retrieve more than 8 digits in the monthsBetween function. However, the current implementation resulted in precision loss when dealing with such cases. This also caused instability in unit tests.
To address this, this pull request aligns with Hive's implementation to avoid precision loss when returning more than 8 digits.

How was this patch tested?
The fix was validated by running the flaky unit test 10,000,000 times.

Closes #21196 by mgaido91/SPARK-24123.";test_debt
"[SPARK-24123][SQL] Rectify precision issues in monthsBetween function when handling more than 8 digits
What changes were proposed in this pull request?
The previous pull request, SPARK-23902, introduced the capability to retrieve more than 8 digits in the monthsBetween function. However, the current implementation led to a loss of precision when dealing with such cases. This also resulted in instability in unit tests.
To address this issue, this pull request aligns the implementation with that of Hive to prevent precision loss when returning more than 8 digits.

How was this patch tested?
The fix was validated by executing the flaky unit test 10,000,000 times.

Closes #21196 authored by mgaido91/SPARK-24123.";test_debt
"[SPARK-24123][SQL] Fix precision problems in monthsBetween function for values exceeding 8 digits
What changes were proposed in this pull request?
In the previous pull request, SPARK-23902, the capability to handle more than 8 digits in the monthsBetween function was introduced. However, the existing implementation introduced precision issues in such cases, leading to instability in unit tests.
To resolve this issue, this pull request adopts Hive's implementation to ensure accurate results for values exceeding 8 digits.

How was this patch tested?
The fix was validated by executing the flaky unit test 10,000,000 times.

Closes #21196 contributed by mgaido91/SPARK-24123.";test_debt
"[SPARK-24123][SQL] Address precision problems in monthsBetween function with values greater than 8 digits
What changes were proposed in this pull request?
The previous pull request, SPARK-23902, enabled the monthsBetween function to handle values with more than 8 digits. However, the current implementation resulted in precision loss and introduced instability in unit tests for such scenarios.
To resolve this issue, this pull request incorporates Hive's implementation to prevent precision loss when returning values exceeding 8 digits.

How was this patch tested?
The fix was validated by running the flaky unit test 10,000,000 times.

Closes #21196 by mgaido91/SPARK-24123.";test_debt
" [SPARK-24123][SQL] Resolve precision discrepancies in monthsBetween function for values over 8 digits
What changes were proposed in this pull request?
The previous pull request, SPARK-23902, introduced support for handling values with more than 8 digits in the monthsBetween function. However, the current implementation resulted in precision discrepancies, leading to unstable unit tests.
To address this issue, this pull request aligns the implementation with that of Hive to eliminate precision discrepancies when returning values exceeding 8 digits.

How was this patch tested?
The fix was validated by executing the flaky unit test 10,000,000 times.

Closes #21196 authored by mgaido91/SPARK-24123.";test_debt
"""[SPARK-24123][SQL] Address precision issues in monthsBetween when handling more than 8 digits
## What changes were proposed in this pull request?
SPARK-23902 introduced the capability to retrieve more than 8 digits in `monthsBetween`. However, the current implementation can result in precision loss when dealing with such large numbers. This issue was also causing a flaky unit test.
This pull request addresses the problem by adopting Hive's implementation, which ensures that precision is preserved even for values exceeding 8 digits.
## How was this patch tested?
The fix was tested by running the affected unit test 10,000,000 times to validate its stability.
Closes #21196 from mgaido91/SPARK-24123.""";test_debt
"""[SPARK-24123][SQL] Resolve precision issues in monthsBetween when dealing with more than 8 digits
## What are the proposed changes in this pull request?
The previous implementation introduced in SPARK-23902 allowed for retrieving more than 8 digits in `monthsBetween`. However, it had the potential for precision loss in such cases, leading to flaky unit tests.
This pull request addresses the precision loss issue by adopting a similar implementation to Hive's, ensuring that precision is preserved even with more than 8 digits.
## How was this patch tested?
The fix was validated by running the affected unit test 10,000,000 times to ensure consistency and accuracy.
Closes #21196 from mgaido91/SPARK-24123.""";test_debt
"""[SPARK-24123][SQL] Resolve precision issues in monthsBetween when handling more than 8 digits
## What changes were proposed in this pull request?
SPARK-23902 introduced the capability to retrieve more than 8 digits in `monthsBetween`. However, the current implementation can result in precision loss when dealing with such large numbers. Additionally, this led to flaky unit tests.
To address this, this pull request aligns with Hive's implementation to ensure precision is preserved when returning more than 8 digits.
## How was this patch tested?
The fix was tested by running the flaky unit test 10,000,000 times.
Closes #21196 from mgaido91/SPARK-24123.""";test_debt
"[BEAM-5709] Resolve flaky tests in BeamFnControlServiceTest.

What changes were proposed in this pull request?
This pull request aims to address the flakiness observed in BeamFnControlServiceTest, as described in the associated Jira issue. The proposed solution involves introducing an extended wait period to ensure completion of any actions dependent on server shutdown.

How was this patch tested?
The fix was validated through test execution.

Please refer to the Jira issue for further details on the cause of the flakiness.

Note: This commit message has been paraphrased for brevity and clarity.";test_debt
" [BEAM-5709] Fix instability of tests in BeamFnControlServiceTest.
What changes were proposed in this pull request?
This pull request aims to resolve the instability issues observed in BeamFnControlServiceTest. The associated Jira issue provides a detailed description of the root cause behind the flakiness. The proposed solution involves incorporating a sufficiently long wait period to allow for the completion of actions that rely on server shutdown.

How was this patch tested?
The effectiveness of the fix was verified through test execution.

Please refer to the Jira issue for a comprehensive explanation of the flakiness cause.";test_debt
"[BEAM-5709] Address flaky tests in BeamFnControlServiceTest.
What changes were proposed in this pull request?
This pull request focuses on resolving the flakiness experienced in BeamFnControlServiceTest. The related Jira issue provides insights into the underlying cause of the issue. The proposed solution involves introducing an extended waiting period to ensure proper completion of actions reliant on server shutdown.

How was this patch tested?
The fix was tested by executing the relevant tests.

For a detailed explanation of the flakiness cause, please consult the associated Jira issue.";test_debt
"[BEAM-5709] Fix unreliable tests in BeamFnControlServiceTest.
What changes were proposed in this pull request?
The purpose of this pull request is to address the unreliable nature of the tests in BeamFnControlServiceTest. The associated Jira issue provides a thorough explanation of the underlying cause of the flakiness. To mitigate the problem, this fix introduces a significantly longer wait time to allow for the completion of actions dependent on server shutdown.

How was this patch tested?
The efficacy of the fix was verified by executing the affected tests.

For a detailed analysis of the flakiness cause, please refer to the associated Jira issue.";test_debt
"[BEAM-5709] Resolve unstable tests in BeamFnControlServiceTest.
What changes were proposed in this pull request?
This pull request aims to resolve the instability issues encountered in BeamFnControlServiceTest. The Jira issue linked to this commit provides a comprehensive explanation of the flakiness cause. The proposed solution involves implementing an extended waiting period to ensure the completion of actions relying on server shutdown.

How was this patch tested?
The effectiveness of the fix was validated through thorough test execution.

For a detailed understanding of the flakiness cause, please consult the linked Jira issue.";test_debt
"""[BEAM-5709] Resolve flaky tests in BeamFnControlServiceTest
Refer to the associated Jira issue for details on the cause of the test flakiness. This fix addresses the issue by introducing a wait time that allows sufficient time for actions dependent on server shutdown to complete.
Closes #5709 and resolves the flakiness in BeamFnControlServiceTest.""";test_debt
"""[BEAM-5709] Resolve flaky tests in BeamFnControlServiceTest.
The Jira issue provides an explanation of the cause of the flakiness. This fix attempts to address the issue by introducing a longer waiting period to ensure that any actions dependent on server shutdown are given enough time to complete.
Closes #5709 and resolves the flakiness in BeamFnControlServiceTest.""";test_debt
"""[BEAM-5709] Resolve flaky tests in BeamFnControlServiceTest
The Jira issue provides details about the cause of the flakiness observed in the tests. This fix addresses the issue by introducing a longer wait time to allow any actions dependent on server shutdown to complete.";test_debt
Temporarily exclude the new test from execution as it is still a work in progress and not completely accurate at this stage.;test_debt
Exclude the new test from the test suite for the time being, as it is still in progress and not entirely accurate yet.;test_debt
Ignore the new test in the current test run since it is still a work in progress and not fully accurate at this point.;test_debt
Temporarily disable the execution of the new test as it is still being refined and not entirely accurate at this moment.;test_debt
Ignore new test that is still a work in progress and not fully accurate yet.;test_debt
Temporarily exclude the new test that is still in the process of being refined and may not produce accurate results.;test_debt
Skip the newly added test for now as it is not yet fully accurate.;test_debt
Exclude the recently introduced test from execution due to its incomplete accuracy.;test_debt
HDFS-389Address potential flakiness of testRecoverAfterDoubleFailures in QJM.;test_debt
HDFS-389Fix potential flakiness in testRecoverAfterDoubleFailures due to IPC client caching. Contribution by Todd Lipcon.;test_debt
HDFS-389Resolve potential test flakiness in QJM's testRecoverAfterDoubleFailures caused by IPC client caching. Contribution by Todd Lipcon.;test_debt
HDFS-389Fix flakiness issue in testRecoverAfterDoubleFailures of QJM module attributed to IPC client caching. Credit goes to Todd Lipcon.;test_debt
HDFS-389Resolve the possibility of testRecoverAfterDoubleFailures being flaky in QJM by addressing IPC client caching. This fix was contributed by Todd Lipcon.;test_debt
HDFS-3894: Improve reliability of testRecoverAfterDoubleFailures by addressing IPC client caching. Provided by Todd Lipcon.;test_debt
HDFS-3894: Fix flakiness in testRecoverAfterDoubleFailures caused by IPC client caching. Patch contributed by Todd Lipcon.;test_debt
HDFS-3894: Enhance reliability of testRecoverAfterDoubleFailures by resolving IPC client caching issues. Thanks to Todd Lipcon for the contribution.;test_debt
SOLR-12923: Strengthen the testTrigger method in TestSimNodeLostTrigger.;test_debt
SOLR-12923: Enhance the testTrigger function in TestSimNodeLostTrigger for improved robustness.;test_debt
SOLR-12923: Fortify the testTrigger method in TestSimNodeLostTrigger to increase its resilience.;test_debt
SOLR-12923: Harden the testTrigger test case in TestSimNodeLostTrigger for enhanced reliability.;test_debt
SOLR-12923: Strengthen the testTrigger function in TestSimNodeLostTrigger to make it more robust.;test_debt
SOLR-12923: Strengthen the reliability of TestSimNodeLostTrigger#testTrigger.;test_debt
SOLR-12923: Improve the robustness of TestSimNodeLostTrigger#testTrigger.;test_debt
SOLR-12923: Enhance the resilience of TestSimNodeLostTrigger#testTrigger.;test_debt
GEODE-8211: Resolve flakiness in shutdown test (#5209) by adding volatile modifier.;test_debt
GEODE-8211: Fix flakiness in shutdown test (#5209) by introducing the volatile modifier to the instance variable. This ensures proper visibility between threads.;test_debt
GEODE-8211: Address flakiness in shutdown test (#5209) by making the instance variable volatile. This resolves the issue of inconsistent read and write operations between threads.;test_debt
GEODE-8211: Fix the flakiness problem in shutdown test (#5209) by marking the instance variable as volatile. This guarantees visibility and consistent behavior across multiple threads.;test_debt
GEODE-8211: Resolve the flakiness issue in shutdown test (#5209) by adding the volatile modifier to the instance variable. This ensures proper synchronization and avoids inconsistencies between reading and writing threads.;test_debt
"""GEODE-8211: Rectified unstable shutdown test (#5209) The issue stemmed from the absence of volatility in the instance variable, causing conflicts between the writing thread and the reading thread.""";test_debt
"""GEODE-8211: Addressed instability in shutdown test (#5209) The issue arose due to the lack of volatile designation in the instance variable, resulting in conflicts between the thread that writes and the one that reads.""";test_debt
"""GEODE-8211: Resolved intermittent shutdown test failure (#5209) The underlying problem was attributed to the instance variable lacking volatility, leading to clashes between the writing and reading threads.""";test_debt
DFDL-721: Remove invalid doubleNL test.;test_debt
DFDL-721: Remove the doubleNL test that is not valid.;test_debt
DFDL-721: Remove the invalid doubleNL test case.;test_debt
DFDL-721: Remove the doubleNL test, as it is not valid.;test_debt
DFDL-721: Remove the test case for doubleNL, as it is not valid.;test_debt
"""Eliminate invalid doubleNL test as it doesn't conform to DFDL-721.""";test_debt
"""Disregard the doubleNL test that doesn't adhere to DFDL-721.""";test_debt
"""Exclude the non-compliant doubleNL test, as it doesn't align with DFDL-721.""";test_debt
"[tests] Attempt to enhance stability of CI tests

Squashes the subsequent commits:

Introduce potential fix for the issue reported in: [Travis CI job log link]
This commit closes #1676.";test_debt
"[tests] Enhance stability of CI tests to improve reliability
Squashes the following commits:

Introduce a potential solution for the issue encountered in: [Travis CI job log link]
This commit concludes #1676.";test_debt
"[tests] Improve stability of CI tests for enhanced reliability
Squashes the listed commits:

Implement a potential fix for the reported issue: [Travis CI job log link]
Closing #1676 with this commit.";test_debt
"[tests] Enhance the stability of CI tests to mitigate potential issues
Squashes the included commits:

Introduce a possible resolution for the reported issue: [Travis CI job log link]
This commit marks the completion of #1676.";test_debt
"[tests] Enhance CI test stability to minimize potential failures
Squashes the provided commits:

Introduce a potential fix for the issue reported in: [Travis CI job log link]
Closing #1676 with this commit.";test_debt
"""[tests] Attempt to enhance stability of CI tests
Combines the subsequent commits:
Attempted resolution for: https://s3.amazonaws.com/archive.travis-ci.org/jobs/110235128/log.txt
Closing issue #1676.""";test_debt
"""[tests] Effort to boost reliability of CI tests Merges the following commits: Proposed solution for: https://s3.amazonaws.com/archive.travis-ci.org/jobs/110235128/log.txt This concludes issue #1676.""";test_debt
"""[tests] Striving for improved CI test stability Condenses the listed commits: Potential fix for: https://s3.amazonaws.com/archive.travis-ci.org/jobs/110235128/log.txt Resolves #1676.""";test_debt
"Add schemas and validators to Config

Details:

Introduced schemas for each Config object, named with the _SCHEMA suffix (e.g., TOPOLOGY_WORKERS_SCHEMA).
For simple classes like String, Number, and Boolean, the class itself is used as the schema value.
For other classes, instances of the FieldValidator interface are utilized.
The FieldValidator interface includes a method for field validation and a method to provide a user-friendly description of the validation criteria.
Status: The code compiles successfully but has not been tested. Currently, no components make use of the schemas.";test_debt
"Incorporate schemas and validators into Config
Details:

Added object schemas to each Config instance, denoted by the _SCHEMA suffix (e.g., TOPOLOGY_WORKERS_SCHEMA).
For simple classes (String, Number, Boolean), the class itself serves as the schema value.
Utilized instances of the FieldValidator interface for other classes.
The FieldValidator interface encompasses methods for field validation and providing user-friendly descriptions of the validation criteria.
Status: The code compiles successfully but has not undergone testing. Currently, there is no utilization of the schemas.";test_debt
"Introduce schemas and validators to Config
Details:

Implemented schemas for every Config object, named with the _SCHEMA suffix (e.g., TOPOLOGY_WORKERS_SCHEMA).
For simple classes (String, Number, Boolean), the class name alone is sufficient as the schema value.
Utilized the FieldValidator interface to handle other classes, allowing for field validation and providing descriptive criteria for users.
Status: The code successfully compiles, but it has not been tested yet. At present, no components utilize the schemas.";test_debt
"Enhance Config with schemas and validators
Details:

Added object schemas to each Config instance, with names ending in the _SCHEMA suffix (e.g., TOPOLOGY_WORKERS_SCHEMA).
For simple classes (String, Number, Boolean), the class itself is used as the schema value.
Employed the FieldValidator interface for handling other classes, facilitating field validation and offering user-friendly criteria descriptions.
Status: The code successfully compiles but remains untested. The schemas are currently not utilized by any components.";test_debt
"Implement schemas and validators for Config
Details:

Introduced schemas for every Config object, distinguished by the _SCHEMA suffix (e.g., TOPOLOGY_WORKERS_SCHEMA).
For simple classes (String, Number, Boolean), the class name alone is deemed sufficient for the schema value.
Utilized the FieldValidator interface for handling other classes, enabling field validation and providing clear criteria explanations for users.
Status: The code successfully compiles, but no testing has been conducted yet. The schemas are not currently utilized by any components.";test_debt
"""Incorporated schemas and validators into Config
Highlights:

Each Config instance now includes an associated schema, denoted by the _SCHEMA suffix (e.g., TOPOLOGY_WORKERS_SCHEMA)
For simple data types (String, Number, Boolean), using the Class name is sufficient as the schema's value
For more complex data types, instances of the FieldValidator interface are employed
FieldValidator defines methods for field validation and for providing user-friendly descriptions of the criteria
Current Status: Successfully compiles, pending testing. The schemas are currently not utilized.""";test_debt
"""Integration of schemas and validators within Config
Particulars:
Each Config now incorporates an Object-type schema denoted by the
_SCHEMA suffix (e.g., TOPOLOGY_WORKERS_SCHEMA)
For simple Classes (String, Number, Boolean), the Class itself is
sufficient for the schema's value
For other Classes, instances of the FieldValidator interface are employed.
The FieldValidator interface outlines a field validation method and a method to
provide an easily understandable criteria description for users.";test_debt
"""Incorporated schemas and validators into Config
Specifics:

Each Config now includes an Object-type schema denoted by the
_SCHEMA suffix (e.g., TOPOLOGY_WORKERS_SCHEMA)
Simple classes (String, Number, Boolean) require only the Class itself
for the schema's value
For other classes, instances of the FieldValidator interface are employed
FieldValidator defines validation and user-friendly description methods
State: Compiles successfully, pending testing. The schemas remain unused as of now.""";test_debt
"Merge pull request #11401 from ibzib/performance-region
[BEAM-9744] Introduce the missing region option to the Python performance tests.";test_debt
"Merge pull request #11401 from ibzib/performance-region
[BEAM-9744] Incorporate the region option that was missing into the Python performance tests.";test_debt
"Merge pull request #11401 from ibzib/performance-region
[BEAM-9744] Include the region option, which was previously absent, in the Python performance tests.";test_debt
"Merge pull request #11401 from ibzib/performance-region
[BEAM-9744] Add the region option that was inadvertently omitted to the Python performance tests.";test_debt
"Merge pull request #11401 from ibzib/performance-region
[BEAM-9744] Integrate the region option, which was previously lacking, into the Python performance tests.";test_debt
"""Integrate pull request #11401 by ibzib for enhanced performance in region context
[BEAM-9744] Incorporate the absent region option into Python performance tests.""";test_debt
"""Incorporate pull request #11401 from ibzib aimed at optimizing region performance [BEAM-9744] Introduce the previously missing region option into Python performance testing.""";test_debt
"""Pull request #11401 from ibzib merged to enhance region-specific performance [BEAM-9744] Implement the addition of the region option to Python performance tests.""";test_debt
"Initial implementation of APIs for supporting multiple/related replication of changed attachments
Details:

This commit marks the initial check-in of APIs that enable the replication of multiple/related attachments, specifically focusing on incremental replication of only the changed attachments.
It is important to note that these APIs require extensive testing to ensure their reliability and functionality.
Additionally, integration with the replicator component is necessary to complete the implementation.";test_debt
"First commit: Introduce APIs for supporting multiple/related attachment replication with incremental changes
Details:

This initial commit introduces APIs that facilitate the replication of multiple/related attachments with a focus on incrementally replicating only the modified attachments.
Extensive testing is required to validate the performance and accuracy of these APIs.
Furthermore, the integration of these APIs with the replicator component is still pending.";test_debt
"Initial check-in: Implement APIs for multiple/related attachment replication with incremental changes
Details:

This commit represents the initial implementation of APIs aimed at enabling the replication of multiple/related attachments, focusing on incrementally replicating only the modified attachments.
It is essential to conduct thorough testing to ensure the reliability and effectiveness of these APIs.
Additionally, the integration of these APIs with the replicator component is yet to be completed.";test_debt
"APIs for multiple/related attachment replication with incremental changes: Initial implementation
Details:

This commit introduces the initial implementation of APIs designed to support the replication of multiple/related attachments, with a specific focus on incrementally replicating only the attachments that have undergone changes.
Extensive testing is required to verify the functionality and performance of these APIs.
Integration with the replicator component is still pending and needs to be implemented.";test_debt
"Initial check-in of APIs for multiple/related supported and incremental replication of changed attachments

Details:

This commit introduces the initial implementation of APIs to support multiple/related replication of attachments, focusing on incremental replication of only changed attachments.
Further extensive testing is required to ensure the reliability and functionality of these APIs.
Additionally, integration with the replicator component needs to be established.";test_debt
"""Initial introduction of APIs for supporting multiple/related replication of changed attachments incrementally. Requires extensive testing and integration with the replicator.""";test_debt
"""First-time inclusion of APIs enabling incremental replication for multiple/related changed attachments. Extensive testing is necessary, along with integration into the replicator.""";test_debt
"""Initial commit of APIs to facilitate incremental replication for multiple/related changed attachments. Further rigorous testing is needed, as well as integration with the replicator.""";test_debt
"[FLINK-20679][tests] Eliminate unstable test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering

The test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering is deemed unnecessary since the scheduling aspect is already covered by DefaultSchedulerTest.restartVerticesOnSlotAllocationTimeout, which guarantees the restart of vertices upon allocation timeouts. Additionally, the allocation timeout aspect is covered by PhysicalSlotRequestBulkCheckerImplTest.testUnfulfillableBulkIsCancelled, ensuring that PhysicalSlotRequestBulks are appropriately timed out based on the configured allocation timeout.

This commit concludes #14448.";test_debt
"[FLINK-20679][tests] Remove unstable test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering
The test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering has been eliminated as it is no longer necessary. The scheduling aspect is already covered by DefaultSchedulerTest.restartVerticesOnSlotAllocationTimeout, which ensures the restart of vertices in case of allocation timeouts. Furthermore, the allocation timeout aspect is addressed by PhysicalSlotRequestBulkCheckerImplTest.testUnfulfillableBulkIsCancelled, which verifies the proper timing out of PhysicalSlotRequestBulks based on the configured allocation timeout.

This commit resolves #14448.";test_debt
"[FLINK-20679][tests] Remove unstable test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering
The test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering has been removed as it is no longer needed. Its functionality is covered by DefaultSchedulerTest.restartVerticesOnSlotAllocationTimeout, which handles vertex restarts upon allocation timeouts. In addition, the allocation timeout aspect is addressed by PhysicalSlotRequestBulkCheckerImplTest.testUnfulfillableBulkIsCancelled, ensuring the proper cancellation of PhysicalSlotRequestBulks after the allocated timeout.

This commit closes #14448.";test_debt
"[FLINK-20679][tests] Eliminate unstable test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering
The test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering is being removed as it is no longer required. The scheduling aspect is already covered by DefaultSchedulerTest.restartVerticesOnSlotAllocationTimeout, which guarantees the restart of vertices upon allocation timeouts. Additionally, the allocation timeout functionality is tested in PhysicalSlotRequestBulkCheckerImplTest.testUnfulfillableBulkIsCancelled, ensuring the proper timeout handling for PhysicalSlotRequestBulks.

This commit concludes issue #14448.";test_debt
"[FLINK-20679][tests] Remove unstable test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering
The test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering is no longer necessary and has been removed. The scheduling part is adequately covered by DefaultSchedulerTest.restartVerticesOnSlotAllocationTimeout, which ensures the restart of vertices when allocation timeouts occur. Additionally, the allocation timeout aspect is addressed by PhysicalSlotRequestBulkCheckerImplTest.testUnfulfillableBulkIsCancelled, which verifies the timeout behavior of PhysicalSlotRequestBulks after the configured allocation timeout.

This commit resolves issue #14448.";test_debt
"""[FLINK-20679][tests] Eliminate unreliable test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering
The JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering test is now unnecessary due to the coverage provided by DefaultSchedulerTest.restartVerticesOnSlotAllocationTimeout, which guarantees vertex restarts during allocation timeouts. The allocation timeout aspect is addressed by PhysicalSlotRequestBulkCheckerImplTest.testUnfulfillableBulkIsCancelled, ensuring that PhysicalSlotRequestBulks are timed out according to the configured allocation timeout.
This resolves issue #14448.""";test_debt
"""[FLINK-20679][tests] Remove unstable test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering The JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering test case has been eliminated as its function is now fulfilled by DefaultSchedulerTest.restartVerticesOnSlotAllocationTimeout, which handles vertex restarts in allocation timeout scenarios. The allocation timeout component is adequately covered by PhysicalSlotRequestBulkCheckerImplTest.testUnfulfillableBulkIsCancelled, ensuring proper timeout behavior for PhysicalSlotRequestBulks. This action closes issue #14448.""";test_debt
"""[FLINK-20679][tests] Eliminate unreliable test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering The test JobMasterTest.testSlotRequestTimeoutWhenNoSlotOffering has been removed, as its responsibilities are now met by DefaultSchedulerTest.restartVerticesOnSlotAllocationTimeout, which manages vertex restarts upon allocation timeouts. Additionally, PhysicalSlotRequestBulkCheckerImplTest.testUnfulfillableBulkIsCancelled covers allocation timeout behavior for PhysicalSlotRequestBulks. Issue #14448 is resolved through this modification.""";test_debt
HBASE-19940: Address flakiness in TestMetaShutdownHandler ADDENDUM: Further debugging enhancements;test_debt
HBASE-19940: Resolve flakiness issue in TestMetaShutdownHandler ADDENDUM: Additional debugging improvements;test_debt
"""HBASE-19940 TestMetaShutdownHandler unstable ADDENDUM: additional debugging.""
";test_debt
"""HBASE-19940 TestMetaShutdownHandler unreliable ADDENDUM: further debugging.""";test_debt
"""HBASE-19940 TestMetaShutdownHandler inconsistent ADDENDUM: more debugging.""";test_debt
HBASE-19940: Fix flakiness of TestMetaShutdownHandler ADDENDUM: Introduce additional debug statements;test_debt
HBASE-19940: Rectify flakiness problem in TestMetaShutdownHandler ADDENDUM: Enhance debug logging for further troubleshooting;test_debt
HBASE-19940: Mitigate flakiness in TestMetaShutdownHandler ADDENDUM: Incorporate extra debugging capabilities;test_debt
"ZEPPELIN-377: Fix CI hanging issue during ./testing/startSparkCluster.sh 1.4.0 2.3

Addressing the issue documented in https://issues.apache.org/jira/browse/ZEPPELIN-377.

This patch modifies the location for downloading the Spark package from the Apache archive to a mirror, resulting in a faster download time of 10 minutes. Additionally, it includes the missing test for version 1.5.1 and updates the test version from 1.4.0 to 1.4.1.

This commit closes #380 from the Leemoonsoo/fix_spark_test branch and consolidates the following commits:

142583a [Lee moon soo] Add test for 1.5.1
b8323e6 [Lee moon soo] Use mirror for 1.3.x and later versions of Spark.";test_debt
"Refer to https://issues.apache.org/jira/browse/ZEPPELIN-377.
This patch alters the location for downloading the spark package from the Apache archive to a mirror, resulting in a 10-minute download time.
Furthermore, it adds a previously absent test for 1.5.1 and modifies the test version from 1.4.0 to 1.4.1.
Resolves #380 by merging changes from Leemoonsoo/fix_spark_test and combining the following commits:
142583a [Lee moon soo] Introduce test for 1.5.1
b8323e6 [Lee moon soo] Employ mirror for versions 1.3.x and later of spark.""";test_debt
"""ZEPPELIN-377 CI Hangs on ./testing/startSparkCluster.sh 1.4.0 2.3
Referring to https://issues.apache.org/jira/browse/ZEPPELIN-377.
This patch modifies the location for downloading the spark package, transitioning from the Apache archive to a mirror. This update reduces the download time to 10 minutes.
Additionally, it includes a previously missing test for version 1.5.1 and adjusts the test version from 1.4.0 to 1.4.1.
Closing issue #380 through the integration of changes from Leemoonsoo/fix_spark_test and consolidating the following commits:
142583a [Lee moon soo] Integrate test for 1.5.1
b8323e6 [Lee moon soo] Opt for mirror for spark versions 1.3.x and later.""";test_debt
"""ZEPPELIN-377 CI Hangs while executing ./testing/startSparkCluster.sh 1.4.0 2.3
Pointing to https://issues.apache.org/jira/browse/ZEPPELIN-377.
This patch adjusts the spark package download location, shifting from the Apache archive to a mirror. This change results in a shorter download duration of 10 minutes.
Additionally, it introduces a previously absent test for version 1.5.1 and updates the test version from 1.4.0 to 1.4.1.
Concludes #380 by merging changes from Leemoonsoo/fix_spark_test and merging the following commits:
142583a [Lee moon soo] Incorporate test for 1.5.1
b8323e6 [Lee moon soo] Opt for a mirror for spark versions 1.3.x and later.""";test_debt
"ZEPPELIN-377: Resolve CI hanging during ./testing/startSparkCluster.sh 1.4.0 2.3
This commit addresses the issue reported in https://issues.apache.org/jira/browse/ZEPPELIN-377.

The patch modifies the download location of the Spark package, switching from the Apache archive to a mirror. This change significantly reduces the download time to just 10 minutes. Additionally, the commit includes the previously missing test for version 1.5.1 and updates the test version from 1.4.0 to 1.4.1.

Closing #380, this commit also consolidates the following commits:

142583a [Lee moon soo] Add test for 1.5.1
b8323e6 [Lee moon soo] Utilize mirror for Spark versions 1.3.x and later.";test_debt
"ZEPPELIN-377: Fix hanging issue in CI during ./testing/startSparkCluster.sh 1.4.0 2.3
The commit addresses the hanging problem encountered during the execution of ./testing/startSparkCluster.sh 1.4.0 2.3 in the CI environment, as documented in https://issues.apache.org/jira/browse/ZEPPELIN-377.

To resolve the issue, the patch modifies the download location for the Spark package, opting for a mirror instead of the Apache archive. This change significantly reduces the download time to approximately 10 minutes. Additionally, the commit introduces the missing test for version 1.5.1 and updates the test version from 1.4.0 to 1.4.1.

This commit closes #380 and incorporates the following squashed commits:

142583a [Lee moon soo] Add test for 1.5.1
b8323e6 [Lee moon soo] Switch to using a mirror for Spark versions 1.3.x and later.";test_debt
"ZEPPELIN-377: Resolve CI hang-up during ./testing/startSparkCluster.sh 1.4.0 2.3
This commit tackles the hang-up issue that occurs during the execution of ./testing/startSparkCluster.sh 1.4.0 2.3 in the CI environment, as described in the related JIRA ticket, https://issues.apache.org/jira/browse/ZEPPELIN-377.

To address the problem, the patch modifies the download location of the Spark package, replacing the Apache archive with a mirror. This alteration results in a faster download time of approximately 10 minutes. Additionally, the commit adds the missing test for version 1.5.1 and updates the test version from 1.4.0 to 1.4.1.

Closing #380, this commit also consolidates the following commits:

142583a [Lee moon soo] Add test for 1.5.1
b8323e6 [Lee moon soo] Utilize a mirror for Spark versions 1.3.x and later.";test_debt
"ZEPPELIN-377: Fix hanging problem in CI with ./testing/startSparkCluster.sh 1.4.0 2.3
This commit resolves the hanging issue that occurs during the execution of ./testing/startSparkCluster.sh 1.4.0 2.3 in the CI environment. The problem is documented in the JIRA ticket, https://issues.apache.org/jira/browse/ZEPPELIN-377.

To address the problem, the patch adjusts the download location of the Spark package from the Apache archive to a mirror. This change significantly reduces the download time to approximately 10 minutes. Furthermore, the commit adds the missing test for version";test_debt
Disable two unstable tests (BEAM-8035, BEAM-9164).;test_debt
Deactivate two unreliable tests (BEAM-8035, BEAM-9164).;test_debt
"""Deactivate two unreliable tests (BEAM-8035, BEAM-9164).""";test_debt
"""Turn off two unstable tests (BEAM-8035, BEAM-9164).""";test_debt
"""Disable two problematic tests (BEAM-8035, BEAM-9164).""";test_debt
"""Deactivate two tests prone to flakiness (BEAM-8035, BEAM-9164).""";test_debt
Turn off two unstable tests (BEAM-8035, BEAM-9164).;test_debt
Suppress execution of two problematic tests (BEAM-8035, BEAM-9164).;test_debt
"HBASE-24479: Address flakiness in TestCompaction#testStopStartCompaction (#1820)
The polling mechanism for the active compaction count in TestCompaction#testStopStartCompaction is prone to race conditions. To improve reliability, this commit tightens the assertion checks to make them more dependable.";test_debt
"HBASE-24479: Fix flakiness in TestCompaction#testStopStartCompaction (#1820)
The polling process for the active compaction count in TestCompaction#testStopStartCompaction is susceptible to race conditions. To enhance stability, this commit refines the assertion checks to ensure greater reliability.";test_debt
"HBASE-24479: Resolve instability in TestCompaction#testStopStartCompaction (#1820)
The polling mechanism used to determine the active compaction count in TestCompaction#testStopStartCompaction is prone to race conditions, leading to flakiness. This commit strengthens the assertion checks to improve the test's reliability.";test_debt
"""HBASE-24479: Address flakiness in TestCompaction#testStopStartCompaction (#1820) The polling for active compaction count was susceptible to race conditions. The assertions have been strengthened to enhance reliability.""";test_debt
"""HBASE-24479: Fixing instability in TestCompaction#testStopStartCompaction (#1820) The polling mechanism for tracking active compaction count had issues with race conditions. To improve reliability, the assertions have been made more stringent.""";test_debt
"""HBASE-24479: Resolving flakiness in TestCompaction#testStopStartCompaction (#1820) The active compaction count polling exhibited race conditions. To bolster reliability, the assertions have been tightened.""";test_debt
"HBASE-24479: Eliminate flakiness in TestCompaction#testStopStartCompaction (#1820)
The polling process for the active compaction count in TestCompaction#testStopStartCompaction is susceptible to race conditions, resulting in intermittent failures. To overcome this issue, this commit enhances the assertion checks for more consistent and stable results.";test_debt
"HBASE-24479: Enhance stability of TestCompaction#testStopStartCompaction (#1820)
The existing polling mechanism for the active compaction count in TestCompaction#testStopStartCompaction is prone to race conditions, causing occasional test failures. To improve the reliability of this test, this commit strengthens the assertion checks to mitigate flakiness.";test_debt
"[SPARK-15783][CORE] Temporarily ignore blacklist tests due to remaining flakiness

What changes were proposed in this pull request?
The BlacklistIntegrationSuite tests still exhibit some flakiness. To prevent further build failures, this commit temporarily disables the tests until more fixes can be implemented.

How was this patch tested?
The changes were tested using Jenkins.

This commit concludes #13528 from the squito/ignore_blacklist branch.";test_debt
"[SPARK-15783][CORE] Ignore blacklist tests temporarily due to remaining flakiness
What changes were proposed in this pull request?
Despite efforts to address flakiness, the BlacklistIntegrationSuite tests still exhibit some instability. To avoid further build failures, this commit temporarily disables the tests until additional fixes can be applied.

How was this patch tested?
The changes were tested using Jenkins.

This commit closes #13528 from the squito/ignore_blacklist branch.";test_debt
"""[SPARK-15783][CORE] Temporarily disregarding certain blacklist tests due to persisting flakiness

Proposed Changes
Due to ongoing flakiness in BlacklistIntegrationSuite, the tests are being temporarily disabled to prevent further build disruptions. The intention is to reactivate them after implementing additional fixes.

Testing Done
Tested on Jenkins.
Closes #13528 by applying changes from squito/ignore_blacklist.""";test_debt
"""[SPARK-15783][CORE] Temporarily Ignoring Blacklist Tests Due to Flakiness
Proposed Changes
To address persistent flakiness in the BlacklistIntegrationSuite, the decision has been made to temporarily disable these tests. This action aims to prevent further disruptions in the builds and intends to reinstate the tests once additional fixes are in place.

Testing Done
Tested on Jenkins.
Closes #13528 through integration of changes from squito/ignore_blacklist.""";test_debt
"""[SPARK-15783][CORE] Temporary Disabling of Flaky Blacklist Tests
Proposed Changes
Considering the continued flakiness within BlacklistIntegrationSuite, these tests are being temporarily deactivated. The objective is to prevent any further interference with builds until additional fixes can be applied.

Testing Done
Validation carried out on Jenkins.
Closes #13528 by incorporating modifications from squito/ignore_blacklist.""
";test_debt
" [SPARK-15783][CORE] Temporarily disable flaky blacklist tests
What changes were proposed in this pull request?
The BlacklistIntegrationSuite tests continue to demonstrate flakiness. To prevent further disruptions to the build process, this commit temporarily deactivates the tests until further fixes can be introduced.

How was this patch tested?
The changes were verified using Jenkins.

Closing #13528, this commit originates from the squito/ignore_blacklist branch.";test_debt
"[SPARK-15783][CORE] Temporarily suppress flaky blacklist tests
What changes were proposed in this pull request?
Despite previous efforts to address flakiness, the BlacklistIntegrationSuite tests remain unreliable. In order to avoid additional build failures, this commit temporarily disables the tests until more comprehensive fixes can be implemented.

How was this patch tested?
The changes were tested using Jenkins.

This commit concludes #13528 from the squito/ignore_blacklist branch.";test_debt
"[SPARK-15783][CORE] Temporarily ignore flaky blacklist tests
What changes were proposed in this pull request?
Due to persisting flakiness in the BlacklistIntegrationSuite tests, this commit temporarily excludes the tests from execution. This measure aims to prevent further disruptions to the build process until additional fixes are implemented.

How was this patch tested?
The changes were validated using Jenkins.

Closing #13528, this commit is derived from the squito/ignore_blacklist branch.";test_debt
Remove the duplicate test class TestZkCallbackHandlerLeak.;test_debt
Eliminate the duplicated test class TestZkCallbackHandlerLeak.;test_debt
"""Remove duplicated test class TestZkCallbackHandlerLeak.""";test_debt
"""Delete redundant test class TestZkCallbackHandlerLeak.""";test_debt
"""Eliminate duplicated test class TestZkCallbackHandlerLeak.""";test_debt
Remove the redundant TestZkCallbackHandlerLeak test class.;test_debt
Delete the duplicate TestZkCallbackHandlerLeak test class.;test_debt
Remove the duplicated implementation of TestZkCallbackHandlerLeak test class.;test_debt
"GEODE-5036: Set ""enable-chunk-handler-thread"" as the default value of ""false"" (#292)

Added a new integration test for the chunk handler.
Removed a test that does not provide any value.
Modified the property name from 'disable-chunk-handler-thread' to 'enable-chunk-handler-thread'.";test_debt
"GEODE-5036: Update default value of ""enable-chunk-handler-thread"" to ""false"" (#292)
Introduced a new integration test for the chunk handler functionality.
Removed a test that does not contribute any value.
Modified the property name from 'disable-chunk-handler-thread' to 'enable-chunk-handler-thread'.";test_debt
"""GEODE-5036: Set default value of """"enable-chunk-handler-thread"""" to """"false"""" (#292)

Introduced a new integration test for chunk handler
Removed a redundant test that did not contribute any value
Updated the attribute from 'disable-chunk-handler-thread' to 'enable-chunk-handler-thread'""";test_debt
"""GEODE-5036: Update default setting of """"enable-chunk-handler-thread"""" to """"false"""" (#292)
Implemented a new integration test for chunk handler
Removed an unnecessary test that didn't provide any value
Renamed the attribute from 'disable-chunk-handler-thread' to 'enable-chunk-handler-thread'""";test_debt
"""GEODE-5036: Default """"enable-chunk-handler-thread"""" to """"false"""" (#292)
Added a new integration test for chunk handler
Deleted a test that was redundant and added no value
Modified the attribute from 'disable-chunk-handler-thread' to 'enable-chunk-handler-thread'""";test_debt
"GEODE-5036: Set ""enable-chunk-handler-thread"" to default value of ""false"" (#292)
Included a new integration test specifically for the chunk handler feature.
Removed a test that does not offer any meaningful value.
Adjusted the property name from 'disable-chunk-handler-thread' to 'enable-chunk-handler-thread'.";test_debt
"GEODE-5036: Update default setting of ""enable-chunk-handler-thread"" to ""false"" (#292)
Added a new integration test to cover the functionality of the chunk handler.
Eliminated a test that does not provide any significant value.
Renamed the property from 'disable-chunk-handler-thread' to 'enable-chunk-handler-thread'.";test_debt
"GEODE-5036: Modify default value of ""enable-chunk-handler-thread"" to ""false"" (#292)
Implemented a new integration test specifically designed for evaluating the chunk handler behavior.
Removed a test that did not contribute substantially.
Renamed the property from 'disable-chunk-handler-thread' to 'enable-chunk-handler-thread'.";test_debt
Temporarily excluded the test. It will be re-added after rebuilding with the new plugin structure.;test_debt
Test temporarily removed. Rebuilding required with the new plugin structure.;test_debt
"""Test temporarily removed. Will rebuild using the plugin structure.""";test_debt
"""Test has been temporarily excluded. It will be rebuilt utilizing the plugin structure.""";test_debt
"""Removed the test temporarily. A rebuilding process will take place using the plugin structure.""";test_debt
The test has been temporarily excluded and will be reintegrated after rebuilding with the plugin structure.;test_debt
Temporarily removed the test. Rebuilding is necessary to incorporate the new plugin structure.;test_debt
The test has been temporarily excluded and will be reinstated once the rebuilding process with the plugin structure is completed.;test_debt
Lenet example (untested);test_debt
Untested implementation of the Lenet example.;test_debt
"""Lenet example (untested)""";test_debt
"""Lenet example (not validated)""";test_debt
"""Lenet example (not checked)""";test_debt
Lenet example provided without testing.;test_debt
Lenet example code without verification.;test_debt
Implementation of the Lenet example without performing tests.;test_debt
"""[hotfix] Enhance stability of RocksDBAsyncSnapshotTest#testCancelFullyAsyncCheckpoints
To address variations caused by RocksDBOptions#TIMER_SERVICE_IMPL, we have made adjustments to the testCancelFullyAsyncCheckpoints. These modifications ensure the correct skipping of checkpointing streams.""";test_debt
"""[hotfix] Improve resilience of RocksDBAsyncSnapshotTest#testCancelFullyAsyncCheckpoints
In order to account for the impact of RocksDBOptions#TIMER_SERVICE_IMPL, we have fortified the testCancelFullyAsyncCheckpoints. This ensures that the correct number of checkpointing streams is skipped.""";test_debt
"""[hotfix] Strengthen RocksDBAsyncSnapshotTest#testCancelFullyAsyncCheckpoints Due to variations in RocksDBOptions#TIMER_SERVICE_IMPL, adjustments are needed in the testCancelFullyAsyncCheckpoints test regarding the number of skipped checkpointing streams.""";test_debt
"""[hotfix] Enhance RocksDBAsyncSnapshotTest#testCancelFullyAsyncCheckpoints Modifications are required in the testCancelFullyAsyncCheckpoints test to account for potential variations in RocksDBOptions#TIMER_SERVICE_IMPL, specifically affecting the number of checkpointing streams that need to be skipped.""";test_debt
"""[hotfix] Improve Resilience of RocksDBAsyncSnapshotTest#testCancelFullyAsyncCheckpoints To accommodate potential fluctuations in RocksDBOptions#TIMER_SERVICE_IMPL, enhancements are made in the testCancelFullyAsyncCheckpoints test, involving adjustments to the number of checkpointing streams that should be omitted.""";test_debt
"""[hotfix] Strengthen RocksDBAsyncSnapshotTest#testCancelFullyAsyncCheckpoints
To accommodate variations introduced by RocksDBOptions#TIMER_SERVICE_IMPL, we have made adjustments to the testCancelFullyAsyncCheckpoints. This ensures proper handling of skipped checkpointing streams.""";test_debt
"""[hotfix] Enhance reliability of RocksDBAsyncSnapshotTest#testCancelFullyAsyncCheckpoints
To address the influence of RocksDBOptions#TIMER_SERVICE_IMPL, we have modified the testCancelFullyAsyncCheckpoints. These modifications enable the appropriate skipping of checkpointing streams.""";test_debt
"""[hotfix] Improve robustness of RocksDBAsyncSnapshotTest#testCancelFullyAsyncCheckpoints
To mitigate the impact of RocksDBOptions#TIMER_SERVICE_IMPL, we have enhanced the testCancelFullyAsyncCheckpoints. This guarantees accurate handling of skipped checkpointing streams.""";test_debt
Hive: Address flakiness in testScanTable (#1817) (#1824);test_debt
Hive: Resolve instability in testScanTable (#1817) (#1824);test_debt
"""Hive: Unstable test testScanTable (#1817) (#1824)""";test_debt
"""Hive: Test testScanTable is unreliable (#1817) (#1824)""";test_debt
"""Hive: Flakiness in testScanTable test (#1817) (#1824)""";test_debt
Hive: Fix flaky test testScanTable (#1817) (#1824);test_debt
Hive: Handle flakiness in testScanTable (#1817) (#1824);test_debt
Hive: Address unpredictability in testScanTable (#1817) (#1824);test_debt
Merge pull request #3060 from apache/prototype/fdb-layer-ebtree-speedy-tests Enhance speed of ebtree test suite while maintaining coverage;test_debt
Merge pull request #3060 from apache/prototype/fdb-layer-ebtree-speedy-tests Optimize ebtree test suite for improved performance without sacrificing coverage.;test_debt
"""Integrate pull request #3060 from apache/prototype/fdb-layer-ebtree-speedy-tests Enhance the speed of the ebtree test suite while maintaining full coverage.""";test_debt
"""Merge pull request #3060 from apache/prototype/fdb-layer-ebtree-speedy-tests Optimize ebtree test suite for improved speed without sacrificing coverage.""";test_debt
"""Merge pull request #3060 from apache/prototype/fdb-layer-ebtree-speedy-tests Improve the speed of ebtree test suite while preserving comprehensive coverage.""";test_debt
Merge pull request #3060 from apache/prototype/fdb-layer-ebtree-speedy-tests Accelerate ebtree test suite execution while ensuring comprehensive coverage.;test_debt
Merge pull request #3060 from apache/prototype/fdb-layer-ebtree-speedy-tests Improve speed of ebtree test suite without compromising test coverage.;test_debt
Merge pull request #3060 from apache/prototype/fdb-layer-ebtree-speedy-tests Enhance efficiency of ebtree test suite without compromising test comprehensiveness.;test_debt
Resolve unreliable comparison in log_handler_test.py;test_debt
Address inconsistent comparison in log_handler_test.py;test_debt
"""Resolve unreliable comparison in log_handler_test.py""";test_debt
"""Address flaky comparison in log_handler_test.py""";test_debt
"""Fix unstable comparison in log_handler_test.py""";test_debt
Correct flaky comparison in log_handler_test.py;test_debt
Fix unreliable comparison in log_handler_test.py;test_debt
Rectify inconsistent comparison in log_handler_test.py;test_debt
Minimize unnecessary executions of unit test cases.;test_debt
Reduce redundant runs of the unit test cases.;test_debt
"""Minimize unnecessary executions of unit test cases.""";test_debt
"""Reduce redundant runs of unit test cases.""";test_debt
"""Avoid needless repetitions of unit test case runs.""";test_debt
Avoid unnecessary repetitions of the unit test cases.;test_debt
Optimize the execution of unit test cases to avoid unnecessary runs.;test_debt
Minimize the occurrence of unnecessary unit test case executions.;test_debt
"LTR Test Hardening:

Implement per-method state isolation in multiple tests. This approach prevents failures in one test from affecting the persisted data of other test methods. It also ensures compatibility with the use of -Dtests.iters > 1.
Perform cleanup in TestRerankBase to remove an unnecessary extra SolrCore that was causing leakage.";test_debt
"LTR Test Hardening:

Enhance test robustness by isolating state per method in several tests. This prevents failures in one test from impacting the persisted data of other test methods. Additionally, it ensures compatibility with the use of -Dtests.iters > 1.
Streamline TestRerankBase by removing an unnecessary extra SolrCore that was causing leakage. This cleanup eliminates unnecessary resource allocation and improves overall test efficiency.";test_debt
"""LTR Test Improvement:

Implement per-method state isolation in multiple tests...
This prevents failures in one test from affecting other test methods by keeping persisted data separate. It also ensures compatibility with -Dtests.iters > 1.
Refactor TestRerankBase to remove unneeded additional SolrCore, resolving a leakage issue.""";test_debt
"""Enhance LTR Tests:
Introduce per-method state isolation in multiple tests...
This guards against failures in one test affecting other methods by isolating persisted data. Additionally, this adaptation ensures harmony with -Dtests.iters > 1.
Optimize TestRerankBase by removing unnecessary extra SolrCore that was causing leakage.""";test_debt
"""Strengthen LTR Test Suite:
Apply per-method state isolation in several tests...
This prevents potential failures in one test from interfering with other methods, and it also ensures compatibility with -Dtests.iters > 1.
Refactor TestRerankBase to remove redundant extra SolrCore, thereby addressing leakage concerns.""";test_debt
"LTR Test Hardening:

Strengthen tests by implementing per-method state isolation in multiple cases. This prevents cross-contamination of persisted data between test methods and ensures proper behavior when running with -Dtests.iters > 1.
Optimize TestRerankBase by eliminating an extraneous SolrCore instance that was being leaked. This cleanup reduces resource usage and improves the clarity of the test code.";test_debt
"LTR Test Hardening:

Improve the reliability of tests by isolating state at the method level in various scenarios. This prevents interference between tests and ensures consistent results, even when running with -Dtests.iters > 1.
Refactor TestRerankBase to remove an unnecessary SolrCore instance that was causing leakage. This cleanup simplifies the code and eliminates any unwanted side effects during testing.";test_debt
"LTR Test Hardening:

Enhance test stability by isolating state on a per-method basis in multiple tests. This prevents unintended interactions between tests and maintains data integrity, especially when executing with -Dtests.iters > 1.
Simplify TestRerankBase by removing an extra SolrCore instance that was being leaked. This cleanup improves the clarity of the code and eliminates any unnecessary resource allocation.";test_debt
Remove the non-existent test once again (confirmed with an empty m2 repository). This action will trigger the build on Continuum.;test_debt
Exclude the non-existent test again (validated with an empty m2 repository). This will initiate the build process on Continuum.;test_debt
"""Remove fake test once more (validated with an empty m2 repository). This will initiate the build on Continuum.""";test_debt
"""Revoke fake test again (confirmed with an empty m2 repository). This action will initiate the Continuum build.""";test_debt
"""Eliminate fake test again (verified with an empty m2 repository). This will prompt the build on Continuum.""";test_debt
Remove the fake test once more (verified with an empty m2 repository). This will trigger the Continuum build.;test_debt
Eliminate the non-existent test again (confirmed with an empty m2 repository). This action will initiate the build on Continuum.;test_debt
Exclude the fake test once more (validated with an empty m2 repository). This will trigger the build process on Continuum.;test_debt
"Include additional tests to validate the fix for DFDL-471 - ""Literal (non-entity) whitespace should not be acceptable within certain properties"".";test_debt
Extend the test suite to verify the resolution of DFDL-471, which addresses the issue of accepting literal (non-entity) whitespace within specific properties.;test_debt
"""Increase the number of tests to validate the resolution for DFDL-471 - """"Literal (non-entity) whitespace should not be acceptable within certain properties"""" DFDL-471""";test_debt
"""Expand the test suite to ensure the correctness of the fix for DFDL-471 - """"Literal (non-entity) whitespace should not be acceptable within certain properties"""" DFDL-471""";test_debt
"""Include additional tests to confirm the solution for DFDL-471 - """"Literal (non-entity) whitespace should not be acceptable within certain properties"""" DFDL-471""";test_debt
Expand the test coverage to validate the fix for DFDL-471, focusing on ensuring that literal whitespace is not accepted within certain properties.;test_debt
Enhance the existing test suite with additional tests to confirm the resolution of DFDL-471, which prevents the acceptance of literal whitespace within specific properties.;test_debt
Augment the test suite by adding more tests that validate the fix implemented for DFDL-471, ensuring that literal (non-entity) whitespace is not considered acceptable within certain properties.;test_debt
Implemented initial workaround for JENA-820. Presently, it functions correctly when the output is in a line-based format. However, additional test cases need to be added, and further investigation is required to determine the implementation for block and whole file based modes.;test_debt
Introduced an initial workaround for JENA-820, which is currently effective when the output is structured in a line-based format. However, additional test cases are needed, and further exploration is necessary to devise an implementation strategy for block and whole file based modes.;test_debt
"""Initial interim solution for JENA-820 Currently functional only with line-based output. More test cases need to be incorporated, and further research is required to implement this for block and whole file modes.""";test_debt
"""Preliminary workaround for JENA-820
Presently operational solely with line-based output. Additional test cases are planned, and further investigation is needed to implement this for block and entire file modes.""";test_debt
"""Initial temporary fix for JENA-820
At the moment, functional exclusively with line-based output. Additional test cases will be added, and more research is necessary to extend this to block and whole file modes.""";test_debt
Implemented an initial solution for JENA-820, which presently operates correctly when the output follows a line-based structure. However, further test cases need to be incorporated, and additional research is required to determine the approach for implementing this workaround in block and whole file based modes.;test_debt
Deployed an initial workaround for JENA-820, addressing the issue specifically when the output is formatted as lines. However, it is essential to expand the test suite by including more cases and conduct further investigation to devise a strategy for implementing this workaround in block and whole file based modes.;test_debt
Implemented an initial resolution for JENA-820, which currently handles the problem appropriately when the output adheres to a line-based structure. To ensure comprehensive coverage, additional test cases need to be included, and further exploration is necessary to determine the methodology for implementing this solution in block and whole file based modes.;test_debt
"Enhancements to BigQueryIO.read().fromQuery():

Utilizes a randomly generated query job ID to enable retrying of source splitting.
Resolves issues related to query priority handling. Note that renaming the enum constitutes a backward incompatible change, but since this feature was non-functional, compatibility concerns are minimal.
Eliminates redundant tests for priority setting, as it only applies to queries and was tested vacuously for tables.";test_debt
"Improvements to BigQueryIO.read().fromQuery():
Enhances the source splitting process by introducing a randomly generated query job ID, facilitating retry capability.
Resolves bugs related to query priority handling. Although the enum renaming causes backward incompatibility, this feature was not functional, resulting in minimal compatibility concerns.
Eliminates unnecessary tests for priority setting, as it was erroneously tested for tables despite being applicable only to queries.";test_debt
"""Enhancements for BigQueryIO.read().fromQuery()

Utilizes a randomly generated query job ID to enhance source splitting retry capability
Resolves issues related to query priority handling. The enum renaming is a backward-incompatible change, but as this feature was non-functional, compatibility is not a concern.
Eliminates unnecessary tests for priority settings, which were not meaningful for tables and only applicable to queries.""";test_debt
"""Improvements to BigQueryIO.read().fromQuery()
Incorporates the use of a randomly generated query job ID to improve the reattempt process for source splitting
Addresses query priority handling bugs. Although the enum renaming causes backward incompatibility, given the non-functionality of this feature, compatibility concerns are negligible.
Removes redundant tests for priority settings, as these were irrelevant for tables and only applicable to queries.""";test_debt
"""Enhancements for BigQueryIO.read().fromQuery()
Enhances source splitting retry capability by implementing a randomly generated query job ID
Resolves issues related to the handling of query priority. The enum renaming introduces backward incompatibility, but since the feature was ineffective, compatibility impact is minimal.
Removes unnecessary tests concerning priority settings, as they did not apply to tables and were only relevant to queries.""";test_debt
"Enhancements made to BigQueryIO.read().fromQuery():
Introduces a randomly generated query job ID to improve the reliability of source splitting, enabling retries when necessary.
Fixes issues in the handling of query priority, acknowledging that the enum renaming may cause backward incompatibility. However, since the feature was non-functional, the impact is minimal.
Removes redundant tests related to priority setting, as it was erroneously tested for tables while being applicable only to queries.";test_debt
"Refinements to BigQueryIO.read().fromQuery():
Implements a randomly generated query job ID to enhance the source splitting process, ensuring the possibility of retries when required.
Resolves bugs associated with query priority management. While the enum renaming introduces backward incompatibility, the feature was non-functional, minimizing the impact.
Eliminates superfluous tests concerning priority setting, as it was mistakenly tested for tables despite its relevance only to queries.";test_debt
"Enhancements for BigQueryIO.read().fromQuery():
Incorporates a randomly generated query job ID to improve the source splitting functionality, enabling reliable retries if necessary.
Fixes issues related to query priority handling. Although renaming the enum may cause backward incompatibility, this particular feature had no working implementation, resulting in minimal compatibility concerns.
Removes unnecessary tests pertaining to priority setting, as they were erroneously applied to tables despite being relevant only to queries.";test_debt
Improve the test coverage of the ToStringBuilder class to achieve 100% coverage.;test_debt
Enhance the test coverage of the ToStringBuilder class to ensure complete 100% coverage.;test_debt
"""Attain complete test coverage (100%) for the ToStringBuilder class.""
";test_debt
"""Achieve full test coverage (100%) for the ToStringBuilder class.""";test_debt
"""Ensure comprehensive test coverage (100%) for the ToStringBuilder class.""";test_debt
Increase the coverage of tests for the ToStringBuilder class to achieve full 100% coverage.;test_debt
Improve the test suite for the ToStringBuilder class to encompass all scenarios and achieve 100% coverage.;test_debt
Augment the test coverage of the ToStringBuilder class to reach a comprehensive 100% coverage.;test_debt
"Linear Regression: Alignment with package manager requirements. Expanded test suite. Modified student_t_cdf() to accept signed integers for the ""nu"" argument, as PostgreSQL does not support unsigned integers.";test_debt
"Linear Regression: Compliance with package manager specifications. Increased test coverage. Updated student_t_cdf() to accept signed integers for the ""nu"" parameter, addressing the limitation in PostgreSQL's lack of support for unsigned integers.";test_debt
"""Linear Regression: Alignment with Package Manager Standards, Increased Testing, and Enhanced Compatibility
This update ensures compliance with the package manager's guidelines. Additionally, more thorough testing has been incorporated. Notably, the function student_t_cdf() has been modified to accept a signed integer as the argument ""nu"" due to PostgreSQL's lack of support for unsigned integers.""";test_debt
"""Linear Regression: Adherence to Package Manager Standards, Expanded Testing, and Improved Compatibility
This release aligns with the package manager's specifications. Furthermore, comprehensive testing has been extended. The adjustment involves the student_t_cdf() function, which now accommodates signed integers for the ""nu"" argument to cater to PostgreSQL's limitations.""";test_debt
"""Linear Regression: Complying with Package Manager Norms, Enhanced Testing, and Improved Compatibility
The update ensures alignment with the package manager's norms. Comprehensive testing has been augmented, with a significant change made to the student_t_cdf() function. It now accepts signed integers for the ""nu"" argument to account for PostgreSQL's unsigned integer limitation.""";test_debt
"Addressed package manager guidelines in Linear Regression. Expanded the scope of testing. Modified the student_t_cdf() function to accommodate signed integers as the ""nu"" argument, considering the absence of unsigned integer support in PostgreSQL.";test_debt
"Ensured adherence to package manager requirements in Linear Regression. Augmented the test suite. Modified the student_t_cdf() function to accept signed integers for the ""nu"" parameter, recognizing the limitation of unsigned integer availability in PostgreSQL.";test_debt
"Achieved compliance with package manager specifications for Linear Regression. Enhanced test coverage. Updated the student_t_cdf() function to handle signed integers as the ""nu"" argument, considering PostgreSQL's lack of support for unsigned integers.";test_debt
HIVE-11946: Address flakiness in TestNotificationListener (Authored by Jimmy, Reviewed by Sergio);test_debt
HIVE-11946: Fix flakiness in TestNotificationListener (Authored by Jimmy, Reviewed by Sergio);test_debt
"""HIVE-11946: Resolve Flakiness in TestNotificationListener (Jimmy, reviewed by Sergio)""";test_debt
"""HIVE-11946: Fix Unreliable Behavior in TestNotificationListener (Jimmy, reviewed by Sergio)""";test_debt
"""HIVE-11946: Address Flakiness in TestNotificationListener (Jimmy, reviewed by Sergio)""";test_debt
HIVE-11946: Resolve instability in TestNotificationListener (Jimmy, Reviewed by Sergio);test_debt
HIVE-11946: Address the flakiness issue in TestNotificationListener (Contributed by Jimmy, Reviewed by Sergio);test_debt
HIVE-11946: Rectify the intermittent failures in TestNotificationListener (Jimmy's contribution, Reviewed by Sergio);test_debt
"""Enhanced coverage for the package table (#3201)

Added test cases for TableMetas and TableMetaData
Replaced assertGetOk with assertGet to improve code readability
Replaced Lists.newArrayList() with Collections.singleton for better code simplicity
Replaced assertGetOk with assertGet for improved readability
Replaced Lists.newArrayList() with Collections.singletonList for enhanced code conciseness""";test_debt
"""Expanded coverage for the table package (#3201)
Introduced new test cases for TableMetas and TableMetaData
Simplified code by replacing assertGetOk with assertGet
Improved code readability by utilizing Collections.singleton instead of Lists.newArrayList()
Enhanced code clarity by replacing assertGetOk with assertGet
Streamlined code by using Collections.singletonList instead of Lists.newArrayList()""";test_debt
"""Increased test coverage for the table package (#3201)
Added additional test cases for TableMetas and TableMetaData
Improved code readability by replacing assertGetOk with assertGet
Simplified code by utilizing Collections.singleton instead of Lists.newArrayList()
Enhanced code clarity by replacing assertGetOk with assertGet
Streamlined code by using Collections.singletonList instead of Lists.newArrayList()""";test_debt
"""Enhanced test coverage for the table package (#3201)
Included new test scenarios for TableMetas and TableMetaData
Improved code readability by replacing assertGetOk with assertGet
Simplified code by utilizing Collections.singleton instead of Lists.newArrayList()
Enhanced code clarity by replacing assertGetOk with assertGet
Streamlined code by using Collections.singletonList instead of Lists.newArrayList()""";test_debt
"""Improved test coverage for the table package (#3201)
Added more comprehensive test cases for TableMetas and TableMetaData
Enhanced code readability by replacing assertGetOk with assertGet
Simplified code by utilizing Collections.singleton instead of Lists.newArrayList()
Improved code clarity by replacing assertGetOk with assertGet
Streamlined code by using Collections.singletonList instead of Lists.newArrayList()""";test_debt
"""Enhanced Package Table Coverage (#3201)

Added test cases for TableMetas and TableMetaData
Replaced 'assertGetOk' with 'assertGet', and 'Lists.newArrayList()' with 'Collections.singleton'
Replaced 'assertGetOk' with 'assertGet', and 'Lists.newArrayList()' with 'Collections.singletonList'""";test_debt
"""Enhanced Package Table Coverage (#3201)
Introduced test cases for TableMetas and TableMetaData
Substituted 'assertGetOk' with 'assertGet', and 'Lists.newArrayList()' with 'Collections.singleton'
Replaced 'assertGetOk' with 'assertGet', and 'Lists.newArrayList()' with 'Collections.singletonList'""";test_debt
"""Expanded Package Table Coverage (#3201)
Included test scenarios for TableMetas and TableMetaData
Simplified assertions by changing 'assertGetOk' to 'assertGet', and 'Lists.newArrayList()' to 'Collections.singleton'
Eliminated 'assertGetOk' in favor of 'assertGet', and 'Lists.newArrayList()' in favor of 'Collections.singletonList'""";test_debt
Remove the outdated license.txt file.;documentation_debt
Delete the obsolete license.txt from the project.;documentation_debt
Eliminate the old license.txt file from the codebase.;documentation_debt
Get rid of the previous license.txt.;documentation_debt
Remove the deprecated license.txt from the repository.;documentation_debt
Correct the typo in CASSANDRA-2873.;documentation_debt
Address the typographical error in CASSANDRA-2873.;documentation_debt
Fix the typo present in CASSANDRA-2873.;documentation_debt
Rectify the spelling mistake in CASSANDRA-2873.;documentation_debt
Amend the typo found in CASSANDRA-2873.;documentation_debt
Rectify the typo in the error message.;documentation_debt
Correct the typographical error in the error message.;documentation_debt
Amend the spelling mistake in the error message.;documentation_debt
Fix the typo found in the error message.;documentation_debt
Address the typographical error present in the error message.;documentation_debt
CAMEL-791: added missing license.;documentation_debt
CAMEL-791: Fix missing license.;documentation_debt
CAMEL-791: Added the license that was missing.;documentation_debt
CAMEL-791: Implement license addition.;documentation_debt
CAMEL-791: Included the license that was mistakenly omitted.;documentation_debt
"""Documentation updates for extensions (#9218)
Revised documentation for s3 and avro extensions
Further updates to the documentation, including improvements to the Google integration and general cleanup.""";documentation_debt
"""Documentation updates for extensions (#9218):

Updated documentation for the s3 and avro extensions.
Additional documentation updates, including improvements to the Google integration and general cleanup.""";documentation_debt
"""Documentation for Extensions (#9218):

Updated documentation for the S3 and Avro extensions.
Made further documentation updates, focusing on Google integration improvements and general cleanup.""";documentation_debt
"""Documentation Enhancements for Extensions (#9218):

Revised the documentation for S3 and Avro extensions.
Expanded documentation updates, including improvements to Google integration and overall cleanup.""";documentation_debt
"""Extension Documentation Update (#9218):

Updated the documentation for S3 and Avro extensions.
Further enhanced the documentation, focusing on Google integration and overall cleanup.""";documentation_debt
"""HDDS-1597: Removal of hdds-server-scm Dependency from ozone-common (#969)

HDDS-1597: Contribution by Elek, Marton to remove hdds-server-scm dependency from ozone-common.
Checkstyle fixes.
Reverted the import reorder of HddsUtil.
Added Javadoc.
Switched back to commons-lang2.
Fixed a typo.
Fixed the metrics core classpath problem and applied rebase fix.""";documentation_debt
"""HDDS-1597: Eliminate hdds-server-scm Dependency from ozone-common (#969)

HDDS-1597: Contribution by Elek, Marton, focusing on removing the hdds-server-scm dependency from ozone-common.
Checkstyle fixes.
Reverted the import reorder of HddsUtil.
Added Javadoc.
Reverted back to using commons-lang2.
Corrected a typo.
Resolved the metrics core classpath problem, including a rebase fix.""";documentation_debt
"""HDDS-1597: Removing hdds-server-scm Dependency from ozone-common (#969)

HDDS-1597: Contribution by Elek, Marton, removing the hdds-server-scm dependency from ozone-common.
Checkstyle fixes have been applied.
The import reorder of HddsUtil has been reverted.
Javadoc has been added.
Switched back to using commons-lang2.
Fixed a typo.
Resolved the metrics core classpath problem, including a rebase fix.""";documentation_debt
"""HDDS-1597: Eliminating hdds-server-scm Dependency from ozone-common (#969)

HDDS-1597: Contribution by Elek, Marton, removing the hdds-server-scm dependency from ozone-common.
Applied checkstyle fixes.
Reverted the import reorder of HddsUtil.
Added Javadoc.
Reverted back to using commons-lang2.
Corrected a typo.
Resolved the metrics core classpath problem, including a rebase fix.""";documentation_debt
"""HDDS-1597: Removal of hdds-server-scm Dependency from ozone-common (#969)

HDDS-1597: Contribution by Elek, Marton, focusing on removing the hdds-server-scm dependency from ozone-common.
Applied checkstyle fixes.
Reverted the import reorder of HddsUtil.
Added Javadoc.
Switched back to using commons-lang2.
Fixed a typo.
Addressed the metrics core classpath problem, including a rebase fix.""";documentation_debt
The license and notice file that were missing have been added to the camel-cm-sms component.;documentation_debt
The camel-cm-sms component now has the necessary license and notice files, which were previously not included.;documentation_debt
With the recent update, the camel-cm-sms component is now equipped with the missing license and notice file.;documentation_debt
The addition of the license and notice file to the camel-cm-sms component addresses the previous absence.;documentation_debt
The camel-cm-sms component has been updated to incorporate the required license and notice files that were previously omitted.;documentation_debt
Eliminate the 'noinspect' comment By transferring the expression result from the if statement to the assumption call, we utilize the assumption as intended, rendering the 'noinspect' comment unnecessary.;documentation_debt
Remove the 'noinspect' comment By moving the expression result inside the if statement to the assumption call, we appropriately utilize the assumption, making the 'noinspect' comment obsolete.;documentation_debt
Discard the 'noinspect' comment By shifting the result of the expression within the if statement to the assumption call, we utilize the assumption as intended, rendering the 'noinspect' comment redundant.;documentation_debt
Get rid of the 'noinspect' comment By incorporating the expression result from the if statement into the assumption call, we correctly utilize the assumption, obviating the need for the 'noinspect' comment.;documentation_debt
Remove the 'noinspect' comment By transferring the result of the expression in the if statement to the assumption call, we utilize the assumption as intended, eliminating the requirement for the 'noinspect' comment.;documentation_debt
Additional Javadoc documentation is needed.;documentation_debt
We require more Javadoc comments.;documentation_debt
There is a need for further Javadoc documentation.;documentation_debt
We should provide more Javadoc explanations.;documentation_debt
It is necessary to expand the Javadoc coverage.;documentation_debt
[Hotfix][table-common] Rectify minor typos found in ObjectIdentifier.;documentation_debt
[Hotfix][table-common] Address minor typographical mistakes in ObjectIdentifier.;documentation_debt
[Hotfix][table-common] Amend minor typos identified in ObjectIdentifier.;documentation_debt
[Hotfix][table-common] Fix slight typographical errors in ObjectIdentifier.;documentation_debt
[Hotfix][table-common] Resolve minor typos within ObjectIdentifier.;documentation_debt
Update cdn.name to cdn.domain_name in DeliveryServiceInfoForDomainList. It appears to be a typographical error. I'm attempting to retrieve the domain name of the Delivery Service from the mid cache, but it currently returns the CDN name instead.;documentation_debt
In DeliveryServiceInfoForDomainList, replace cdn.name with cdn.domain_name. There seems to be a typo here. My intention is to fetch the domain name of the Delivery Service from the mid cache, but it is currently returning the CDN name.;documentation_debt
Make a change in DeliveryServiceInfoForDomainList by substituting cdn.name with cdn.domain_name. It seems like there is a typo. I'm trying to retrieve the Delivery Service's domain name from the mid cache, but it is currently returning the CDN name instead.;documentation_debt
Adjust DeliveryServiceInfoForDomainList to use cdn.domain_name instead of cdn.name. It seems there is a typo in this case. The goal is to obtain the Delivery Service's domain name from the mid cache, but it is currently returning the CDN name.;documentation_debt
Modify DeliveryServiceInfoForDomainList to replace cdn.name with cdn.domain_name. It appears there is a typo. The intended behavior is to retrieve the Delivery Service's domain name from the mid cache, but the current output is the CDN name instead.;documentation_debt
Eliminate the debugging comment.;documentation_debt
Remove the comment used for debugging purposes.;documentation_debt
Delete the comment that was inserted for debugging.;documentation_debt
Take out the debugging comment from the code.;documentation_debt
Remove the temporary comment added for debugging.;documentation_debt
Resolve the typo in the JavaDoc of MockProducer (#4606).;documentation_debt
Fix the typographical error in the JavaDoc of MockProducer (#4606).;documentation_debt
Rectify the typo found in the JavaDoc of MockProducer (#4606).;documentation_debt
Amend the typographical mistake in the JavaDoc of MockProducer (#4606).;documentation_debt
Address the typo in the JavaDoc of MockProducer (#4606) and make the necessary correction.;documentation_debt
Rectify the typographical error in CAMEL-7731.;documentation_debt
Amend the typo found in CAMEL-7731.;documentation_debt
Address and fix the typo in CAMEL-7731.;documentation_debt
Make the necessary correction for the typo in CAMEL-7731.;documentation_debt
Resolve the typographical mistake in CAMEL-7731.;documentation_debt
Rectifying the typo in the documentation.;documentation_debt
Making the necessary correction for the typo in the documentation.;documentation_debt
Addressing and fixing the typo in the documentation.;documentation_debt
Amending the typographical error in the documentation.;documentation_debt
Resolving the typo in the documentation.;documentation_debt
"""[Hotfix] [Docs] Rectify a typo in index.md. This closes the #6193 issue.""";documentation_debt
"""[Hotfix] [Docs] Amend a typo in index.md. Issue #6193 has been resolved.""";documentation_debt
"""[Hotfix] [Docs] Fix a typo in index.md. Closing the #6193 issue.""";documentation_debt
"""[Hotfix] [Docs] Correcting a typo in index.md. This resolves issue #6193.""";documentation_debt
"""[Hotfix] [Docs] Address a typo in index.md. Issue #6193 has been closed.""";documentation_debt
"""NIFI-5390: Enhanced the documentation for DeleteByQueryElasticsearch. Closing #2865.""";documentation_debt
"""NIFI-5390: Provided additional documentation for DeleteByQueryElasticsearch. Resolving #2865.""";documentation_debt
"""NIFI-5390: Included more detailed documentation for DeleteByQueryElasticsearch. This closes issue #2865.""";documentation_debt
"""NIFI-5390: Updated the documentation for DeleteByQueryElasticsearch. Resolving #2865.""";documentation_debt
"""NIFI-5390: Added further documentation for DeleteByQueryElasticsearch. Closing issue #2865.""";documentation_debt
OF: Corrected a typo.;documentation_debt
OF: Fixed a typographical error.;documentation_debt
OF: Rectified a typo.;documentation_debt
OF: Addressed a typographical mistake.;documentation_debt
OF: Amended a typo.;documentation_debt
"""[KARAF-4660] Rectify typo in wrapper install output message. Modify the rm command to use the karaf-service file instead of the entire path.""";documentation_debt
"""[KARAF-4660] Fix typographical error in wrapper install output message. Adjust the rm command to utilize the karaf-service file rather than the complete path.""";documentation_debt
"""[KARAF-4660] Address typo in wrapper install output message. Revise the rm command to employ the karaf-service file instead of the entire path.""";documentation_debt
"""[KARAF-4660] Amend typo in wrapper install output message. Correct the rm command to utilize the karaf-service file instead of the complete path.""";documentation_debt
"""[KARAF-4660] Resolve typo in wrapper install output message. Update the rm command to use the karaf-service file instead of the full path.""";documentation_debt
"""MINOR: Rectify typos in javadoc and code comments. Closing #2595 by vahidhashemian/minor/fix_typos_1702.""";documentation_debt
"""MINOR: Amend typos in javadoc and code comments. Resolving #2595 from vahidhashemian/minor/fix_typos_1702.""";documentation_debt
"""MINOR: Address typos in javadoc and code comments. Closes issue #2595 by vahidhashemian/minor/fix_typos_1702.""";documentation_debt
"""MINOR: Fixing typos in javadoc and code comments. Resolving #2595 by vahidhashemian/minor/fix_typos_1702.""";documentation_debt
"""MINOR: Correcting typos in javadoc and code comments. Closing issue #2595 by vahidhashemian/minor/fix_typos_1702.""";documentation_debt
Typo: Corrected a typo.;documentation_debt
Typo: Fixed a typographical error.;documentation_debt
Typo: Rectified a typo.;documentation_debt
Typo: Addressed a typographical mistake.;documentation_debt
Typo: Amended a typo.;documentation_debt
"""[TRAFODION-2481] Improve the ambari section of the provisioning guide. Incorporate small screen captures to provide clearer illustrations of ambari integration. Rectify a couple of typos in the project-name macros, with gratitude to Anuradha's review. Address a bug in the ambari integration code, identified during the documentation testing process.""";documentation_debt
"""[TRAFODION-2481] Enhance the ambari section in the provisioning guide. Add small screenshots to better illustrate the integration with ambari. Correct a few typos in the project-name macros, thanks to Anuradha's review. Fix a bug in the ambari integration code that was discovered while following the documented steps.""";documentation_debt
"""[TRAFODION-2481] Improve the ambari section within the provisioning guide. Enhance the content with small screen captures to provide visual assistance for ambari integration. Rectify a couple of typos in the project-name macros, taking into account Anuradha's review. Resolve a bug in the ambari integration code, identified during the documentation verification process.""";documentation_debt
"""[TRAFODION-2481] Enhance the ambari section of the provisioning guide. Include small screenshots to better illustrate the integration process with ambari. Correct a few typos in the project-name macros, appreciating Anuradha's review. Fix a bug in the ambari integration code that was discovered by following the documented steps.""";documentation_debt
"""[TRAFODION-2481] Improve the ambari section in the provisioning guide. Incorporate small screen captures to provide clearer visual guidance for ambari integration. Rectify a couple of typos in the project-name macros, thanks to Anuradha's review. Resolve a bug in the ambari integration code, found during the process of following the documented steps.""";documentation_debt
Fix typo: Corrected a typo.;documentation_debt
Fix typo: Fixed a typographical error.;documentation_debt
Fix typo: Rectified a typo.;documentation_debt
Fix typo: Addressed a typographical mistake.;documentation_debt
Fix typo: Amended a typo.;documentation_debt
"""Pull request #430 from hilongjw/patch-1 has been merged. [doc] Spelling error has been corrected.""";documentation_debt
"""Merging pull request #430 from hilongjw/patch-[doc] Rectified a spelling error.""";documentation_debt
"""Pull request #430 by hilongjw/patch-1 has been merged. [doc] Spelling error has been fixed.""";documentation_debt
"""Merged pull request #430 submitted by hilongjw/patch-[doc] Corrected a spelling error.""";documentation_debt
"""Pull request #430 from hilongjw/patch-1 has been merged. [doc] The spelling error has been addressed.""";documentation_debt
Typos: Corrected some typos.;documentation_debt
Typos: Fixed a few typographical errors.;documentation_debt
Typos: Rectified several spelling mistakes.;documentation_debt
Typos: Addressed some typos in the text.;documentation_debt
Typos: Amended a few typographical errors.;documentation_debt
CAMEL-8023: Enhanced the JavaDoc.;documentation_debt
CAMEL-8023: Improved the JavaDoc documentation.;documentation_debt
CAMEL-8023: Fine-tuned the JavaDoc.;documentation_debt
CAMEL-8023: Polished the JavaDoc comments.;documentation_debt
CAMEL-8023: Revised and improved the JavaDoc.;documentation_debt
"ARROW-6658: [Rust][Datafusion] Implemented the AVG expression.
I was unsure about the data types for sum and count, so I chose the broadest f64 and i6It might be better to implement this as SUM()/COUNT(), but either way, the changes in mod.rs were necessary to test SQL with f64.
Closes #5558 from alippai/ARROW-6658 and incorporates the following commits:
20cddef76 <Andy Grove>: Fixed a typo.
62372f690 <Andy Grove>: Removed an unwrap.
cc32f2219 <Andy Grove>: Rebased the changes.
ebc3acbaa <Adam Lippai>: ARROW-6658: Implemented the AVG expression.
Lead-authored-by: Adam Lippai adam@rigo.sk";documentation_debt
"ARROW-6658: [Rust][Datafusion] Implemented the AVG expression.
To determine the data types for sum and count, I opted for the broadest f64 and i64 options. Additionally, there is a consideration of implementing this as SUM()/COUNT() instead. Regardless, the changes made in mod.rs were necessary for testing SQL with f64.
This closes #5558 from alippai/ARROW-6658 and includes the following commits:
20cddef76 <Andy Grove>: Fixed a typo.
62372f690 <Andy Grove>: Removed an unwrap.
cc32f2219 <Andy Grove>: Rebased the changes.
ebc3acbaa <Adam Lippai>: ARROW-6658: Implemented the AVG expression.
Lead-authored-by: Adam Lippai adam@rigo.sk";documentation_debt
"ARROW-6658: [Rust][Datafusion] AVG expression implementation.
The data types for sum and count were uncertain, so I chose the broadest f64 and i64 options. Alternatively, there is a possibility of implementing this as SUM()/COUNT(). Regardless, the changes in mod.rs were necessary to conduct SQL testing with f64.
Closes #5558 from alippai/ARROW-6658 and squashes the following commits:
20cddef76 <Andy Grove>: Fixed a typo.
62372f690 <Andy Grove>: Removed an unwrap.
cc32f2219 <Andy Grove>: Rebased the changes.
ebc3acbaa <Adam Lippai>: ARROW-6658: Implemented the AVG expression.
Lead-authored-by: Adam Lippai adam@rigo.sk";documentation_debt
"ARROW-6658: [Rust][Datafusion] Implementation of AVG expression.
Uncertainty surrounded the data types for sum and count, so I selected the broadest f64 and i64 options. It could be considered to implement this as SUM()/COUNT(). In any case, the changes made in mod.rs were necessary to facilitate SQL testing with f64.
Closes #5558 from alippai/ARROW-6658 and incorporates the following commits:
20cddef76 <Andy Grove>: Fixed a typo.
62372f690 <Andy Grove>: Removed an unwrap.
cc32f2219 <Andy Grove>: Rebased the changes.
ebc3acbaa <Adam Lippai>: ARROW-6658: Implemented the AVG expression.
Lead-authored-by: Adam Lippai adam@rigo.sk";documentation_debt
"ARROW-6658: [Rust][Datafusion] AVG expression implementation.
The data types for sum and count were unclear, so I opted for the broadest f64 and i64 options. It is worth considering implementing this as SUM()/COUNT(). Regardless, the changes made in mod.rs were necessary to conduct SQL testing with f64.
Closes #5558 from alippai/ARROW-6658 and includes the following commits:
20cddef76 <Andy Grove>: Fixed a typo.
62372f690 <Andy Grove>: Removed an unwrap.
cc32f2219 <Andy Grove>: Rebased the changes.
ebc3acbaa <Adam Lippai>: ARROW-6658: Implemented the AVG expression.
Lead-authored-by: Adam Lippai adam@rigo.sk";documentation_debt
Enhanced the error message that is generated when utilizing Holder with the Simple front end. Furthermore, removed the Aegis test for a feature that does not exist, as its sole test case has been ignored for an extended duration. Also, eliminated a misleading comment from the dynamic client unit test.;documentation_debt
Revised the error message that arises from employing Holder with the Simple front end. Moreover, eliminated the Aegis test for a nonexisting feature, which has long been marked as @Ignored. Additionally, removed a misleading comment from the dynamic client unit test.;documentation_debt
Improved the error message that is produced when using Holder with the Simple front end. In addition, removed the Aegis test for a feature that does not actually exist and has been ignored for a considerable amount of time. Furthermore, eliminated a misleading comment from the dynamic client unit test.;documentation_debt
Enhanced the error message that results from the usage of Holder with the Simple front end. Furthermore, eliminated the Aegis test for a feature that does not exist and has been marked as @Ignored for a significant period of time. Also, removed a misleading comment from the dynamic client unit test.;documentation_debt
Made improvements to the error message that occurs when utilizing Holder with the Simple front end. Additionally, removed a nonexisting feature's Aegis test, which has long been ignored. Furthermore, eliminated a misleading comment from the dynamic client unit test.;documentation_debt
Correct typographical errors.;documentation_debt
Addressed the presence of typos.;documentation_debt
Fixed any typographical mistakes.;documentation_debt
Resolved the typos in the code.;documentation_debt
Rectified the presence of errors in spelling or grammar.;documentation_debt
Enhance the contributing guide.;documentation_debt
Improve the quality of the contributing guide.;documentation_debt
Refine and polish the content of the contributing guide.;documentation_debt
Make the necessary revisions to enhance the contributing guide.;documentation_debt
Fine-tune and optimize the contributing guide.;documentation_debt
Correct the typographical error in the error ID.;documentation_debt
Address the typo in the error ID.;documentation_debt
Fix the mistake in the error ID by correcting the typo.;documentation_debt
Rectify the typo found in the error ID.;documentation_debt
Amend the error ID by eliminating the typographical error.;documentation_debt
"Implement resource page templatization (#1041) - Templatize the resources page, update the page title to ""Resources,"" add missing license headers, include additional license headers, and replace occurrences of ""creator"" with ""co-creator.""";documentation_debt
"Resource page templatization (#1041) - Introduce templatization to the resources page, modify the page title to ""Resources,"" ensure all license headers are included, add extra license headers, and replace ""creator"" with ""co-creator"" where necessary.";documentation_debt
"Enhance resource page with templatization (#1041) - Apply templatization to the resources page, change the page title to ""Resources,"" include any missing license headers, add more license headers as needed, and perform the substitution of ""creator"" with ""co-creator.""";documentation_debt
"Improvements to resource page templatization (#1041) - Refactor the resources page to utilize templatization, update the page title to ""Resources,"" ensure all license headers are present, introduce additional license headers, and perform the replacement of ""creator"" with ""co-creator.""";documentation_debt
"Refine resources page with templatization (#1041) - Implement templatization for the resources page, modify the page title to ""Resources,"" add any missing license headers, incorporate additional license headers, and substitute ""creator"" with ""co-creator"" as needed.";documentation_debt
Rectify a typographical mistake in storage.config.en.rst.;documentation_debt
Address a typo found in storage.config.en.rst.;documentation_debt
Fix a typing error in storage.config.en.rst.;documentation_debt
Amend a typographical error in storage.config.en.rst.;documentation_debt
Correct a misspelling in storage.config.en.rst.;documentation_debt
"""[AIRFLOW-2810] Rectify a typo in the Xcom model timestamp Fix a typo found in the timestamp field of the Xcom model No further testing required - the field is already defined in migrations Closes issue #3652 by andywilco to resolve the datetime typo""";documentation_debt
"""[AIRFLOW-2810] Address a typo in the Xcom model timestamp Correct a typo in the timestamp field of the Xcom model No new testing needed - the field is already present in migrations Closes #3652, contributed by andywilco, to fix the datetime typo""";documentation_debt
"""[AIRFLOW-2810] Amend a typo in the Xcom model timestamp Fix an error in the timestamp field of the Xcom model No additional testing is required as the field is already included in migrations Closes issue #3652 from andywilco, addressing the datetime typo""";documentation_debt
"""[AIRFLOW-2810] Resolve a typo in the Xcom model timestamp Fix a typographical error found in the timestamp field of the Xcom model No new testing necessary - the field is already represented in migrations Closing #3652 by andywilco to rectify the datetime typo""";documentation_debt
"""[AIRFLOW-2810] Correct a typo in the Xcom model timestamp Fix a typo discovered in the timestamp field of the Xcom model No further testing is needed as the field is already defined in migrations Closes issue #3652 reported by andywilco, addressing the datetime typo""";documentation_debt
Adjusted the code layout;documentation_debt
Corrected the code's formatting;documentation_debt
Amended the structuring of the code;documentation_debt
Rectified the format of the code;documentation_debt
Made corrections to the code's formatting;documentation_debt
Included additional introductory documentation and corrected the link for developer CVS.;documentation_debt
"Enhanced the ""getting started"" guide and rectified the developer CVS hyperlink.";documentation_debt
Expanded the beginning instructions documentation and mended the developer's CVS link.;documentation_debt
Augmented the starting guide and repaired the link leading to the developer CVS.;documentation_debt
Amplified the initial setup documentation and resolved issues with the developer CVS link.;documentation_debt
"""[GOBBLIN-751] Configurability introduced for enforced file size matching
Dear maintainers of Gobblin,
This PR is presented for your acceptance. I am aware that it will await review until all the prescribed steps are undertaken.
JIRA
Issues and their references are present in the PR title, like ""[GOBBLIN-XXX] My Gobblin PR"".
-
https://issues.apache.org/jira/browse/GOBBLIN-751

Description
Possible screenshots provided:
A better rollout strategy (selective rollout of a few datasets for verification) is achieved by making the enforced file size matching configurable when data files are copied. This configuration is applicable for different datasets during the publishing phase.

Tests
This high-quality enhancement does not necessitate any testing.

Commits
Each commit is clearly titled, and multiple commits addressing the same issue are consolidated. Furthermore, the commits adhere to the rules delineated in ""How to write a good git commit message"":
A blank line separates the subject from the body
The subject is restricted to 50 characters
The subject does not conclude with a period
The subject uses imperative mood (e.g., ""add"" instead of ""adding"")
The body has a character limit of 72 per line
6. The body elucidates the ""what"" and ""why"" rather than the ""how""
The enforced file size matching can now be set for different ConfigBasedDataset.
A spelling correction has been carried out.
#2616 is resolved by this PR, submitted by yukuai518/cuz.""";documentation_debt
"""[GOBBLIN-751] Introduced configurability for enforced file size matching
Dear Gobblin team,
Please consider this PR. I comprehend that it will not undergo review until all associated steps are completed.
JIRA
The PR title includes the issues and their references, for example, ""[GOBBLIN-XXX] My Gobblin PR"".
-
https://issues.apache.org/jira/browse/GOBBLIN-751

Description
Possible screenshots are included:
By making enforced file size matching configurable when copying data files, we ensure better rollout (selectively rolling out a few datasets for validation). This feature is adaptable to different datasets during the publishing stage.

Tests
Due to the superior quality of this amendment, testing is not required.

Commits
The subject lines of the commits are clear, and multiple commits that address the same problem have been combined. In addition, my commits align with the instructions found in ""How to write a good git commit message"":
The subject and body are separated by a blank line
The subject is confined to 50 characters
The subject does not end with a full stop
The subject is written in the imperative mood (such as ""add"", not ""adding"")
The body is wrapped at 72 characters per line
6. The body explains ""what"" and ""why"", not ""how""
The enforced file size matching can now be customized for different ConfigBasedDataset.
Spelling errors have been rectified.
This PR, proposed by yukuai518/cuz, closes #2616.""";documentation_debt
"""[GOBBLIN-751] Facilitate adjustable file size matching
Respected Gobblin custodians,
Kindly consider this PR for approval. I acknowledge that it will not be evaluated until I have completed all requisite steps.
JIRA
The PR title incorporates the relevant issues, as in ""[GOBBLIN-XXX] My Gobblin PR"".
-
https://issues.apache.org/jira/browse/GOBBLIN-751

Description
Screenshots may be included:
To enhance rollout strategy (facilitating selective rollout of certain datasets for assessment), enforced file size matching has been made adjustable during data file copying. This capability can be adapted for various datasets during the publication stage.

Tests
Given the exceptional quality of this update, testing is not deemed necessary.

Commits
The subjects of the commits are distinct, and any multiple commits pertaining to the same issue have been merged. Moreover, my commits adhere to the recommendations provided in ""How to write a good git commit message"":
The subject is separated from the body with a blank line
The subject is restricted to 50 characters
The subject does not terminate with a period
The subject adopts the imperative mood (e.g., ""add"", not ""adding"")
The body is limited to 72 characters per line
6. The body focuses on ""what"" and ""why"", not ""how""
The enforced file size matching is now adjustable for different ConfigBasedDataset.
A spelling mistake has been corrected.
This PR from yukuai518/cuz closes issue #2616.""";documentation_debt
"""[GOBBLIN-751] Enable configurable file size matching
Esteemed Gobblin administrators,
This PR is submitted for your approval. I realize that it will not be assessed until all necessary steps have been carried out.
JIRA
The PR title features the linked issues, as seen in ""[GOBBLIN-XXX] My Gobblin PR"".
-
https://issues.apache.org/jira/browse/GOBBLIN-751

Description
Screenshots might be provided:
The rollout procedure has been improved (allowing selective rollout of a few datasets for examination) by making the enforced file size matching modifiable during the copying of data files. This functionality can be adjusted for diverse datasets during the distribution phase.

Tests
Due to the premium nature of this enhancement, no testing is required.

Commits
The subjects of my commits are explicit, and I have combined multiple commits if they pertain to the same topic. Furthermore, my commits conform to the guidance given in ""How to write a good git commit message"":
The subject is separated from the body by a blank line
The subject does not exceed 50 characters
The subject does not conclude with a period
The subject uses the imperative tone (e.g., ""add"", not ""adding"")
The body is wrapped at 72 characters per line
6. The body answers ""what"" and ""why"", not ""how""
The enforced file size matching is now modifiable for different ConfigBasedDataset.
Spelling has been rectified.
The PR, submitted by yukuai518/cuz, resolves #2616.""";documentation_debt
"""[GOBBLIN-751] Configurability enabled for enforced file size matching
Respectable Gobblin supervisors,
This PR is presented for your acceptance. I comprehend that it will not be scrutinized until all mandatory steps have been taken.
JIRA
The issues are embedded in the PR title, exemplified by ""[GOBBLIN-XXX] My Gobblin PR"".
-
https://issues.apache.org/jira/browse/GOBBLIN-751

Description
Screenshots can be attached:
For a more efficient rollout process (i.e., selectively rolling out certain datasets for validation), enforced file size matching is made configurable during data file duplication. This capability is adjustable to different datasets during the propagation phase.

Tests
Given the high-quality standard of this amendment, no testing is deemed necessary.

Commits
My commits are clearly labeled, and I have merged multiple commits if they discuss the same issue. Additionally, my commits align with the instructions found in ""How to write a good git commit message"":
A blank line sets the subject apart from the body
The subject is confined to 50 characters
The subject does not terminate with a period
The subject employs the imperative tone (e.g., ""add"", not ""adding"")
The body is restricted to 72 characters per line
6. The body explains ""what"" and ""why"", not ""how""
Enforced file size matching can now be tailored for different ConfigBasedDataset.
Spelling inconsistencies have been rectified.
This PR, put forth by yukuai518/cuz, closes #2616.""";documentation_debt
[CXF-6769] Correction of a typographical error;documentation_debt
[CXF-6769] Rectification of a spelling mistake;documentation_debt
[CXF-6769] Addressed a typographic error;documentation_debt
[CXF-6769] Remedied a typo;documentation_debt
[CXF-6769] Typo rectified;documentation_debt
"""Revise Druid Console documentation for version 0.15.0 (#7697)
Refresh Druid Console guidance for 0.15.0
SQL converted to query
Inserted hyperlinks and rectified typographical errors""";documentation_debt
"""Refurbish Druid Console manuals for release 0.15.0 (#7697)
Enhance Druid Console manuals for version 0.15.0
SQL replaced with query
Integrated links and corrected spelling errors""";documentation_debt
"""Modify Druid Console guidelines for 0.15.0 edition (#7697)
Update Druid Console guidelines for 0.15.0 version
SQL changed to query
Included links and mended typographical mistakes""";documentation_debt
"""Revamp Druid Console instructions for version 0.15.0 (#7697)
Upgrade Druid Console instructions for the 0.15.0 release
SQL transitioned to query
Implemented links and fixed typos""";documentation_debt
"""Refine Druid Console documentation for 0.15.0 version (#7697)
Amend Druid Console documentation for the 0.15.0 update
SQL transformed to query
Embedded links and remedied spelling mistakes""";documentation_debt
JEDDICT-322 o.n.m.db.metadata.model typographical error correction;documentation_debt
JEDDICT-322 o.n.m.db.metadata.model typo rectification;documentation_debt
JEDDICT-322 o.n.m.db.metadata.model spelling mistake fixed;documentation_debt
JEDDICT-322 o.n.m.db.metadata.model typographic error resolved;documentation_debt
JEDDICT-322 o.n.m.db.metadata.model addressed a typo;documentation_debt
Formatting: ensure consistency with other segments;documentation_debt
Formatting: align with the style of other clauses;documentation_debt
Formatting: harmonize with other sections;documentation_debt
Formatting: maintain uniformity with other provisions;documentation_debt
Formatting: conform to the format of other clauses;documentation_debt
"GUACAMOLE-220: Rectify typographical error - replace ""that status of"" with ""the status of"".";documentation_debt
"GUACAMOLE-220: Fix typo - swap ""that status of"" for ""the status of"".";documentation_debt
"GUACAMOLE-220: Amend typographical mistake - ""that status of"" should read ""the status of"".";documentation_debt
"GUACAMOLE-220: Resolve spelling error - change ""that status of"" to ""the status of"".";documentation_debt
"GUACAMOLE-220: Adjust typo - alter ""that status of"" to ""the status of"".";documentation_debt
Corrected a typographical error;documentation_debt
Rectified a spelling mistake;documentation_debt
Fixed a typo;documentation_debt
Adjusted a typographical mistake;documentation_debt
Amended a spelling error;documentation_debt
ACCUMULO-1552 applying the patch from Jonathan Hsieh to correct the typographical error;documentation_debt
ACCUMULO-1552 implementing Jonathan Hsieh's patch to rectify the typo;documentation_debt
ACCUMULO-1552 using Jonathan Hsieh's patch to amend the spelling mistake;documentation_debt
ACCUMULO-1552 employing Jonathan Hsieh's patch to fix the typo;documentation_debt
ACCUMULO-1552 applying the patch by Jonathan Hsieh to correct the typographical mistake;documentation_debt
SOLR-789: The documentation of RandomSortField in Javadoc is illegible.;documentation_debt
SOLR-789: RandomSortField's Javadoc is not comprehensible.;documentation_debt
SOLR-789: The Javadoc for RandomSortField is unreadable.;documentation_debt
SOLR-789: The clarity of RandomSortField's Javadoc is compromised.;documentation_debt
SOLR-789: RandomSortField's Javadoc lacks readability.;documentation_debt
Camel-Kubernetes: Rectified a typographical error in Pods component documentation;documentation_debt
Camel-Kubernetes: Corrected a typo in the Pods component documents;documentation_debt
Camel-Kubernetes: Fixed a spelling mistake in the Pods component's documentation;documentation_debt
Camel-Kubernetes: Remedied a typo in the Pods component documentation;documentation_debt
Camel-Kubernetes: Adjusted a typographical error in the Pods component docs;documentation_debt
"""Correct typographical error (unattributed fix from GitHub)
Resolves: #1998""";documentation_debt
"""Rectify typo (nameless correction from GitHub)
Closes: #1998""";documentation_debt
"""Amend spelling mistake (anonymous amendment from GitHub)
Finalizes: #1998""";documentation_debt
"""Adjust typo (unidentified alteration from GitHub)
Settles: #1998""";documentation_debt
"""Fix spelling error (unnamed rectification from GitHub)
Completes: #1998""";documentation_debt
Enhanced the documentation for the sink.;documentation_debt
Improved the description of the sink.;documentation_debt
Provided a more detailed explanation for the sink.;documentation_debt
Increased clarity in the sink documentation.;documentation_debt
Elaborated on the sink documentation.;documentation_debt
"[AIRFLOW-397] Documentation: Rectify the spelling error from ""instatiating"" to ""instantiating""";documentation_debt
"[AIRFLOW-397] Documentation: Amend the typo from ""instatiating"" to ""instantiating""";documentation_debt
"[AIRFLOW-397] Documentation: Correct the misspelling of ""instatiating"" to ""instantiating""";documentation_debt
"[AIRFLOW-397] Documentation: Fix the misprint from ""instatiating"" to ""instantiating""";documentation_debt
"[AIRFLOW-397] Documentation: Adjust the typographical error from ""instatiating"" to ""instantiating""";documentation_debt
TS: Typographical error;documentation_debt
TS: Spelling mistake;documentation_debt
TS: Misprint;documentation_debt
TS: Typo detected;documentation_debt
TS: Identified a typo;documentation_debt
[hotfix][javadoc] Correct typographical error in Watermark javadoc;documentation_debt
[hotfix][javadoc] Amend typo in Watermark javadoc;documentation_debt
[hotfix][javadoc] Rectify spelling mistake in Watermark javadoc;documentation_debt
[hotfix][javadoc] Resolve typo in Watermark javadoc;documentation_debt
[hotfix][javadoc] Fix misspelling in Watermark javadoc;documentation_debt
Amendments to Javadoc;documentation_debt
Corrections made in Javadoc;documentation_debt
Rectifications in Javadoc;documentation_debt
Javadoc edits;documentation_debt
Revisions in Javadoc;documentation_debt
[hotfix][metrics][javadocs] Correct typographical error;documentation_debt
[hotfix][metrics][javadocs] Amend spelling mistake;documentation_debt
[hotfix][metrics][javadocs] Rectify typo;documentation_debt
[hotfix][metrics][javadocs] Resolve a misspelling;documentation_debt
[hotfix][metrics][javadocs] Fix a misprint;documentation_debt
Typo in JavaDoc rectified;documentation_debt
Corrected typo in JavaDoc;documentation_debt
Typographical error fixed in JavaDoc;documentation_debt
JavaDoc typo amended;documentation_debt
Typo resolved in JavaDoc;documentation_debt
"[MINOR][PYTHON] Corrected a typo in the docstring by replacing 'top' with 'topic'.

Proposed changes in this pull request involve fixing a typo found in the docstring. The word 'top' is replaced with 'topic'. The pull request is linked to issue #16967 and was submitted by rolando/pyspark-doc-typo.";documentation_debt
"[MINOR][PYTHON] Resolved a docstring typo: replaced 'top' with 'topic'.

This pull request addresses a typo in the docstring where 'top' was incorrectly used instead of 'topic'. The proposed changes aim to fix this typo. The pull request, submitted by rolando/pyspark-doc-typo, closes issue #16967.";documentation_debt
"[MINOR][PYTHON] Fixed a docstring typo: changed 'top' to 'topic'.

The purpose of this pull request is to rectify a typo in the docstring. The incorrect usage of 'top' is replaced with the appropriate term 'topic'. The pull request is associated with issue #16967 and was contributed by rolando/pyspark-doc-typo.";documentation_debt
"[MINOR][PYTHON] Rectified a typo in the docstring: replaced 'top' with 'topic'.

This pull request aims to fix a typo found in the docstring by substituting 'top' with 'topic'. The proposed changes are linked to issue #16967 and were submitted by rolando/pyspark-doc-typo.";documentation_debt
"[MINOR][PYTHON] Docstring typo fixed: replaced 'top' with 'topic'.

The commit message highlights the resolution of a docstring typo. The incorrect occurrence of 'top' is now corrected to 'topic'. This pull request, from rolando/pyspark-doc-typo, closes issue #16967.";documentation_debt
"Introduce ""AsGiven"" functions and enhance Javadoc.";documentation_debt
"Incorporate ""AsGiven"" functions and provide additional Javadoc.";documentation_debt
"Extend functionality with ""AsGiven"" functions and improve Javadoc coverage.";documentation_debt
"Implement ""AsGiven"" functions and augment Javadoc documentation.";documentation_debt
"Integrate ""AsGiven"" functions and expand Javadoc comments for enhanced clarity.";documentation_debt
Refined and improved Javadoc documentation.;documentation_debt
Enhanced the quality and clarity of Javadoc.;documentation_debt
Polished and fine-tuned the Javadoc comments.;documentation_debt
Perfected the Javadoc documentation with meticulous attention to detail.;documentation_debt
Streamlined and perfected the Javadoc for enhanced readability and understanding.;documentation_debt
Frustratingly severe compilation failure due to a typo.;documentation_debt
Experiencing an extremely poor compilation failure caused by a typo.;documentation_debt
Encountering an unbelievably bad compilation failure caused by a simple typo.;documentation_debt
Dealing with a highly disappointing compilation failure due to a typo.;documentation_debt
Facing an unexpectedly severe compilation failure as a result of a minor typo.;documentation_debt
"ARROW-1415: [GLib] Adding support for date32 and date64
This pull request, submitted by kou/glib-support-date32-and-date64, closes issue #997 and incorporates the following commits:

e3a7ca4f [Kouhei Sutou] [GLib] Fixed a typo
b88345e1 [Kouhei Sutou] [GLib] Resolved build error on macOS
c1186c37 [Kouhei Sutou] [GLib] Extracted common code
8a337000 [Kouhei Sutou] [GLib] Added support for date64 type
a1c7b0dd [Kouhei Sutou] [GLib] Added support for date32 type";documentation_debt
"ARROW-1415: [GLib] Enabling date32 and date64 support
This pull request, submitted by kou/glib-support-date32-and-date64, resolves issue #997 and incorporates the following commits:
e3a7ca4f [Kouhei Sutou] [GLib] Fixing a typo
b88345e1 [Kouhei Sutou] [GLib] Resolving build error on macOS
c1186c37 [Kouhei Sutou] [GLib] Extracting common code
8a337000 [Kouhei Sutou] [GLib] Adding support for date64 type
a1c7b0dd [Kouhei Sutou] [GLib] Introducing support for date32 type";documentation_debt
"ARROW-1415: [GLib] Enhanced support for date32 and date64
Closing issue #997, this pull request by kou/glib-support-date32-and-date64 includes the following commits:
e3a7ca4f [Kouhei Sutou] [GLib] Corrected a typo
b88345e1 [Kouhei Sutou] [GLib] Fixed build error on macOS
c1186c37 [Kouhei Sutou] [GLib] Abstracted common code
8a337000 [Kouhei Sutou] [GLib] Implemented date64 type support
a1c7b0dd [Kouhei Sutou] [GLib] Introduced date32 type support";documentation_debt
"ARROW-1415: [GLib] Adding date32 and date64 support
To address issue #997, this pull request by kou/glib-support-date32-and-date64 incorporates the following commits:
e3a7ca4f [Kouhei Sutou] [GLib] Typo fix
b88345e1 [Kouhei Sutou] [GLib] Resolved build error on macOS
c1186c37 [Kouhei Sutou] [GLib] Extracted common code
8a337000 [Kouhei Sutou] [GLib] Implemented date64 type support
a1c7b0dd [Kouhei Sutou] [GLib] Introduced date32 type support";documentation_debt
"ARROW-1415: [GLib] Improved support for date32 and date64
Pull request submitted by kou/glib-support-date32-and-date64 resolves issue #997 and incorporates the following commits:
e3a7ca4f [Kouhei Sutou] [GLib] Fixing a typo
b88345e1 [Kouhei Sutou] [GLib] Resolving build error on macOS
c1186c37 [Kouhei Sutou] [GLib] Extracting common code
8a337000 [Kouhei Sutou] [GLib] Adding support for date64 type
a1c7b0dd [Kouhei Sutou] [GLib] Introducing support for date32 type";documentation_debt
Include the omitted license header;documentation_debt
Add the required license header that was missing;documentation_debt
Incorporate the license header that was mistakenly left out;documentation_debt
Rectify the absence of the license header by adding it;documentation_debt
Ensure compliance by inserting the missing license header;documentation_debt
"""[hotfix] Typo in WindowedStream fixed. Issue #6825 is resolved with this commit.""";documentation_debt
"""[hotfix] Corrected a typo in WindowedStream. This commit closes #6825.""";documentation_debt
"""[hotfix] Fixing a typo in WindowedStream. Resolves #6825.""";documentation_debt
"""[hotfix] Typographical error in WindowedStream resolved. Closes issue #6825.""";documentation_debt
"""[hotfix] Rectify typo in WindowedStream. This commit addresses and closes #6825.""";documentation_debt
"[NETBEANS-1867] Tutorials: Typo correction - replace ""last reviewed in"" with ""last reviewed on""";documentation_debt
"This commit addresses the typo in the tutorials of the NETBEANS-1867 issue. The phrase ""last reviewed in"" is corrected to ""last reviewed on"".";documentation_debt
"[NETBEANS-1867] Tutorials: Fix typo - replace ""last reviewed in"" with ""last reviewed on""
This commit resolves the typo identified in the tutorials for NETBEANS-1867. The incorrect usage of ""last reviewed in"" has been replaced with the accurate term ""last reviewed on"".";documentation_debt
"[NETBEANS-1867] Tutorials: Typo fix - replace ""last reviewed in"" with ""last reviewed on""
The commit made for NETBEANS-1867 rectifies a typo found in the tutorials. The phrase ""last reviewed in"" has been replaced with the correct wording ""last reviewed on"".";documentation_debt
"[NETBEANS-1867] Tutorials: Correct typo - change ""last reviewed in"" to ""last reviewed on""
The commit associated with NETBEANS-1867 resolves a typo discovered in the tutorials. The incorrect phrase ""last reviewed in"" has been amended to ""last reviewed on"" for accurate representation.";documentation_debt
"[Feature][Enhancement] Accelerate 1x1 convolution (#7613)

Accelerated 1x1 convolution operation
Utilized GEMM directly without im2col or col2im in 1x1 convolution with stride=1 and pad=0. This optimization is commonly used in modern CNN networks like Googlenet, Inception, Resnet, Mobilenet, etc.
Resolved cpplint issues
Fixed linalg_impl (#7611)
Addressed indentation corrections";documentation_debt
"[Enhancement][Optimization] Improved performance of 1x1 convolution (#7613)

Implemented accelerated 1x1 convolution
Directly utilized GEMM for 1x1 convolution without im2col or col2im transformations, specifically for stride=1 and pad=0. This optimization is widely used in modern CNN networks such as Googlenet, Inception, Resnet, Mobilenet, etc.
Fixed cpplint warnings
Resolved linalg_impl issues
Corrected indentation inconsistencies";documentation_debt
"[Improvement][Convolution] Enhance 1x1 convolution operation (#7613)

Accelerated 1x1 convolution functionality
Performed GEMM computation directly without relying on im2col or col2im conversions, specifically targeting stride=1 and pad=0 scenarios. This optimization is commonly employed in modern CNN architectures like Googlenet, Inception, Resnet, Mobilenet, and more.
Addressed cpplint issues
Fixed linalg_impl problems
Rectified indentation errors";documentation_debt
"[Optimization][CNN] Boost 1x1 convolution performance (#7613)

Implemented optimization for 1x1 convolution operation
Utilized GEMM computations directly without intermediate im2col or col2im transformations, focusing on stride=1 and pad=0 scenarios. This optimization technique is widely utilized in modern CNN networks including Googlenet, Inception, Resnet, Mobilenet, and others.
Resolved cpplint warnings
Fixed linalg_impl related issues
Corrected indentation irregularities";documentation_debt
"[Enhancement][Convolution] Improve 1x1 convolution efficiency (#7613)

Enhanced performance of the 1x1 convolution operation
Eliminated the need for im2col or col2im transformations by directly utilizing GEMM computation for 1x1 convolution with stride=1 and pad=0. This optimization technique is commonly employed in modern CNN networks such as Googlenet, Inception, Resnet, Mobilenet, and similar architectures.
Addressed cpplint violations
Fixed linalg_impl errors
Rectified indentation issues";documentation_debt
Spelling mistake corrected;documentation_debt
Typo fixed;documentation_debt
Corrected spelling error;documentation_debt
Resolved misspelling;documentation_debt
Spelling correction made;documentation_debt
"ARROW-619: [Python] Corrected typo in LD_LIBRARY_PATH
The install documentation contained a typo related to LD_LIBRARY_PATH. This commit, submitted by BryanCutler/pyarrow-install-typo-ARROW-619, resolves issue #376 and includes the following commit:

e38b588 [Bryan Cutler] Fixed typo for LD_LIBRARY_PATH.";documentation_debt
ARROW-619: [Python] Typo in LD_LIBRARY_PATH fixed This commit addresses a typo found in the LD_LIBRARY_PATH of the install documentation for ARROW-619. The issue #376 is closed with this commit submitted by BryanCutler/pyarrow-install-typo-ARROW-619.;documentation_debt
"ARROW-619: [Python] LD_LIBRARY_PATH typo resolved
The commit made for ARROW-619 rectifies a typo in the LD_LIBRARY_PATH mentioned in the install documentation. It closes issue #376 and includes the following commit:

e38b588 [Bryan Cutler] Fixing typo for LD_LIBRARY_PATH.";documentation_debt
"ARROW-619: [Python] LD_LIBRARY_PATH typo correction
The commit associated with ARROW-619 fixes a typo related to LD_LIBRARY_PATH in the install documentation. This resolves issue #376 and incorporates the following commit:
e38b588 [Bryan Cutler] Corrected typo for LD_LIBRARY_PATH.";documentation_debt
"ARROW-619: [Python] Fixing typo in LD_LIBRARY_PATH
This commit submitted by BryanCutler/pyarrow-install-typo-ARROW-619 resolves issue #376 by correcting a typo found in the LD_LIBRARY_PATH section of the install documentation. The commit hash is e38b588.";documentation_debt
Typo in PNG fixed;documentation_debt
Typo in PNG format rectified;documentation_debt
Corrected a typo in the PNG file;documentation_debt
Fixed a typo in the PNG image;documentation_debt
Resolved a typo issue in the PNG format;documentation_debt
"Typo in docs fixed (""be sure to traverse"")";documentation_debt
"Typo in documentation corrected: ""be sure to traverse""";documentation_debt
"Typo in documentation fixed: ""be sure to traverse""";documentation_debt
"Documentation typo rectified: ""ensure proper traversal""";documentation_debt
"Corrected a typo in the documentation: ""make sure to traverse""";documentation_debt
Added additional annotations to the documentation;documentation_debt
Documentation enhanced with additional annotations;documentation_debt
Added supplementary annotations to the documentation;documentation_debt
Expanded documentation with extra annotations;documentation_debt
Augmented the documentation by including more annotations;documentation_debt
Typo in comment fixed: (#13933);documentation_debt
Typo in comment resolved: (#13933);documentation_debt
Comment typo fixed: (#13933);documentation_debt
Corrected a typo in the comment: (#13933);documentation_debt
Typographical error in comment rectified: (#13933);documentation_debt
[TRAFODION-2810] Typo in provisioning guide corrected.;documentation_debt
[TRAFODION-2810] Typo in the provisioning guide fixed.;documentation_debt
[TRAFODION-2810] Corrected a typo in the provisioning guide.;documentation_debt
[TRAFODION-2810] Typographical error in the provisioning guide rectified.;documentation_debt
[TRAFODION-2810] Fixing a typo in the provisioning guide.;documentation_debt
"[SQL] Expression data type matching fixed.
Additionally, documentation for various types improved.
Closes #5675 from rxin/data-type-matching-expr, and the following commits are squashed:

0f31856 [Reynold Xin] Added documentation for one more function.
27c1973 [Reynold Xin] Expanded documentation.
336a36d [Reynold Xin] Fixed expression data type matching in SQL.";documentation_debt
"[SQL] Expression data type matching issue resolved.
Documentation for various types also enhanced.
Closing #5675 from rxin/data-type-matching-expr.
Squashed commits: 0f31856 [Reynold Xin] Added documentation for an additional function.
27c1973 [Reynold Xin] Improved documentation coverage.
336a36d [Reynold Xin] Fixed expression data type matching in SQL.";documentation_debt
"[SQL] Fixed the matching of expression data types.
This commit also includes documentation improvements for various types.
Resolves #5675 by rxin/data-type-matching-expr.
The following commits are squashed:

0f31856 [Reynold Xin] Documentation added for another function.
27c1973 [Reynold Xin] Additional documentation added.
336a36d [Reynold Xin] Resolved expression data type matching issue in SQL.";documentation_debt
"[SQL] Expression data type matching bug fixed.
Documentation for different types also enhanced.
Closes #5675 authored by rxin/data-type-matching-expr.
The squashed commits include:

0f31856 [Reynold Xin] Updated documentation for one more function.
27c1973 [Reynold Xin] Expanded documentation coverage.
336a36d [Reynold Xin] Resolved issue with expression data type matching in SQL.";documentation_debt
"[SQL] Resolved expression data type matching and improved documentation for various types.
Issue #5675, contributed by rxin/data-type-matching-expr, is now closed.
The following commits have been squashed:

0f31856 [Reynold Xin] Documentation added for an additional function.
27c1973 [Reynold Xin] Documentation enhancements made.
336a36d [Reynold Xin] Fixed expression data type matching in SQL.";documentation_debt
Typo corrected.;documentation_debt
Resolved a typo.;documentation_debt
Fixed a typographical error.;documentation_debt
Rectified a typo.;documentation_debt
Typo error addressed.;documentation_debt
"Resolve minor documentation issues (#19062)

Set lower_bound(1) to ensure non-zero stride
In issue #18942, there was an error where strides became zero. To resolve this issue, the lower bounds of stride1 and stride2 have been set to 1.
Corrected a small typo
Changed 'use_unifrom' to 'use_uniform'.
Added tests to verify lower bound
Ensured that stride1 and stride2 are greater than zero.
Updated test_operator.py
Fixed a documentation error
The parameter 'name' does not exist. Refer to issue #19001.
Corrected the parameter name from 'input' to 'data'
Resolved issue #19000.
Fixed documentation
The parameter 'threshold' is not valid. Refer to issue #18999.
Fixed documentation
The context 'ctx' is not a valid parameter. Refer to issue #18990.
Fixed indentation issue
Refer to issue #18988.";documentation_debt
"Documentation issues resolved (#19062)

Set lower_bound(1) to ensure non-zero stride
Corrected a small typo ('use_unifrom' -> 'use_uniform')
Added tests to check lower bound
Updated test_operator.py
Fixed documentation error (parameter 'name' does not exist)
Corrected parameter name from 'input' to 'data'
Fixed documentation error (parameter 'threshold' is not valid)
Fixed documentation error (context 'ctx' is not a valid parameter)
Fixed indentation issue";documentation_debt
"Resolved minor documentation issues (#19062)

Ensured non-zero stride by setting lower_bound(1)
Fixed a small typo ('use_unifrom' changed to 'use_uniform')
Added tests to validate lower bound requirements
Updated test_operator.py
Fixed documentation error related to the 'name' parameter
Corrected parameter name from 'input' to 'data'
Fixed documentation error regarding the 'threshold' parameter
Fixed documentation error related to the 'ctx' parameter
Adjusted indentation as per requirements";documentation_debt
"Documentation refinements and fixes (#19062)

Addressed zero stride issue by setting lower_bound(1)
Rectified a small typo ('use_unifrom' -> 'use_uniform')
Added tests to ensure lower bound conditions are met
Updated test_operator.py
Resolved documentation error for the 'name' parameter
Corrected parameter name to 'data' instead of 'input'
Fixed documentation error regarding the 'threshold' parameter
Fixed documentation error for the 'ctx' parameter
Adjusted indentation as per the issue mentioned";documentation_debt
"Minor documentation improvements and corrections (#19062)

Implemented lower_bound(1) to prevent zero stride
Fixed a small typo ('use_unifrom' changed to 'use_uniform')
Added tests to verify the lower bound requirements
Updated test_operator.py
Resolved documentation error for the 'name' parameter
Corrected the parameter name to 'data' instead of 'input'
Fixed documentation error related to the 'threshold' parameter
Fixed documentation error for the 'ctx' parameter
Adjusted the indentation to resolve the reported issue";documentation_debt
"Generate keystore using RSA instead of DSA.
Additionally, corrected a typo.";documentation_debt
Updated keystore generation to use RSA instead of DSA. Also resolved a typo.;documentation_debt
Changed keystore generation to utilize RSA instead of DSA. Additionally, a typo was fixed.;documentation_debt
Keystore is now generated using RSA instead of DSA. Furthermore, a typo has been corrected.;documentation_debt
Modified keystore generation to employ RSA instead of DSA. Furthermore, a typo has been rectified.;documentation_debt
Fixed inconsistencies in CQLSH help. Patch by Michael Edge reviewed by Benjamin Lerer for CASSANDRA-10719.;documentation_debt
Resolved inconsistencies in CQLSH help to ensure consistency. Patch contributed by Michael Edge reviewed by Benjamin Lerer for CASSANDRA-10719.;documentation_debt
Corrected inconsistencies in the CQLSH help to achieve uniformity. The patch was provided by Michael Edge and reviewed by Benjamin Lerer for CASSANDRA-10719.;documentation_debt
Addressed inconsistencies found in the CQLSH help for better coherence. The patch, submitted by Michael Edge, underwent review by Benjamin Lerer to resolve CASSANDRA-10719.;documentation_debt
Rectified inconsistencies within the CQLSH help to establish harmony. This fix was made possible with the patch from Michael Edge and the review by Benjamin Lerer for CASSANDRA-10719.;documentation_debt
"ARROW-5184: Resolved broken links and addressed documentation warnings in Rust.
Fixed broken documentation links, both internal and external, and resolved warnings related to missing code blocks.
Closes #4172 contributed by jblondin/master, with the following commit squashed:

319effd9 <Jamie Blondin> ARROW-5184: Broken links and other documentation warnings.";documentation_debt
"ARROW-5184: Fixed broken links and documentation warnings in Rust.
Resolved broken links in the documentation, both internal and external, and addressed warnings caused by missing code blocks.
Closes #4172 from jblondin/master, with the following commit squashed:

319effd9 <Jamie Blondin> Fixing broken links and documentation warnings.";documentation_debt
"[ARROW-5184] Rust: Fixed broken links and documentation warnings.
This commit resolves broken links in the documentation, both internal and external, and fixes warnings related to missing code blocks.
Closes #4172 contributed by jblondin/master, with the following commit squashed:

319effd9 <Jamie Blondin> Resolved broken links and documentation warnings.";documentation_debt
"ARROW-5184: Documentation fixes for broken links and warnings in Rust.
The broken links in the documentation, both internal and external, have been fixed, and warnings caused by missing code blocks have been addressed.
This resolves issue #4172 by jblondin/master, with the following commit squashed:

319effd9 <Jamie Blondin> Fixed broken links and resolved documentation warnings.";documentation_debt
"[ARROW-5184] Rust: Resolved broken links and documentation warnings.
Fixed broken links in the documentation, both internal and external, and resolved warnings related to missing code blocks.
Issue #4172, contributed by jblondin/master, is now closed with the following commit squashed:

319effd9 <Jamie Blondin> Fixed broken links and documentation warnings.";documentation_debt
"Fix: JavaDoc correction for MessageListener - acknowledgement section (#5429)
Resolved a JavaDoc issue where the message acknowledgement responsibility of MessageListener was not documented.";documentation_debt
"JavaDoc fix: Corrected documentation for MessageListener's acknowledgement section (#5429)
Addressed an issue in the JavaDoc where the responsibility of message acknowledgement for MessageListener was not documented.";documentation_debt
"Fix: JavaDoc update for MessageListener's acknowledgement section (#5429)
Made a correction in the JavaDoc to properly document the responsibility of message acknowledgement for MessageListener.";documentation_debt
"JavaDoc correction: Updated acknowledgement part for MessageListener (#5429)
Resolved an issue in the JavaDoc where the message acknowledgement responsibility of MessageListener was missing from the documentation.";documentation_debt
"Fix: Updated JavaDoc for MessageListener's acknowledgement section (#5429)
Rectified an issue in the JavaDoc where the responsibility of message acknowledgement for MessageListener was not mentioned.";documentation_debt
Fixed a typo.;documentation_debt
Corrected a typographical error.;documentation_debt
Addressed a spelling mistake.;documentation_debt
Rectified a typo.;documentation_debt
Fixed a minor error in the text.;documentation_debt
Fixed typos (merged from branch_4x).;documentation_debt
Addressed typos and merged changes from branch_4x.;documentation_debt
Rectified spelling errors in the code (merged from branch_4x).;documentation_debt
Fixed typos in the code by merging changes from branch_4x.;documentation_debt
Corrected typographical mistakes in the code (branch_4x merge).;documentation_debt
Doc: Fixed documentation style of plugin fault-injection (#1322) Corrected the documentation style of the plugin fault-injection to align with the required standards.;documentation_debt
Documentation: Corrected documentation style of the plugin fault-injection (#1322) Resolved the issue with the documentation style of the plugin fault-injection to ensure consistency and adherence to the required standards.;documentation_debt
Documentation: Fixed documentation style for the plugin fault-injection (#1322) Addressed the issue with the documentation style of the plugin fault-injection, ensuring it conforms to the desired standards.;documentation_debt
Documentation fix: Adjusted documentation style of the plugin fault-injection (#1322) Rectified the documentation style of the plugin fault-injection to align with the prescribed standards and guidelines.;documentation_debt
Doc: Corrected documentation formatting for the plugin fault-injection (#1322) Made necessary adjustments to the documentation formatting of the plugin fault-injection to improve clarity and maintain consistency.;documentation_debt
Corrected typographical errors in various documents.;documentation_debt
Typo fixes in documentations. Resolved and rectified typographical errors in several documents.;documentation_debt
Documentation: Typo error corrections. Made necessary fixes to correct typographical errors found in the documentation.;documentation_debt
Fixed typos in documentations. Corrected typographical errors identified in the documents.;documentation_debt
Document updates: Typo error fixes. Updated the documents by fixing typographical errors for improved accuracy and readability.;documentation_debt
"[Documentation] Improved clarity of the dashboard Docker instructions (#4915)
Fixes #4913

Motivation
The original document had the potential to mislead users by giving the impression that there is no pre-existing Docker image available, requiring them to build one from scratch. The updated documentation aims to provide clearer guidance.";documentation_debt
"[Doc] Enhance clarity of Docker instructions for the dashboard (#4915)
Resolves #4913

Motivation
The existing document could lead users to believe that there are no pre-built Docker images available, leading them to build one from scratch. The updated documentation aims to provide clearer instructions to avoid confusion.";documentation_debt
"Improved clarity of Docker instructions in the documentation for the dashboard (#4915)
Resolving issue #4913

Motivation
The original document had the potential to confuse users by suggesting that there are no readily available Docker images. The revised documentation aims to provide clearer guidance to prevent such misunderstandings.";documentation_debt
"[Documentation] Clarified Docker instructions for the dashboard (#4915)
Resolves issue #4913

Motivation
The initial document could be misleading for users, implying the absence of pre-existing Docker images and the need to build one from scratch. The updated documentation seeks to offer clearer instructions to avoid any confusion.";documentation_debt
"[Doc] Improved clarity of Docker instructions related to the dashboard (#4915)
Fixes #4913

Motivation
The original documentation had the potential to give users the wrong impression that there are no available Docker images, requiring them to start from scratch. The updated documentation aims to provide clearer instructions to prevent such misconceptions.";documentation_debt
Fixed a typo and resolved a compilation error.;documentation_debt
Corrected a typographical error and resolved a compilation error.;documentation_debt
Addressed a typo and fixed a compilation error.;documentation_debt
Rectified a typographical mistake and resolved a compilation error.;documentation_debt
Fixed a typo that was causing a compilation error.;documentation_debt
Corrected an incorrect link in the documentation.;documentation_debt
Fixed a broken link in the documentation.;documentation_debt
Addressed an issue with an incorrect hyperlink in the documentation.;documentation_debt
Resolved a problem with an erroneous link in the documentation.;documentation_debt
Rectified a mistake in the documentation where a link was pointing to the wrong location.;documentation_debt
Corrected a typo and ensured that the faces-config file is included in the JAR.;documentation_debt
Fixed a typographical error and made sure that the faces-config file is included in the JAR.;documentation_debt
Addressed a typo and ensured the inclusion of the faces-config file in the JAR.;documentation_debt
Rectified a mistake in the text and made sure that the faces-config is included in the JAR.;documentation_debt
Fixed a typo and verified that the faces-config file is included in the JAR.;documentation_debt
Updated an obsolete comment.;documentation_debt
Fixed a comment that was outdated.;documentation_debt
Addressed an obsolete comment in the code.;documentation_debt
Rectified an outdated comment.;documentation_debt
Updated a comment that was no longer valid.;documentation_debt
Added tracing to the generated Java code and fixed a typo.;documentation_debt
Included tracing functionality in the generated Java code and corrected a typographical error.;documentation_debt
Implemented tracing for the generated Java code and addressed a typo.;documentation_debt
Enabled tracing in the generated Java code and fixed a typo.;documentation_debt
Added code tracing to the generated Java code and rectified a typographical error.;documentation_debt
Enhanced the tutorial by including all import statements (#8670).;documentation_debt
Improved the tutorial by adding all necessary import statements (#8670).;documentation_debt
Enhanced the tutorial documentation by including all required import statements (#8670).;documentation_debt
Improved the tutorial by adding all relevant import statements for comprehensive coverage (#8670).;documentation_debt
Enhanced the tutorial documentation by ensuring the inclusion of all necessary import statements (#8670).;documentation_debt
Ensured consistency of words within the context and fixed a typo (#3865).;documentation_debt
Addressed word consistency within the context and rectified a typo (#3865).;documentation_debt
Made words consistent in the context and corrected a typographical error (#3865).;documentation_debt
Ensured consistency of terminology within the context and fixed a typo (#3865).;documentation_debt
Corrected word inconsistency in the context and rectified a typographical error (#3865).;documentation_debt
Renamed a misspelled method.;documentation_debt
Corrected the spelling of a method name.;documentation_debt
Addressed a misspelled method name by renaming it.;documentation_debt
Rectified the misspelling of a method by renaming it.;documentation_debt
Fixed a typo in a method name by renaming it.;documentation_debt
Fixed a typo in the Javadoc.;documentation_debt
Corrected a typo in the Javadoc comment.;documentation_debt
Addressed a typographical error in the Javadoc.;documentation_debt
Rectified a typo in the Javadoc documentation.;documentation_debt
Fixed a spelling mistake in the Javadoc comment.;documentation_debt
Improved the formatting of README.md.;documentation_debt
Enhanced the formatting of the README.md file.;documentation_debt
Refined the formatting in README.md for better readability.;documentation_debt
Adjusted the formatting in README.md to ensure consistency.;documentation_debt
Optimized the formatting of README.md to improve its presentation.;documentation_debt
HDDS-2635: Minor fix - Corrected typo in HddsConfigKeys and ozone-default. (#274);documentation_debt
HDDS-2635: Minor typo fix in HddsConfigKeys and ozone-default. (#274);documentation_debt
Fixed a minor typo in HddsConfigKeys and ozone-default. (HDDS-2635, #274);documentation_debt
Corrected a small typo in HddsConfigKeys and ozone-default. (HDDS-2635, #274);documentation_debt
Addressed a minor typo in HddsConfigKeys and ozone-default. (HDDS-2635, #274);documentation_debt
Fixed a typo in the Javadoc.;documentation_debt
Corrected a typographical error in the Javadoc comment.;documentation_debt
Addressed a typo in the Javadoc documentation.;documentation_debt
Rectified a spelling mistake in the Javadoc.;documentation_debt
Fixed a minor error in the Javadoc by correcting a typo.;documentation_debt
"Enhanced the markdown formatting in Mango.
Primarily wrapped long lines and removed trailing whitespace in README.md and TODO.md.
Updated the default admin username and password in the test/README.md file used by dev/run.";documentation_debt
Improved the markdown formatting of Mango by wrapping long lines and removing trailing whitespace in README.md and TODO.md files. Additionally, updated the default admin username and password in the test/README.md file used by dev/run.;documentation_debt
Enhanced the readability of Mango's markdown by wrapping long lines and eliminating trailing whitespace in README.md and TODO.md files. Also, updated the default admin username and password in the test/README.md file for dev/run.;documentation_debt
Optimized the markdown in Mango by wrapping long lines and removing trailing whitespace in README.md and TODO.md files. Furthermore, modified the default admin username and password in the test/README.md file utilized by dev/run.;documentation_debt
Refined the markdown presentation in Mango by addressing long lines and eliminating trailing whitespace in README.md and TODO.md files. Moreover, adjusted the default admin username and password in the test/README.md file that is used by dev/run.;documentation_debt
[Documentation] Fixed document formatting (#4336) Corrected the formatting issue of using '##keyword' in various documents. This pull request aims to repair the document format. #4335;documentation_debt
[Doc] Fixed document formatting issue (#4336) Resolved the formatting problem where '##keyword' was used incorrectly in multiple documents. This pull request focuses on repairing the document format. #4335;documentation_debt
Documentation: Corrected document format (#4336) Addressed the formatting error observed in several documents where '##keyword' was used incorrectly. This pull request aims to repair the document format. #4335;documentation_debt
[Doc] Rectified document format (#4336) Fixed the issue with document formatting across multiple files where '##keyword' was incorrectly utilized. This pull request is dedicated to repairing the document format. #4335;documentation_debt
Documentation format fix: Repairing document format (#4336) Addressed the formatting inconsistency found in numerous documents, where '##keyword' was erroneously employed. This pull request focuses on repairing and enhancing the document format. #4335;documentation_debt
"Added the missing word. Changed """"one has too many states"""" to """"one which has too many states"""".";documentation_debt
"Typo correction (#934) Rectified a missing word in the sentence. Updated """"one has too many states"""" to """"one which has too many states"""".";documentation_debt
"Corrected typo (#934) Added the missing word to the sentence. The phrase """"one has too many states"""" has been modified to """"one which has too many states"""".";documentation_debt
"Typo fix (#934) Addressed a missing word in the sentence. Modified """"one has too many states"""" to """"one which has too many states"""".";documentation_debt
"Fixing a typo (#934) Inserted the missing word in the sentence. Altered """"one has too many states"""" to """"one which has too many states"""".";documentation_debt
Updated base README to reference the documentation site instead of the wiki, revised docs/README.md to provide information on utilizing Jekyll, and renamed elements to ensure consistency with the convention of lowercase letters separated by hyphens.;documentation_debt
Base README now directs to the documentation site instead of the wiki, revised docs/README.md to explain the usage of Jekyll, and renamed elements to adhere to the lowercase-with-hyphens convention for consistency.;documentation_debt
Updated the base README to link to the documentation site instead of the wiki, modified docs/README.md to provide details on utilizing Jekyll, and renamed various items to align with the convention of lowercase letters separated by hyphens.;documentation_debt
Revised the base README to point to the documentation site rather than the wiki, updated docs/README.md to outline the usage of Jekyll, and renamed elements to ensure conformity with the convention of lowercase letters and hyphens.;documentation_debt
Documentation improvements: Modified the base README to refer to the documentation site instead of the wiki, refined docs/README.md to clarify the utilization of Jekyll, and adjusted naming conventions to maintain consistency with lowercase letters and hyphens.;documentation_debt
"NIFI-6652 UI Fix overflowing text in variables dialog
This closes #3982.";code_debt
async servlet delete support + cleanup;code_debt
Tidying up the binding policy validators a bit more.;code_debt
"HOTFIX: Fix lgtm.com alerts (dead code and out-of-bounds error) (#4388)
This fixes two alerts flagged on lgtm.com for Apache Kafka.
This dead code alert where InvalidTypeIdException indirectly extends JsonMappingException. The flagged condition with the type test appears after the type test for the latter and thus makes its body dead. I opted to change the order of the tests. Please let me know if this is the intended behavior.
The second commit addresses this out-of-bounds alert.
More alerts can be found here. Note that my colleague Aditya Sharad addressed some of those in the now outdated #2939.";code_debt
"Improve error logging on replication write failures
If an error happens when writing a document to the target endpoint,
log it's ID, revision, error and error reason. Also added a few tests
to cover the cases where the target has validate_doc_update functions.";code_debt
"Set javadoc generation to quiet.
Get rid of some superfluous informational messages to further reduce the log sizes.";code_debt
[hotfix][yarn] Remove legacy descriptor methods;code_debt
removed Protected test accidently left in;code_debt
AMBARI-11784. Perf Cluster: Save configurations of Config Group takes 40s. (mpapirkovskyy);code_debt
don't download rat.zip if already here;code_debt
"Remove redundant data member from BaseOperator class. (#1003)
Remove the _operatorName data member from this class, and replace it
with getOperatorName() method call. This avoids storing the information
in multiple places.";code_debt
[MINOR] Remove old jekyll config file (#1198);code_debt
"ACCUMULO-4779 Improved performance of get by prefix in config (#372)
This change improves performance by caching config with a prefix.
Also removed custom method to get VFS config.  Now that getting
config by prefixes is fast, it can used for VFS.";code_debt
PathFilterStep now support by() modulation. Removed unneeded CyclicPathStepTest and SimplePathStepTest.;code_debt
more efficient header commits. COUCHDB-767;code_debt
"MINIFICPP-299: Shore up HTTP Client code
MINIFICPP-299: Resolve issue with tests taking too long
MINIFICPP-306: Resolve issue with HTTP Client code that impacted large transfers.
Changes were made that increased memory usage, but allow large transfers to succeed.
This closes #189.";code_debt
"ZOOKEEPER-3599: cli.c: Resuscitate ""old-style"" argument parsing
ZOOKEEPER-2122 added SSL support to the C client and to the `cli_st`/`mt` tools.  It introduced (much-welcome!) GNU-style `getopt_long` argument parsing, but did not try to preserve backwards compatibility.
An earlier version of this https://github.com/apache/zookeeper/pull/1131 introduced (optional) POSIX-style `getopt` argument parsing, and was consequently largely obsoleted by the SSL update.  It did, however, support ""old-style"" arguments to avoid [breaking workflows](https://xkcd.com/1172/).
This patch salvages that feature while preserving the `getopt_long` goodness.  It is ""legacy-only"" adding new positional arguments is not supported���as discussed in this thread: https://github.com/apache/zookeeper/pull/1131#pullrequestreview-320870245.
Closes #1131 from ztzg/ZOOKEEPER-3599-use-getopt-in-cli-c";design_debt
simplified key names and handling;design_debt
"[SPARK-8240][SQL] string function: concat
Closes #7486 from rxin/concat and squashes the following commits:
5217d6e [Reynold Xin] Removed Hive's concat test.
f5cb7a3 [Reynold Xin] Concat is never nullable.
ae4e61f [Reynold Xin] Removed extra import.
fddcbbd [Reynold Xin] Fixed NPE.
22e831c [Reynold Xin] Added missing file.
57a2352 [Reynold Xin] [SPARK-8240][SQL] string function: concat";code_debt
[hotfix] Resolve compiler warnings in AkkaRpcService;code_debt
"TP: adds a better view for comparing/managing params of 2 profiles (#3919)
* adds a better view for comparing/managing params of 2 profiles
* adds documentation for profile comparison view
* limits word-break css to only parameter tables
* removes use of underscorejs methods in favor or built in javascript methods
* doc changes plus minor style changes
* params key does not exist for all profiles unfortunately so need to check first
* adds changelog entry
* adds a UI test to select 2 profiles to compare
* changes visual indicator to a blue shadow";code_debt
"Merge branch 'android-feature-20160607' of https://github.com/alibaba/weex into android-feature-20160607-list-opt
* 'android-feature-20160607' of https://github.com/alibaba/weex: (21 commits)
  Revert ""* [android] update build.grade remove okhttp-ws""
  ...
# Conflicts:
#	android/sdk/src/main/java/com/taobao/weex/ui/WXRecycleImageManager.java";code_debt
TS-3452: Better debug messages for SSL_ERROR_SSL: incorporate changes suggested by sudheer to peek.;code_debt
"TINKERPOP-1478 Fixed memory leak and proper redirection of output in GremlinGroovyScriptEngine
These were bugs identified in Groovy and fixed some time ago, but given that GremlinGroovyScriptEngine is based on that class and doesn't directly use it, those fixes were never in place for it. CTR";code_debt
"TS-2094: eliminate xcrun warnings at configure time
xcrun doesn't support the --show-sdk-path option until Xcode 5. We
don't care though, because the libraries we are looking for don't
move to the SDK bundle until Xcode 5 either. It is safe to just
silence the error spew on Xcode < 5.";code_debt
cleanup;code_debt
"AMBARI-11886.  return 400 response and good error msg when user attempts
               to use API to scale a UI provisioned cluster";code_debt
"remove duplicated configuration directive
Patch by eevans for CASSANDRA-557";code_debt
Make the output of ci/docker/install/ubuntu_mklml.sh less verbose (#12422);code_debt
hbase-4959.  site.xml, adding left-hand nav for videos/pres.  book.xml, nit capitalization fix.;code_debt
HDFS-13251. Avoid using hard coded datanode data dirs in unit tests(addendum). Contributed by Ajay Kumar.;code_debt
removed old typica library;code_debt
[FLINK-15629][runtime] Remove the unused param ���restartStrategyFactory�۪ from SchedulerNGFactoryFactory#createSchedulerNGFactory(��_);code_debt
fix test + syntax cleanup (#2569);code_debt
"KAFKA-9501: convert between active and standby without closing stores (#8248)
This PR has gone through several significant transitions of its own, but here's the latest:
* TaskManager just collects the tasks to transition and refers to the active/standby task creator to handle closing & recycling the old task and creating the new one. If we ever hit an exception during the close, we bail and close all the remaining tasks as dirty.
* The task creators tell the task to ""close but recycle state"". If this is successful, it tells the recycled processor context and state manager that they should transition to the new type.
* During ""close and recycle"" the task just does a normal clean close, but instead of closing the state manager it informs it to recycle itself: maintain all of its store information (most importantly the current store offsets) but unregister the changelogs from the changelog reader
* The new task will (re-)register its changelogs during initialization, but skip re-registering any stores. It will still read the checkpoint file, but only use the written offsets if the store offsets are not already initialized from pre-transition
* To ensure we don't end up with manual compaction disabled for standbys, we have to call the state restore listener's onRestoreEnd for any active restoring stores that are switching to standbys";design_debt
"NIFI-3896 - Makes DeprecationNotice more intuitive. This closes #1799
            Update developers guide on how to deprecate a component";code_debt
Reorganized the tests classes.;code_debt
"[SPARK-31862][SQL] Remove exception wrapping in AQE
### What changes were proposed in this pull request?
This PR removes the excessive exception wrapping in AQE so that error messages are less verbose and mostly consistent with non-aqe execution. Exceptions from stage materialization are now only wrapped with `SparkException` if there are multiple stage failures. Also, stage cancelling errors will not be included as part the exception thrown, but rather just be error logged.
### Why are the changes needed?
This will make the AQE error reporting more readable and debuggable.
### Does this PR introduce _any_ user-facing change?
No.
### How was this patch tested?
Updated existing tests.
Closes #28668 from maryannxue/spark-31862.";code_debt
CLOUDSTACK-6181 Specify GB for the value of rootdisksize parameter. Add some Bytes/GB for log or exception messages. Fix Gb->GB.;code_debt
"Optimize longestMatch delimiter algorithm
The longestMatch function is called everytime after delimiters are found. On
some file types, this function was a noticable hotspot.
Although not very likely, in the worst case, the current longestMatch algorithm
could go over the entire matches list 3 times: Once for finding the location of
earliest match, once for remove any matches that start later than that
location, and once for finding longest length of those that remain. In addition,
the use of various scala functions will cause new lists to be allocated,
causing slower performance.
This modifies the algorithm to only go over the matches list once, while
keeping track of the first longest match that it has seen. Additionally, all
functional code is replace with iterative code to be more performant. Lastly,
replace the Seq with an ArrayBuffer so that we are guaranteed constant append
and constant random access on the matches sequence.
This also adds an early return in the case where there is only one match, which
is probably the most likely case.
DFDL-992";code_debt
IGNITE-12339: [ML] Remove outdated property isDistributed in Vector and Matrix classes (#7026);code_debt
SPOI-2486 #resolve #comment workaround for MapRFileSystem.getScheme();design_debt
Cleanup xbean versions;code_debt
HIVE-9381 : HCatalog hardcodes maximum append limit to 1000 (Sushanth Sowmyan, reviewed by Daniel Dai);code_debt
more debug logging;code_debt
HBASE-7066 Some HMaster coprocessor exceptions are being swallowed in try catch blocks - Revert;code_debt
"Merge pull request #4724: Adds more logging around BigQuery jobs
Adds more logging around BigQuery jobs";code_debt
"GEODE-3290: Removed effectively-dead classes FilterChain, LocalFilterChain, and RemoteFilterChain.
* this closes #653";code_debt
simplify SQL metadata storage;code_debt
Removed retry logic that doesn't work correctly.  Results in 50x retries.  This doesn't make any sense given that a single call to mutation.execute results in a 10x retry policy.;design_debt
Add a pattern to ignore URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD FindBugs warnings;code_debt
Unused import;code_debt
"[SPARK-1397] Notify SparkListeners when stages fail or are cancelled.
[I wanted to post this for folks to comment but it depends on (and thus includes the changes in) a currently outstanding PR, #305.  You can look at just the second commit: https://github.com/kayousterhout/spark-1/commit/93f08baf731b9eaf5c9792a5373560526e2bccac to see just the changes relevant to this PR]
Previously, when stages fail or get cancelled, the SparkListener is only notified
indirectly through the SparkListenerJobEnd, where we sometimes pass in a single
stage that failed.  This worked before job cancellation, because jobs would only fail
due to a single stage failure.  However, with job cancellation, multiple running stages
can fail when a job gets cancelled.  Right now, this is not handled correctly, which
results in stages that get stuck in the ���Running Stages�۝ window in the UI even
though they�۪re dead.
This PR changes the SparkListenerStageCompleted event to a SparkListenerStageEnded
event, and uses this event to tell SparkListeners when stages fail in addition to when
they complete successfully.  This change is NOT publicly backward compatible for two
reasons.  First, it changes the SparkListener interface.  We could alternately add a new event,
SparkListenerStageFailed, and keep the existing SparkListenerStageCompleted.  However,
this is less consistent with the listener events for tasks / jobs ending, and will result in some
code duplication for listeners (because failed and completed stages are handled in similar
ways).  Note that I haven�۪t finished updating the JSON code to correctly handle the new event
because I�۪m waiting for feedback on whether this is a good or bad idea (hence the ���WIP�۝).
It is also not backwards compatible because it changes the publicly visible JobWaiter.jobFailed()
method to no longer include a stage that caused the failure.  I think this change should definitely
stay, because with cancellation (as described above), a failure isn�۪t necessarily caused by a
single stage.
Closes #309 from kayousterhout/stage_cancellation and squashes the following commits:
5533ecd [Kay Ousterhout] Fixes in response to Mark's review
320c7c7 [Kay Ousterhout] Notify SparkListeners when stages fail or are cancelled.";design_debt
"BIGTOP-1684: Make container executor configurable
Make options for container executor configurable and work around the
executor crashing at startup if banned_users is not set at all. See
https://issues.apache.org/jira/browse/YARN-2847. Also synchronise
yarn.nodemanager.linux-container-executor.group setting in yarn-site.xml
with what's actually used in the filesystem and container-executor.cfg.";design_debt
ARTEMIS-350 small improvement on the writable logic;design_debt
Added ElementHelper.legalKeyValues() to Parameters to give a better exception message to Gremlin users with traversals that use parameterized-steps. E.g. addV(). Fixed #TINKERPOP-1324. CTR.;code_debt
"Add file change detection mechanism (#4475)
* Add file change detection mechanism
* Fix format.
* Make file content changed monitor easier.
* Add secondary round change and check the result.
* Update to support multiple files change monitoring.";code_debt
JAV-163 simplified tracing collector address config;code_debt
HBASE-16680 Reduce garbage in BufferChain;code_debt
HDFS-4216. Do not ignore QuotaExceededException when adding symlinks.;code_debt
[KARAF-1951]Remove workaround for KARAF-1117;design_debt
[TRAFODION-2984] Remove redundant statement;code_debt
AMBARI-18324: Externalize skip repo url check to ambari.properties instead of hardcoding it in Ambari Java code (dili);code_debt
SOLR-6892: Improve the way update processors are used and make it simpler;code_debt
"[SPARK-20606][ML] ML 2.2 QA: Remove deprecated methods for ML
## What changes were proposed in this pull request?
Remove ML methods we deprecated in 2.1.
## How was this patch tested?
Existing tests.
Closes #17867 from yanboliang/spark-20606.";code_debt
"TS-637 Remove update_records.cc
Also cleanup some discrepancies with how we use LOCAL_MANAGER
define. This is sort of a mess honestly, we ought to clean this
up better long term.";code_debt
LUCENE-2037: Add support for LuceneTestCase.getName() for backwards compatibility when reporting failed tests. Also removed The InterceptTestCaseEvents class and added as anonymous class (simplified, no reflection);code_debt
Redundant type argument;code_debt
CAMEL-15865: camel-github - Authentication with username/password removed as its no longer possible on github.;code_debt
TS-1146: consistently apply 2char indentation;code_debt
"Fix Auditing for new Bulk Import / remove warnings (#523)
* Fix Auditing for new Bulk Import / remove warnings
* Fix a bunch of warnings
* Ensure new Bulk Import requests are audited
* Remove unneeded deprecation of internal impl code for old bulk import
* Remove unnecessary Serializable for new Bulk code mapping information
* Use new bulk import in some tests when not specifically testing an old bulk import behavior
* Remove some unused variables from tests (left commented out for
  reference to ongoing improvements to client configuration code)";code_debt
reorg imports;code_debt
"Remove debug statement from test
----Release Notes----
[]
-------------
MOE_MIGRATED_REVID=114886024";code_debt
"[hotfix][table-planner-blink] Fix the redundant line break in the plan XML
This copied XmlOutput from Calcite which removes the redundant line
for each CDATA section. This file should be removed once bump to
Calcite 1.22.";code_debt
"TOBAGO-1212: Using JSR 269: Pluggable Annotation Processing API
 - Test to check the  overwritten methods
 - treeNode has some deprecated attributes";code_debt
"THRIFT-926. cpp: Fix destructor behavior of TFileTransport
Set closing_ to true before we wake up the writer thread in the
destructor.  This way the writer thread flushes the data and exits when
it is woken up.
Previously the writer thread could end up going through 2 full timeout
cycles before exiting.  The writer thread could wake up, notice it has
nothing to do since closing_ is not set, and immediately go back to
sleep.  The destructor would then proceed to call flush(), which would
wait for the writer thread to wake up (1 full time out) and clear the
forceFlush_ flag.  After flush returns, the destructor would set
closing_.  It could take the writer thread another full timeout to wake
up again and process this flag.
There were also some points where the worker threads would detect the
closing_ state in their loops and automatically close the file, but did
not zero out the file descriptor, then the destructer attempted to close
the same file.  Fix by simply zeroing out the fd_ at these points.";code_debt
HADOOP-1868 Make default configuration more responsive;code_debt
"ACCUMULO-2789 Added parameter to control the number of cells within a row
When running the stress test, it is now possible to configure the writer to
send mutations for rows that contain a random amount of column updates. This is
controlled via the --min-row-width, --max-row-width and --row-width-seed
parameters.
I did some internal shuffling to make randomly generating numbers within a
range more convenient. See the new RandomWithinRange class for details.";design_debt
extract newSystemTable method and r/m unused code in CFMetaData.  patch by jbellis;code_debt
Make ServceNow test configuration easier;design_debt
cleaned up the cdns to account for the cdn package;code_debt
"[SYSTEMML-1357] Fix value type promotion scalar-scalar operations
This patch fixes various inconsistencies of value type promotion for
scalar-scalar binary operations as shown up recently on sanity tests
that were not included in our testsuite. Furthermore, this also includes
a rework of all function and scalar objects to (1) force proper
implementation of subclasses (e.g., comparison and index functions), (2)
remove unnecessary redundancy (e.g., double-long execute, cloning,
language-depending string handling), and (3) remove unnecessary
exception handling. Finally, we now also include the problematic
testcase in our testsuite by referencing the current data generation and
algorithm scripts.";code_debt
"Merge pull request #1246 from dneuman64/master
remove unused imports";code_debt
Fixed hard coded strings in stratos-installer setup.sh script;code_debt
"TS-4196: Memory leak from main_thread on shutdown
This closes #467";code_debt
"implementation of AvailablePort.isPortAvailable for multicast
The AvailablePort utility has not had support for finding a free multicast
port since feature/GEODE-77 was merged to the develop branch.  This change-
set enables the old multicast code in AvailablePort and implements the
check & response for its datagrams in JGroupsMessenger.  The JGroups
transport method for receiving packets is overridden to look for these
datagrams and respond to them.
I also renamed AvailablePort.JGroups to AvailablePort.MULTICAST, which
describes the kind of port that's being tested a little better.";code_debt
convert internal_insert to use more-efficient RowMutation constructor;code_debt
cleanup;code_debt
[BEAM-9543] fixed code style;code_debt
added more predicates and a helper header() method to build easier and more powerful expressions and predicates;design_debt
Change indentation;code_debt
"Change TM2 manager params to be multiline
Changes function definitions and calls to put each param on its own
line. These managers have a large number of parameters. This makes it
easier to read, and makes diffs better.
Fixes #2012";design_debt
Cleanup stax dependencies that are no longer needed.;code_debt
HBASE-4054 Usability improvement to HTablePool;design_debt
- Indentation;code_debt
HADOOP-16157. [Clean-up] Remove NULL check before instanceof in AzureNativeFileSystemStore;code_debt
"Matrix: Fix starting index in extract functions
JIRA: MADLIB-1006";code_debt
"[SPARK-11443] Reserve space lines
The trim_codeblock(lines) function in include_example.rb removes some blank lines in the code.
Closes #9400 from yinxusen/SPARK-11443.";code_debt
LUCENE-4666: Simplify CompressingStoredFieldsFormat merging.;code_debt
73744: CSV performance - Improved text serialization mr csv write (output writable, dense/sparse/empty serialize);code_debt
[streaming] streamrecord remake + cleanup;code_debt
add an AbstractTransformingEnricher, to make it easy to write enrichers which combine sensors and amend type hierarchy for other enrichers, and update ShellUtils;design_debt
Remove dead _all_docs code;code_debt
Polished;code_debt
"[SPARK-15953][WIP][STREAMING] Renamed ContinuousQuery to StreamingQuery
Renamed for simplicity, so that its obvious that its related to streaming.
Existing unit tests.
Closes #13673 from tdas/SPARK-15953.";code_debt
"support isNull on Maybe, including an ""absent because null"" semantics.
simplifies api usage when contexts handle null differently, but a present null is confusing.";code_debt
"[FLINK-16661] Move the static job id setting to ApplicationDispatcherBootstrap
HA support and static Job Ids go hand-in-hand, as HA requires that
the id of a job graph stays fixed across consecutive executions. In
addition, no 2 jobs can have the same job id while executing on the
same cluster. This commit consolidates this logic (in the context
of Application Mode) in one place, the ApplicationDispatcherBootstrap.";design_debt
"separate dql from dml
support create select
optimize code structure";code_debt
Simplify;code_debt
"[SPARK-4516] Avoid allocating Netty PooledByteBufAllocators unnecessarily
Turns out we are allocating an allocator pool for every TransportClient (which means that the number increases with the number of nodes in the cluster), when really we should just reuse one for all clients.
This patch, as expected, greatly decreases off-heap memory allocation, and appears to make allocation only proportional to the number of cores.
Closes #3465 from aarondav/fewer-pools and squashes the following commits:
36c49da [Aaron Davidson] [SPARK-4516] Avoid allocating unnecessarily Netty PooledByteBufAllocators";design_debt
89826: SystemML Engine - Cleanup instruction generation/parsing lu/qr/eigen (use common operand delimiters);code_debt
Fixed missed warning;code_debt
"[BEAM-5600, BEAM-2939] Add SplittableParDo expansion logic to runner's core.
Update Flink, Spark, and Samza to use it removing the unnecessary expansion within the Python portable runner.";code_debt
ACCUMULO-1111 - fixed infinite loops clobering the stack;design_debt
"Merge pull request #1665 from shapeblue/jsb/4.9.1.0-version
Changes database upgrade script names to be consistent for the 4.9.1.0 release  * Changes the names of the schema-490to491* scripts to
  schema-490to4910*
  * Changes the name of the Upgrade490to491 class to Upgrade490to4910
  * Modifies the Marvin setup.py script to use version 4.9.1.0-SNAPSHOT
/cc @rhtyd @karuturi
* pr/1665:
  Renames of 4.9.0->4.9.1.0 upgrade scripts to match the four position version scheme";code_debt
Use java.io.tmpdir instead of hardcoded /tmp;code_debt
"[broker] Close topics that remain fenced forcefully (#8561)
### Motivation
The other day, we faced a problem where a topic remained fenced and unavailable. This topic remained unavailable until it was unloaded. The following is the broker log at that time.
We were maintaining the ZooKeeper servers, so I think this phenomenon was caused by the shutdown of some ZK servers. However, the causal relationship has not been clarified.
### Modifications
As a workaround, close the topic if it remains fenced for a period of time. Reconnecting from the clients will instantiate a new `PersistentTopic` topic and the topic will back to normal.";design_debt
"Remove unused code
rename package name";code_debt
Futon: Simplify placeholder fallback using jQuery live focus events.;code_debt
"Temporary fix. Do not reset OutputStream.
Java standard console closes the output but that is System.err
initially. The effect is that stderr is closed for the whole
application.";design_debt
NIFI-730: Added error messages if we fail to drop FlowFiles from queue;code_debt
KYLIN-2266 Reduce memory usage for building global dict;design_debt
HDDS-3068. OM crash during startup does not print any error message to log. (#599);code_debt
"[SPARK-2652] [PySpark] Turning some default configs for PySpark
Add several default configs for PySpark, related to serialization in JVM.
spark.serializer = org.apache.spark.serializer.KryoSerializer
spark.serializer.objectStreamReset = 100
spark.rdd.compress = True
This will help to reduce the memory usage during RDD.partitionBy()
Closes #1568 from davies/conf and squashes the following commits:
cd316f1 [Davies Liu] remove duplicated line
f71a355 [Davies Liu] rebase to master, add spark.rdd.compress = True
8f63f45 [Davies Liu] Merge branch 'master' into conf
8bc9f08 [Davies Liu] fix unittest
c04a83d [Davies Liu] some default configs for PySpark";code_debt
"Correcting integration tests structure (#2293)
* correcting integration tests structure
* correcting build file";code_debt
coding style;code_debt
"AMBARI-20277. ""Ambari Server Performance"" alert gets triggered repeatedly (GET cluster API call taking more than 10 seconds). (mpapirkovskyy)";design_debt
better error emitting for mismatched rules;code_debt
[TEST] Remove script that references previously removed content. (#2596);code_debt
"package.sh: cleaning up formatting
No logic changes made. Tested no syntax errors added.";code_debt
Unnecessary fully qualified name;code_debt
CAMEL-6782: Polished.;code_debt
"[SPARK-6575][SQL] Converted Parquet Metastore tables no longer cache metadata
https://issues.apache.org/jira/browse/SPARK-6575
Closes #5339 from yhuai/parquetRelationCache and squashes the following commits:
83d9846 [Yin Huai] Remove unnecessary change.
c0dc7a4 [Yin Huai] Cache converted parquet relations.";code_debt
Remove redundant wiki manipulation code, amend Maven 1 build to remove references to the code, and to the dependent jars.;code_debt
fix some code style;code_debt
"[SPARK-6752] [STREAMING] [REVISED] Allow StreamingContext to be recreated from checkpoint and existing SparkContext
This is a revision of the earlier version (see #5773) that passed the active SparkContext explicitly through a new set of Java and Scala API. The drawbacks are.
* Hard to implement in python.
* New API introduced. This is even more confusing since we are introducing getActiveOrCreate in SPARK-7553
Furthermore, there is now a direct way get an existing active SparkContext or create a new on - SparkContext.getOrCreate(conf). Its better to use this to get the SparkContext rather than have a new API to explicitly pass the context.
So in this PR I have
* Removed the new versions of StreamingContext.getOrCreate() which took SparkContext
* Added the ability to pick up existing SparkContext when the StreamingContext tries to create a SparkContext.
Closes #6096 from tdas/SPARK-6752 and squashes the following commits:
53f4b2d [Tathagata Das] Merge remote-tracking branch 'apache-github/master' into SPARK-6752
f024b77 [Tathagata Das] Removed extra API and used SparkContext.getOrCreate";design_debt
Fixed some intellij warnings.;code_debt
Log more information if a sampler causes an error;code_debt
code tidy, completed merge of old Entity.properties and .activity to .attributes, with type changed from Activity to AttributeMap;code_debt
HADOOP-8686. Fix warnings in native code. Contributed by Colin Patrick McCabe;code_debt
"Do not put trace info in DataTable when trace is not enabled (#2052)
Fix the issue where trace info is set in DataTable even when trace is not enabled
When encountered exception, still put request id into data table
Will clean up Trace in another PR for performance";code_debt
Delete unused;code_debt
"DRILL-4690: initial support for CORS
Added CrossOriginFilter to WebServer based on option HTTP_ENABLE_CORS
Fixed issues related to style
Restricted headers, added run of filterChain
Filter from org.eclipse.jetty.servlets
Enabled configuration, jetty version 9.1.5, restrict filtered paths
CORS by default disabled, reduced size of dependencies (reset maxsize)
This closes #507";code_debt
"fix : Fix style for header (sqllab) (#11980)
* Fix style for header
* flex
* Refactor
* Remove styled from import
* Change width of container
* Add tooltip and set fixed width of sidebar
* Fix lint";code_debt
PHOENIX-2599 PhoenixRecordReader does not handle StaleRegionBoundaryCacheException;code_debt
Minor formatting fix for the properties mentioned in the section on Grape (closes #12);code_debt
"server: double check host capacity when start/migrate a vm (#3728)
When start a vm or migrate a vm (away from a host in host maintenance), cloudstack will check capacity of all hosts and choose one. If there are hundreds of hosts on the platform, it will take some seconds. When cloudstack choose a host and start/migrate vm to it, the resource consumption of the host might have been changed. This normally happens when we start/migrate multiple vms.
It would be better to double check the host capacity when start vm on a host.
This PR includes the fix for cpucore capacity when start/migrate a vm.";design_debt
minor cleanup based on feedback in review request;code_debt
"ARROW-7162: [C++] Cleanup warnings in cmake_modules/SetupCxxFlags.cmake
Closes #5828 from pitrou/ARROW-7162-cleanup-clang-warnings and squashes the following commits:
e6cb6cd2a <Antoine Pitrou> ARROW-7162:  Cleanup warnings in cmake_modules/SetupCxxFlags.cmake";code_debt
IGNITE-8347 Memory leaks on restart Ignite node with enabled persistence at ThreadLocal - Fixes #3891.;design_debt
Fixed possible resource leak in checkpoint's write thread;design_debt
This closes #2413;code_debt
Make grpc dependency optional.;code_debt
[MINOR] remove some unused fields and correct comment typo;code_debt
"Add current buff to keep buffer sane when parsing syntax errors
Add leftShift for groovy execution support
Split up command execute for wee cleaner code";code_debt
"ACCUMULO-2224 Make ZooSession more resiliant in the face of transient DNS issues.
* retries if host is not found, up to 2xZK timeout (same as other IOExceptions), rather than bailing on any host name problem.
* adds utility method for getting the max time the JVM will cache host failures
* add test for said method";design_debt
BROOKLYN-108: use right installDir on rebind;code_debt
"Merge pull request #555 from lburgazzoli/github-553
Randomize http test port";code_debt
"[ZEPPELIN-502] Python interpreter group
### What is this PR for?
Adding a python 2 &3 interpreter. It's a basic implementation (no py4j for example), with a java ProcessBuilder object used to instantiate a python REPL.
The interpreter doesn't bring it own python binary but uses the python specified by python.path configutation. Thus, you can still use your specific installed python modules (scikit-learn, matplotlib...) and the interpreter is able to work with python 2 & 3 without change.
I had a python helper  function (zeppelin_show() ) to easily display matplotlib graph as SVG.
### What type of PR is it?
[Feature]
### Todos
### What is the Jira issue?
[ZEPPELIN-502](https://issues.apache.org/jira/browse/ZEPPELIN-502?jql=project%20%3D%20ZEPPELIN%20AND%20text%20~%20%22python%22)
### How should this be tested?
1. In interpreter screen, in Python section, specify in python.path the python binary you want to use
2. In a paragraph, you can use the interpreter with **_%python_**. Calling help() will describe you the interpreter functionnalities.
3. Install py4j (pip install py4j) if you want to use input form
### Screenshots
### Questions:
* Does the licenses files need update? Yes, only bin-license (py4j)
* Is there breaking changes for older versions? No
* Does this needs documentation? Yes
Closes #869 from hriviere/PR_interpreter_python and squashes the following commits:
80b6e75 [Herv̩ RIVIERE] [ZEPPELIN-502] move BSD py4j license to zeppelin-distribution/src/bin_license/license
a4b82a5 [Herv̩ RIVIERE] [ZEPPELIN-502]Improving doc following @AhyoungRyu review
3252353 [Herv̩ RIVIERE] [ZEPPELIN-502] Formatting code to respect project convention
54ec4f1 [Herv̩ RIVIERE] [ZEPPELIN-502]Improving doc following @AhyoungRyu review
6a831bc [Herv̩ RIVIERE] [ZEPPELIN-502] Add BSD py4j license
11e1b9c [Herv̩ RIVIERE] [ZEPPELIN-502] minor changes in python.md
e5d0bdb [Herv̩ RIVIERE] [ZEPPELIN-502] change PYTHON_PATH to ZEPPELIN_PYTHON
c62ac98 [Herv̩ RIVIERE] [ZEPPELIN-502] Improve python.md
5008125 [Herv̩ RIVIERE] [ZEPPELIN-502] Improve python.md with features not yet supported and technical description
7d533e1 [Herv̩ RIVIERE] [ZEPPELIN-502] Add tests and reformating code to help tests writing
fecaf25 [Herv̩ RIVIERE] [ZEPPELIN-502] Rename python.path to python and default from /usr/bin/python to python
02d1320 [Herv̩ RIVIERE] [ZEPPELIN-502] Input form, change from simple input form to native (pyspark syntax)
60d2956 [Herv̩ RIVIERE] [ZEPPELIN-502] Indent as pep8 convention
9bdb192 [Herv̩ RIVIERE] [ZEPPELIN-502] Add python.md to _navigation.html
7142aa5 [Herv̩ RIVIERE] [ZEPPELIN-502] Catch exception in logger.error
1a86ad7 [Herv̩ RIVIERE] [ZEPPELIN-502] Python interpreter group";design_debt
CAMEL-3458: Fixed Bindy in fixed length mode to throw exception if field is larger than allowed length. Added option clip so you can clip the field when this happens, to workaround this issue.;design_debt
"[SPARK-34585][SQL] Remove no longer needed BatchWriteHelper
### What changes were proposed in this pull request?
As a follow-up to SPARK-34456, this PR removes `BatchWriteHelper` completely.
### Why are the changes needed?
These changes remove no longer used code.
### Does this PR introduce _any_ user-facing change?
No.
### How was this patch tested?
Existing tests.
Closes #31699 from aokolnychyi/spark-34585.";code_debt
SOLR-12289: Add more MDC logging information to collection admin requests;code_debt
"[SPARK-34220][ML] BucketedRandomProjectionLSH transform optimization
### What changes were proposed in this pull request?
use GEMV instead of DOT
### Why are the changes needed?
1, better performance, could be 20% faster than existing impl
2, simplify model saving
### Does this PR introduce _any_ user-facing change?
No
### How was this patch tested?
existing testsuites
Closes #31313 from zhengruifeng/random_project_opt.";code_debt
"MINOR: Upgrade to Gradle 2.13
There are a few improvements in 2.12 and 2.13. I am particularly interested in the performance improvements:
* 2.12: ""This release brings support for compile only dependencies, improved build script compilation speed and even better IDE support.""
* 2.13: ""We've achieved performance improvements during Gradle's configuration and execution phase, where we have measured up to 25% improvements to build time in our performance tests. No changes to your build script are necessary to start taking advantage of these improvements.""
Closes #1271 from ijuma/gradle-2.13";code_debt
"ACCUMULO-2994 Add explicit prefixes for iterator scopes and remove unnecessary configuration parsing.
When reading the Accumulo configuration, all configuration entries for all scopes were read. This
is highly unnecessary as all that was done was to warn against invalid table properties. Instead,
we can use the provided IteratorScope to explicitly pull out just the data that is needed from
the configuration, to reduce this processing.";code_debt
code style;code_debt
camel-google-drive fixed switch/cases indentation see CAMEL-14540;code_debt
Remove extraneous ExecutionContext parameter to BaseStepContext;code_debt
"GEODE-4688: Refactor the addServerLocatorEPs (#220)
- pass PoolFactory by reference
- improve readability by converting to C++11";code_debt
chore: clean up aphrodite (#10883);code_debt
"GEODE-2194: Fix Pulse webapp context
* Pulse no longer has redundant URLs like http://localhost/pulse/pulse/pulseVersion
* this closes #335";design_debt
HDFS-7932. Speed up the shutdown of datanode during rolling upgrade. Contributed by Kihwal Lee.;code_debt
SOLR-10420: fix watcher leak in DistributedQueue;design_debt
CLOUDSTACK-8656: network related exception logging;code_debt
Renamed DoNothingGraphStrategy to DefaultGraphStrategy which eliminates worrying about how to write a nicer toString.;code_debt
DISPATCH-966 - Improved logging in the router engine so long bodies don't cause back-traces to be truncated.;code_debt
"CLOUDSTACK-6859:Management Server PermGen run out of memory after some
time due to class leak.";design_debt
YARN-10207. CLOSE_WAIT socket connection leaks during rendering of (corrupted) aggregated logs on the JobHistoryServer Web UI. Contributed by Siddharth Ahuja;design_debt
"ARROW-2918: [C++]��Improve formatting of Struct pretty prints
cc @kszucs
Closes #2327 from xhochy/ARROW-2918 and squashes the following commits:
22b9a313 <Korn, Uwe> ARROW-2918: ��Improve formatting of Struct pretty prints";code_debt
YARN-10536. Client in distributedShell swallows interrupt exceptions (#2554);code_debt
"[FLINK-9735][tests] Potential leak in RocksDBResource
This closes #6660.";design_debt
[MINOR] clean up and add comments to flink client (#2261);code_debt
[hotfix] Fix exception message;code_debt
"[FLINK-7989][yarn] Do not upload the flink-dist jar twice
We always add the dist.jar ourselves, but it could also be inside a shipped
folder such as the ""lib/"" folder and was then distributed multiple times.
This closes #4951.";code_debt
a little bit of code cleanup;code_debt
"YARN-9074. Consolidate docker removal logic in ContainerCleanup.
           Contributed by Zhaohui Xin";design_debt
ACCUMULO-1505 - fixing up some warnings in the patch;code_debt
Fix eol-style;code_debt
Remove duplicated lombok annotations in the pulsar-broker module (#6130);code_debt
"HTTP Defaults - removed unneeded values
Fixed ALL feature of regexFunction
Fixed function replacement in config elements";code_debt
TS-1475: fix clang warning;code_debt
AMBARI-17117. Fix misnamed Zookeeper connect strings in Log Search (Miklos Gergely via oleewere);code_debt
Clean up inactive iscsi sessions when VMs get moved due to crashes (#3819);design_debt
AVRO-1923: Stop infinite recursion in GenericData.toString;design_debt
Get rid of warnings, but don't break spring2 support;code_debt
OF: simplify loop (don't need v);code_debt
CAMEL-1834: Message content sent to exception handler should be re-readable;code_debt
Cleanup the console output in OfflineClusterIntegrationTest (#5536);code_debt
"[SPARK-8945][SQL] Add add and subtract expressions for IntervalType
JIRA: https://issues.apache.org/jira/browse/SPARK-8945
Add add and subtract expressions for IntervalType.
This patch had conflicts when merged, resolved by
Committer: Reynold Xin <rxin@databricks.com>
Closes #7398 from viirya/interval_add_subtract and squashes the following commits:
acd1f1e [Liang-Chi Hsieh] Merge remote-tracking branch 'upstream/master' into interval_add_subtract
5abae28 [Liang-Chi Hsieh] For comments.
6f5b72e [Liang-Chi Hsieh] Merge remote-tracking branch 'upstream/master' into interval_add_subtract
dbe3906 [Liang-Chi Hsieh] For comments.
13a2fc5 [Liang-Chi Hsieh] Merge remote-tracking branch 'upstream/master' into interval_add_subtract
83ec129 [Liang-Chi Hsieh] Remove intervalMethod.
acfe1ab [Liang-Chi Hsieh] Fix scala style.
d3e9d0e [Liang-Chi Hsieh] Add add and subtract expressions for IntervalType.";code_debt
"GEODE-4822 fix AnalyzeSerializablesJUnitTest's ""actualDataSerializables.dat""
Stop emitting bytecodes into this file - they are no longer used or expected";code_debt
"implement the Next/Previous Button with the ""Navigation.java"" Class. The old PresentationController and SychronizeNavigationPhaseListener are no longer needed.";code_debt
More error logging to apis;code_debt
TS-953: consolidate string copy/concat for the iocore/net.;code_debt
"[hotfix][runtime] Fix code-style in ZooKeeperJobGraphStore
This closes #11996.";code_debt
"GEODE-7885: Improve RedisLockService - fix synchronization and memory leak (#4819)
* GEODE-7885: Improve RedisLockService - fix synchronization and memory leak
- RedisLockService was not able to automatically free keys/locks after
  unlocking since keys were also beging referenced in regions.
- Fix synchronization while iterating over keySet to avoid
  ConcurrentModifiactionExceptions.";design_debt
HIVE-14960: Improve the stability of TestNotificationListener (Marta Kuczora via Aihua Xu);code_debt
Amend HDFS-799. Remove unnecessary tls check. Contributed by Colin Patrick McCabe;code_debt
code tidy of ArchiveBuilder;code_debt
Removing unnecessary activator from autoscaler;code_debt
Error message fix for monotonic map;code_debt
LUCENE-6553: Simplify how live docs are applied.;code_debt
Remove unused wicket components from Traffic Monitor;code_debt
Moved hardcoded dependency versions to properties tag in pom.xml (#1582);code_debt
"SAMZA-1122 Rename ExecutionEnvironment to ApplicationRunner
Some refactoring/cleanup:
- rename ExecutionEnvironment to ApplicationRunner, including all the subclasses.
- rename the package to be org.apache.samza.runtime
- rename the StandalondApplicationRunner to be LocalApplicationRunner
Closes #76 from xinyuiscool/SAMZA-1122 and squashes the following commits:
cff5206 [Xinyu Liu] Merge branch 'SAMZA-1122' of https://github.com/xinyuiscool/samza into SAMZA-1122
c341d3d [Xinyu Liu] SAMZA-1122: Rename ExecutionEnvironment to ApplicationRunner
6a71205 [Xinyu Liu] SAMZA-1122: Rename ExecutionEnvironment to ApplicationRunner";code_debt
remove code for old parser;code_debt
"add debug log message for missing callback
patch by Aaron Morton and jbellis for CASSANDRA-2081";code_debt
"Reformatted to JMeter conventions.
Minor JavaDoc updates (mostly formatting).
No code changes.";code_debt
GEODE-1938: Remove the exception ignore when a pool cannot connect to a server;code_debt
Remove trailing white spaces;code_debt
"Update fe-idea-dev.md (#4852)
* Update fe-idea-dev.md
use `brew install thrift@0.9` to install thrift 0.9.3.1
`brew edit thrift090 | head` shows thrift@0.9 uses thrift 0.9.3.1
Future<?> submit(Runnable task)
Submits a Runnable task for execution and returns a Future representing that task. The Future's get method will return null upon successful completion.";code_debt
Minor updates to CXFNonSpringJaxrsServlet to make it simpler to override methods creating Application;code_debt
fix: make boxplot transform more reasonable: add config.itemNameFormatter and remove config.layout.;design_debt
"groovydoc
 - added hyperlinks for method detail return types
 - included import foo.* in type resolution
 - fixed odd fonts from stylesheet";code_debt
[SCB-928] simplify the implementation of SwaggerParamCollectionFormat.joinParam();code_debt
TOMEE-2277 Java 11 More refined module names;code_debt
rearrange playbook to more easily support building locally and PRs;design_debt
"Support collector service instrumentation (#730)
* Collector instrument agent.
* Make the agent.jar output to the /agent folder in collector package.
* Try to add metric annotation.
* Change the instrument ways.
* Reformat.
* Finish the agent codes. Wait for @peng-yongsheng 's metric requirements.
* Debug new instrument.
* Fix a detect bug.
* Finish the instrument
* Fix compile issue.";code_debt
"CommonCommands.downloadUrlAs improvements
- Cleans up CommonCommands.downloadUrlAs to support passiong in
  multiple URLs (to try each until one works), and for use in more
  simple download scenarios
- Adds tests";design_debt
"[SPARK-9143] [SQL] Add planner rule for automatically inserting Unsafe <-> Safe row format converters
Now that we have two different internal row formats, UnsafeRow and the old Java-object-based row format, we end up having to perform conversions between these two formats. These conversions should not be performed by the operators themselves instead, the planner should be responsible for inserting appropriate format conversions when they are needed.
This patch makes the following changes:
- Add two new physical operators for performing row format conversions, `ConvertToUnsafe` and `ConvertFromUnsafe`.
- Add new methods to `SparkPlan` to allow operators to express whether they output UnsafeRows and whether they can handle safe or unsafe rows as inputs.
- Implement an `EnsureRowFormats` rule to automatically insert converter operators where necessary.
Closes #7482 from JoshRosen/unsafe-converter-planning and squashes the following commits:
7450fa5 [Josh Rosen] Resolve conflicts in favor of choosing UnsafeRow
5220cce [Josh Rosen] Add roundtrip converter test
2bb8da8 [Josh Rosen] Add Union unsafe support + tests to bump up test coverage
6f79449 [Josh Rosen] Add even more assertions to execute()
08ce199 [Josh Rosen] Rename ConvertFromUnsafe -> ConvertToSafe
0e2d548 [Josh Rosen] Add assertion if operators' input rows are in different formats
cabb703 [Josh Rosen] Add tests for Filter
3b11ce3 [Josh Rosen] Add missing test file.
ae2195a [Josh Rosen] Fixes
0fef0f8 [Josh Rosen] Rename file.
d5f9005 [Josh Rosen] Finish writing EnsureRowFormats planner rule
b5df19b [Josh Rosen] Merge remote-tracking branch 'origin/master' into unsafe-converter-planning
9ba3038 [Josh Rosen] WIP";code_debt
"Merge pull request #388 from steveblackmon/STREAMS-521.1
STREAMS-521: initial implementation of twitter account activity APIs";design_debt
Add some link to the explanation of the FreeBSD Jail issue workaround;design_debt
"MINOR: Fix open file leak in log cleaner integration tests
Closes #2870 from hachikuji/fix-log-cleaner-test-leak";design_debt
"[REEF-80] ID mismatch bug in YarnContainerManager#appendByDeleteAndCreate
This synchronizes writing to evaluator log and re-throws an exception if
the write fails, instead of swallowing it.
JIRA:
  [REEF-80] https://issues.apache.org/jira/browse/REEF-80
Pull Request:
  Closes #44";code_debt
Local file system based code distributor initial implementation.;design_debt
SOLR-6273: Reset test hooks in a finally block to avoid leakage to other tests;design_debt
"CLOUDSTACK-9630: Cannot use listNics API as advertised
added missing  details for listNics API response.";code_debt
Delete deprecated code from BrooklynMementoPersister;code_debt
"Merge pull request #1287 from DaanHoogland/securityrules-cleanup
SecurityGroupRulesCmd code cleanupWrote a test and cleaned some duplicate code with the objective to evaluate the jenkins pull request process at builds.a.o
worthwhile to keep, IMHO.
* pr/1287:
  SecurityGroupRulesCmd code cleanup review comments handled
  deal with PMD warnings
  code cleanup
  security rules test
  remove autogenerated pydev files";code_debt
Prototype codes of supporting leaf span;design_debt
removed new validation module temporarily.  This will be used as we build iterators for the query engine;design_debt
"[HOTFIX] Throw original exception in thread pool
If there are exception occurs in the Callable.run in the thread pool, it should throw the original exception instead of throw a new one, which makes it hard for debugging.
This closes #2887";code_debt
"Rename RDL to DistSQL (#7964)
* Remove useless ShardingSphereVisitor.getter
* Rename RDLVisitor
* Rename RDL to DistSQL
* Rename RDL module name
* Rename RDL package name
* Rename RDL class name";code_debt
Workaround dirty schedulers in run_queue stats (#3168);design_debt
Made the CalculatorLocal extend the CalculatorWs which does work.  Ideally we should move this multiple interface stuff into its own example, but it's fine here for now.;design_debt
"Merge pull request #494 from jbonofre/AMQ-7394
[AMQ-7394] Simple first fix to use listener.hasSpace() when recovering message from JDBC message store";design_debt
minor tidies;code_debt
TOMEE-183 enhancing logging;code_debt
Polished;code_debt
"Fix javadoc memory issues with Travis-CI (#1051)
* Unset _JAVA_OPTIONS environment, which may (?) interfere with the
  default settings of certain Maven plugins, and causes the build to run out
  of memory and be killed by the Travis host.
* Clean up bad license header formatting
* Remove IRC notifications (nobody lurks in IRC anymore, so these aren't useful)
* Build against current latest Accumulo 1.9.2
* Clean up matrix build (make build args relationship with the build script more clear)
* Use sudo with travis-ci";code_debt
"ARTEMIS-2022 - Enhancements 
Fix checkstyle
Avoid duplicated logic
Ability to filter and group
Instantiate SimpleString property key once
Get property value via getObjectProprty to ensure all special mapped properties such as in AMQPMessage would return
Avoid a custom string to represent null, instead rely on Java's representation ""null"" by using Objects.toString to get the string value of the property value used to group by.";code_debt
[CXF-5577] Initial workaround for the edge case involving matrix parameters;design_debt
"HBASE-16414 Improve performance for RPC encryption with Apache Common
Crypto (Colin Ma)";code_debt
"[BEAM-5324] Partially port unpackaged modules to Python 3 (#6424)
* Partially port unpackaged
* Remove legacy code";code_debt
HBASE-1121 Cluster confused about where -ROOT- is commit better logging;code_debt
SOLR-9717: Refactor '/export' to not hardcode the JSON output and to use an API;code_debt
Code style.;code_debt
Code cleanup.;code_debt
"some tests and comments exploring location unmanagement
as there is a slow leak around locations, no one unmanages them after use by an entity";design_debt
"THRIFT-3453 remove rat_exclude
rat_exclude file within root of our source tree is not in use anymore.
It has its origin from incubating phase, where the Tool Apache Rat
was used. http://creadur.apache.org/rat/
This closes #719";code_debt
"ACCUMULO-4605 Remove hard-coded commands from Main
Add usageGroup to KeywordExecutable, so the Main class can print usage
of commands in categorical groups.";code_debt
"[PINOT-3091] New server side trim function for new aggregation group by
In the new MCombineGroupByOperator, use new implemented server side trim
function to do the trim. The new trim function will take a map from
group-by keys to result list as the input, and this can prevent build
several new maps for all aggregation functions. This can improve the
performance of new group-by and reduce garbage collection.";code_debt
"TOBAGO-1782: Clean up
* demo";code_debt
[iOS] Project fix, remove invalid files. (#1601);code_debt
https://issues.apache.org/jira/browse/AMQ-5266 https://issues.apache.org/jira/browse/AMQ-4485 - fix warn logging from kahadb on set batch when message already consumed using seq from messageId, additional single dest test that hammers this case;code_debt
Polished;code_debt
[CXF-3693] - SecurityTokenServiceProvider does not handle exceptions properly;code_debt
"Remove unnecessary annotation.
https://github.com/apache/incubator-brooklyn/pull/1030#discussion_r44859924";code_debt
"Remove duplicated lombok annotations in the pulsar-commmon module (#5993)
### Motivation
Some of the classes in the pulsar-common module had a mixture of the following lombok annotations:
The [@Data](https://projectlombok.org/features/Data) annotation includes all other annotations:
### Modifications
Removed `@Setter`, `@Getter`, `@EqualsAndHashCode`, and '@ToString' if the `@Data` annotation was also present";code_debt
"[SPARK-22951][SQL] fix aggregation after dropDuplicates on empty data frames
## What changes were proposed in this pull request?
Spark SQL supports both global aggregation and grouping aggregation. Global aggregation always return a single row with the initial aggregation state as the output, even there are zero input rows. Spark implements this by simply checking the number of grouping keys and treats an aggregation as a global aggregation if it has zero grouping keys.
However, this simple principle drops the ball in the following case:
The reason is that:
1. `df.dropDuplicates()` is roughly translated into something equivalent to:
This translation is implemented in the rule `ReplaceDeduplicateWithAggregate`.
2. `spark.emptyDataFrame` contains zero columns and zero rows.
Therefore, rule `ReplaceDeduplicateWithAggregate` makes a confusing transformation roughly equivalent to the following one:
The above transformation is confusing because the resulting aggregate operator contains no grouping keys (because `emptyDataFrame` contains no columns), and gets recognized as a global aggregation. As a result, Spark SQL allocates a single row filled by the initial aggregation state and uses it as the output, and returns a wrong result.
To fix this issue, this PR tweaks `ReplaceDeduplicateWithAggregate` by appending a literal `1` to the grouping key list of the resulting `Aggregate` operator when the input plan contains zero output columns. In this way, `spark.emptyDataFrame.dropDuplicates()` is now translated into a grouping aggregation, roughly depicted as:
Which is now properly treated as a grouping aggregation and returns the correct answer.
## How was this patch tested?
New unit tests added
Closes #20174 from liufengdb/fix-duplicate.";design_debt
format;code_debt
HADOOP-9406. hadoop-client leaks dependency on JDK tools jar. (tucu);design_debt
minor clean up;code_debt
"Bug 11646 - OVM - volume > download volume failed for both ROOT and DATA volumes
return volume name instead of full path to ingratiate mgmt server's bad name convention";code_debt
"Removed restangular from DeliveryServiceRequestService (#3611)
* Removed restangular from ./DeliveryServiceRequestService.js
* Fixed some service methods not throwing in error handlers
* removes console statements
* adds some missing messages to ds requests
* removes some uneccessary autofocus";code_debt
"Refactor JcloudsRebindWithYamlDslTest
Remove duplication from JcloudsRebindWithExternalConfigTest, creating
common abstract super-type.";code_debt
"https://issues.apache.org/jira/browse/AMQ-6204
Fixing the removal logic on virtual destination remove inside of
Advisory Broker to clean up virtual destination maps properly.  Added a
test to verify.  Also added new debug logging to help track down any
future issues.";design_debt
remove dead code;code_debt
Avoid repetitive logging when geo info cannot be derived for an entity;code_debt
Improve to_bitmap parse int performance (#2223);code_debt
fix warings;code_debt
TS-1475: fix clang warning;code_debt
"[Improvement][Code style] FIX SPELL WAITTING TO WAITING , etc. (#4118)
* FIX SPELL
* FIX SPELL AND  Optimizing code conventions
* add ut  cannot construct process instance, return null
* add ut testExportProcessMetaData
* add ut testExportProcessMetaData
* add ut testImportProcessSchedule
* add ut MasterExecThreadTest
* add ut MasterExecThreadTest
* add ut testSubProcessViewTree
* add ut testComplementWithStartNodeList
* add ut testRecurseFindSubProcessId
* add ut testRecurseFindSubProcessId
* add ut testRecurseFindSubProcessId";code_debt
fix(type): not leak inner structure in types;design_debt
"TOBAGO-1557: Consolidate <tc:button>, <tc:link> and <tc:command>
* undo setting style ""font-weight""";code_debt
[CXF-7579] Removing excluded test.;code_debt
"[SPARK-20980][SQL] Rename `wholeFile` to `multiLine` for both CSV and JSON
### What changes were proposed in this pull request?
The current option name `wholeFile` is misleading for CSV users. Currently, it is not representing a record per file. Actually, one file could have multiple records. Thus, we should rename it. Now, the proposal is `multiLine`.
### How was this patch tested?
N/A
Closes #18202 from gatorsmile/renameCVSOption.";code_debt
ACCUMULO-378 Remove unnecessary logging, make proper logging when setSystemProperty ignores an invocation.;code_debt
HDFS-2129. Simplify BlockReader to not inherit from FSInputChecker. Contributed by Todd Lipcon.;code_debt
AMBARI-10935. Version bar moves too fast to top when scrolling down (onechiporenko);design_debt
CAMEL-1373: CamelCase and fixed a NPE bug in this one. Polished code.;code_debt
Use shard_db from config instead of hard-coded value;code_debt
"NIFI-4436:
- Addressing miscellaneous minor UX issues.
- Updating comments UX for all components.
- Updating the styling of PG and RPG to be more consistent.
- Adding the icons for nested versioned process groups.
- Calculating the number/states of nested versioned process groups.";code_debt
"Refactored handling of zero-queue consumer into separate subclass (#3615)
### Motivation
Simplified `ConsumerImpl` code by factoring out a bunch of if/else statements into a specialized subclass implementation.";code_debt
clean up;code_debt
remove dead code: Document.getFields(String) cannot return null;code_debt
"[Deps] Remove redundant com.baidu:jprotobuf (#3322)
* exclude jprotobuf from jprotobuf-rpc-core
* add commons-io used in fe.";code_debt
Making the scheduler more resilient;design_debt
"[REEF-1559] Remove unused methods of Exceptions
This change removes methods of Exceptions class which are unused
or used in a single place.
JIRA:
  [REEF-1559](https://issues.apache.org/jira/browse/REEF-1559)
Pull request:
  This closes #1116";code_debt
"ci:  display more meaningful information when running E2E test cases failed (#1012)
* ci:  display more meaningful information when running E2E test cases fail";code_debt
reduce unused code and reuse hashmap;code_debt
"KAFKA-7532: Clean-up controller log when shutting down brokers (#5831)
This line prints out (when empty):
Use `mkString` to eliminate `ArrayBuffer` and only log if not empty.";code_debt
"multiEdit: better handling for tag widget
Place tagging widget in a separate action and dialog class it is
indicated by a 'tag' icon for better clarity.
-- This removes the requirement to specify a dummy 'edit' action on
multi-rules instead, the separate tag action will appear automatically
as long as 'tags' is specified under the multiEdit's properties.
Conflicts:
	client/WEB-INF/classes/resources/messages.properties
	ui/css/cloudstack3.css
	ui/index.jsp";design_debt
"add retryCallSilent to RetryerUtils making it easy to use (#2729)
* add retryCallSilent to RetryerUtils making it easy to use
* add more detail to java doc of retryCallSilent";design_debt
added better exception message;code_debt
for #2084, simplify show for pg;code_debt
r/m unused code.  patch by Stu Hood reviewed by jbellis for CASSANDRA-608;code_debt
Remove unnecessary logs;code_debt
CAMEL-8753: camel-twitter allow to configure http proxy on component level. Remove not in use options. Component docs.;code_debt
CAMEL-15036: Make it easier to switch to use supervising route controller.;design_debt
Unnecessary;code_debt
"TINKERPOP-2024 Make server archetype use remote traversal
Since we're promoting remote traversals over scripts it would be better for the archetype to use them.";design_debt
Fix sonar warning on stream leak;design_debt
"ARROW-1132: [Python] Unable to write pandas DataFrame w/MultiIndex containing duplicate values to parquet
Closes #768 from cpcloud/ARROW-1132 and squashes the following commits:
4b42f643 [Phillip Cloud] Add test for parquet roundtripping with dups
49684fd1 [Phillip Cloud] ARROW-1132: [Python] Unable to write pandas DataFrame w/MultiIndex containing duplicate values to parquet";code_debt
Turn on failOnWarning and ignore unused runners modules in example.;design_debt
#1363 for checkstyle.;code_debt
tests: more logging;code_debt
"KAFKA-3318: clean up consumer logging and error messages
Closes #1036 from hachikuji/KAFKA-3318";code_debt
HBASE-22899 logging improvements for snapshot operations w/large manifests (#547);code_debt
[BEAM-8992]  ignore Go Vet failures. (#10661);design_debt
"cli: Import project info from config in setup.py, fix debug msgs
lsdfjk";code_debt
Remove duplicate websocket clients.;code_debt
"SOLR-13659: Remove unused SolrCacheHolder
accidental leftover from reverted plugin work";code_debt
futures: api cleanup;code_debt
HDFS-8207. Improper log message when blockreport interval compared with initial delay. Contributed by Brahma Reddy Battula and Ashish Singhi.;code_debt
# IGNITE-249 Cleanup VisorEventsCommand class.;code_debt
ACCUMULO-315 fix hang when table merge is unnecessary added utility to print merge state;code_debt
"DRILL-7583: Remove STOP status from operator outcome
Now that all operators have been converted to throw
exceptions on error condistions, the STOP status is
unused. This patch removes the STOP status and the
related kill() and killIncoming() methods. The
""kill"" methods are replaced by ""cancel"" methods which
handle ""normal"" case cancellation, such as for
LIMIT.
closes #1981";design_debt
NIFI-7339: Fixed bug that caused Write Ahead Provenance Repository not to rollover event files after specified time. Code cleanup. Updated some default properties.;code_debt
"Remove unnecessary file existence check during anticompaction.
Patch by marcuse reviewed by Paulo Motta for CASSANDRA-11660";code_debt
YARN-695. Remove masterContainer and status unused fields from ApplicationReportProto and fix bugs in ApplicationReportPBImpl. Contributed by Zhijie Shen.;code_debt
bug 7088: show full error message when adding volume fails.;code_debt
[hotfix][docs][config] Remove leftover files;code_debt
Formatting;code_debt
swith to full in-memory java compiler and some minro cleanup;code_debt
"[SPARK-13637][SQL] use more information to simplify the code in Expand builder
## What changes were proposed in this pull request?
The code in `Expand.apply` can be simplified by existing information:
* the `groupByExprs` parameter are all `Attribute`s
* the `child` parameter is a `Project` that append aliased group by expressions to its child's output
## How was this patch tested?
by existing tests.
Closes #11485 from cloud-fan/expand.";code_debt
Remove debug print (#2245);code_debt
"ARROW-7478: [Rust] [DataFusion] Group by expression ignored unless paired with aggregate expression
In addition to the change fixing the missing group by expressions, there were some code style changes that fixed some clippy warnings.
Closes #6115 from kyle-mccarthy/ARROW-7478 and squashes the following commits:
172bfa5c1 <Kyle McCarthy> Merge branch 'master' of github.com:apache/arrow into ARROW-7478
64e4e62ed <Kyle McCarthy> Fix: Missing Group by exprs";code_debt
"[SPARK-19495][SQL] Make SQLConf slightly more extensible
## What changes were proposed in this pull request?
This pull request makes SQLConf slightly more extensible by removing the visibility limitations on the build* functions.
## How was this patch tested?
N/A - there are no logic changes and everything should be covered by existing unit tests.
Closes #16835 from rxin/SPARK-19495.";design_debt
"Minor cleanup thanks to Joel Clark.
Closes COUCHDB-669";code_debt
simplify model a bit with data IO api;code_debt
"[SPARK-7684] [SQL] Refactoring MetastoreDataSourcesSuite to workaround SPARK-7684
As stated in SPARK-7684, currently `TestHive.reset` has some execution order specific bug, which makes running specific test suites locally pretty frustrating. This PR refactors `MetastoreDataSourcesSuite` (which relies on `TestHive.reset` heavily) using various `withXxx` utility methods in `SQLTestUtils` to ask each test case to cleanup their own mess so that we can avoid calling `TestHive.reset`.
Closes #6353 from liancheng/workaround-spark-7684 and squashes the following commits:
26939aa [Yin Huai] Move the initialization of jsonFilePath to beforeAll.
a423d48 [Cheng Lian] Fixes Scala style issue
dfe45d0 [Cheng Lian] Refactors MetastoreDataSourcesSuite to workaround SPARK-7684
92a116d [Cheng Lian] Fixes minor styling issues";design_debt
HBASE-14089 Remove unnecessary draw of system entropy from RecoverableZooKeeper;code_debt
"[SPARK-16435][YARN][MINOR] Add warning log if initialExecutors is less than minExecutors
## What changes were proposed in this pull request?
Currently if `spark.dynamicAllocation.initialExecutors` is less than `spark.dynamicAllocation.minExecutors`, Spark will automatically pick the minExecutors without any warning. While in 1.6 Spark will throw exception if configured like this. So here propose to add warning log if these parameters are configured invalidly.
## How was this patch tested?
Unit test added to verify the scenario.
Closes #14149 from jerryshao/SPARK-16435.";code_debt
Checkstyle;code_debt
Style fixes;code_debt
"Coverity CID #1267799 Resource leak
Coverity CID #1241990 Resource leak";design_debt
"ARROW-816: [C++] Travis CI script cleanup, add C++ toolchain env with Flatbuffers, RapidJSON
Closes #537 from wesm/ARROW-816 and squashes the following commits:
16992b6 [Wes McKinney] Disable Travis CI cache on OS X. brew install ccache
4621d2d [Wes McKinney] Fix variable name
dc86821 [Wes McKinney] Fixes for integration tests Travis script
5e2c226 [Wes McKinney] Change file mode
ed4be57 [Wes McKinney] Travis CI script cleanup, add C++ toolchain env with flatbuffers, rapidjson";code_debt
"Merge branch 'two-dot-o' of https://github.com/usergrid/usergrid into USERGRID-140_partial_updates
# By Askat Asanaliev (15) and others
# Via Yigit Sapli (4) and others
* 'two-dot-o' of https://github.com/usergrid/usergrid: (22 commits)
  fixing wrong test completion percentage values in chop web UI
  USERGRID-141 - [CHOP] Improve UI usability... - Fixed issues with runner status
  USERGRID-141 - [CHOP] Improve UI usability... - Fixed issues with runner status
  DPS-1010: creating stack.json and the start of some scripts with instructions
  USERGRID-141 - [CHOP] Improve UI usability... - Clean up legacy code
  USERGRID-141 - [CHOP] Improve UI usability... - Runners status form
  USERGRID-141 - [CHOP] Improve UI usability... - User keys management
  USERGRID-141 - [CHOP] Improve UI usability... - User management
  USERGRID-141 - [CHOP] Improve UI usability... - Completed all the charts
  USERGRID-141 - [CHOP] Improve UI usability... - Refactored the chart layout
  USERGRID-141 - [CHOP] Improve UI usability... - Refactored the module list window
  [CHOP] Fixed NoNodeAvailableException with embedded ES - set the startup pause to 5000 ms
  USERGRID-141 - [CHOP] Improve UI usability... - Iterations chart layout
  chop/USERGRID-138 Stop and Reset operations are working
  USERGRID-141 - [CHOP] Improve UI usability... - Runs chart layout
  USERGRID-141 - [CHOP] Improve UI usability... - Overview chart layout
  chop/USERGRID-138 Start operation is working
  USERGRID-141 - [CHOP] Improve UI usability... - User list window
  USERGRID-141 - [CHOP] Improve UI usability... - Module list window
  chop/USERGRID-138 chop webapp dao refactoring
  ...";code_debt
"[SPARK-5597][MLLIB] save/load for decision trees and emsembles
This is based on #4444 from jkbradley with the following changes:
1. Node schema updated to
   ~~~
treeId: int
nodeId: Int
predict/
impurity: Double
isLeaf: Boolean
split/
leftNodeId: Integer
rightNodeId: Integer
infoGain: Double
~~~
2. Some refactor of the implementation.
Closes #4444.
Closes #4493 from mengxr/SPARK-5597 and squashes the following commits:
75e3bb6 [Xiangrui Meng] fix style
2b0033d [Xiangrui Meng] update tree export schema and refactor the implementation
45873a2 [Joseph K. Bradley] org imports
1d4c264 [Joseph K. Bradley] Added save/load for tree ensembles
dcdbf85 [Joseph K. Bradley] added save/load for decision tree but need to generalize it to ensembles";code_debt
HBASE-14256 Flush task message may be confusing when region is recovered (Gabor Liptak);code_debt
"Bug 11522 - New agent manager
clean up events, status of agent";code_debt
reduce excessive logging causing Travis CI problems (FINERACT-800);code_debt
"BIGTOP-2798 Apex component has duplicate slf4j binding
Closes #231";code_debt
"[SPARK-4387][PySpark] Refactoring python profiling code to make it extensible
This PR is based on #3255 , fix conflicts and code style.
Closes #3255.
Closes #3901 from davies/refactor-python-profile-code and squashes the following commits:
b4a9306 [Davies Liu] fix tests
4b79ce8 [Davies Liu] add docstring for profiler_cls
2700e47 [Davies Liu] use BasicProfiler as default
349e341 [Davies Liu] more refactor
6a5d4df [Davies Liu] refactor and fix tests
31bf6b6 [Davies Liu] fix code style
0864b5d [Yandu Oppacher] Remove unused method
76a6c37 [Yandu Oppacher] Added a profile collector to accumulate the profilers per stage
9eefc36 [Yandu Oppacher] Fix doc
9ace076 [Yandu Oppacher] Refactor of profiler, and moved tests around
8739aff [Yandu Oppacher] Code review fixes
9bda3ec [Yandu Oppacher] Refactor profiler code";code_debt
Remove more dead code from test.;code_debt
BOOKKEEPER-481: Fix javadoc warnings (ivank via sijie);code_debt
"PCA: Minor bug and doc fixes
JIRA: MADLIB-948
Minor fixes:
-Added online help for pca_train and pca_sparse_train
-Unified error messages for clarity
-Fixed bug with a variance border case(1.0)
-Fixed docs to reflect correct mean table/column name
-Fixed docs to reflect the allowed ranges for components_param";code_debt
"[SPARK-6949] [SQL] [PySpark] Support Date/Timestamp in Column expression
This PR enable auto_convert in JavaGateway, then we could register a converter for a given types, for example, date and datetime.
There are two bugs related to auto_convert, see [1] and [2], we workaround it in this PR.
[1]  https://github.com/bartdag/py4j/issues/160
[2] https://github.com/bartdag/py4j/issues/161
cc rxin JoshRosen
Closes #5570 from davies/py4j_date and squashes the following commits:
eb4fa53 [Davies Liu] fix tests in python 3
d17d634 [Davies Liu] rollback changes in mllib
2e7566d [Davies Liu] convert tuple into ArrayList
ceb3779 [Davies Liu] Update rdd.py
3c373f3 [Davies Liu] support date and datetime by auto_convert
cb094ff [Davies Liu] enable auto convert";design_debt
"ACCUMULO-1680 Added deleteauths shell command to reciprocate the addauths command
The ticket leaves an option for two commands.  The addauths commands was already added.
The ticket also suggests a transaction add/remove command using an atomic operation.
This was not done.  Not sure it is necessary.  It involves adjusting the API for the security operations and adding
more complex code in the zookeeper interaction.";code_debt
Downgrade unnecessary log message;code_debt
Temporary change in rpc version -- reverted temporarily because hudson complains about version mismatch;design_debt
KYLIN-625, draft impl, ready for very first test;design_debt
"[SPARK-27920][SQL][TEST] Add `interceptParseException` test utility function
## What changes were proposed in this pull request?
This PR aims to add `interceptParseException` test utility function to `AnalysisTest` to reduce the duplications of `intercept` functions.
## How was this patch tested?
Pass the Jenkins with the updated test suites.
Closes #24769 from dongjoon-hyun/SPARK-27920.";code_debt
Tidy up.;code_debt
AMBARI-5423 Remove hard coded Service, Component mapping from LiveStatus.py (dsen);code_debt
"Try harder to clean TDB locks on normal JVM termination (JENA-1136)
For normal JVM termination make more effort to try and clean up the lock
file when the JVM exits.  Note that this will only help when the JVM
terminates normally.";design_debt
camel-core - optimize. Avoid using regexp patterns on patterns that are not regexp anyway. This reduced memory in JDK8;design_debt
Added a test case showing how to use a named query with JPA along with using an annotation to mark the @Consumed method so POJO developers can write a method to be invoked on a consume (to set a flag or update a step to the next state etc). Also performed a minor refactor to move more reusable code into the core module (for dealing with exception handling of reflection calls).;design_debt
HBASE-17014 Added clearly marked log messages for start and shutdown of services HMaster, HRegionServer, ThriftServer, RESTServer. Also changed the log level for RPCServer responder starting log message to debug.;code_debt
More fixes and cleanup on task unit tests.;code_debt
"Remove map-side combining from ShuffleMapTask.
This separation of concerns simplifies the 
ShuffleDependency and ShuffledRDD interfaces.
Map-side combining can be performed in a
mapPartitions() call prior to shuffling the RDD.
I don't anticipate this having much of a 
performance impact: in both approaches, each tuple
is hashed twice: once in the bucket partitioning
and once in the combiner's hashtable.  The same
steps are being performed, but in a different
order and through one extra Iterator.";code_debt
Add logging;code_debt
more cleanup;code_debt
NIFI-272: Updated pom.xml to be more consistent by removing 'name' tag and not including the default 'properties' tag;code_debt
"[SPARK-30801][SQL] Subqueries should not be AQE-ed if main query is not
### What changes were proposed in this pull request?
This PR makes sure AQE is either enabled or disabled for the entire query, including the main query and all subqueries.
Currently there are unsupported queries by AQE, e.g., queries that contain DPP filters. We need to make sure that if the main query is unsupported, none of the sub-queries should apply AQE, otherwise it can lead to performance regressions due to missed opportunity of sub-query reuse.
### Why are the changes needed?
To get rid of potential perf regressions when AQE is turned on.
### Does this PR introduce any user-facing change?
No.
### How was this patch tested?
Updated DynamicPartitionPruningSuite:
1. Removed the existing workaround `withSQLConf(SQLConf.ADAPTIVE_EXECUTION_ENABLED.key, ""false"")`
2. Added `DynamicPartitionPruningSuiteAEOn` and `DynamicPartitionPruningSuiteAEOff` to enable testing this suite with AQE on and off options
3. Added a check in `checkPartitionPruningPredicate` to verify that the subqueries are always in sync with the main query in terms of whether AQE is applied.
Closes #27554 from maryannxue/spark-30801.";design_debt
Unnecessary entries;code_debt
Adding more information to scaleup and scaledown logs;code_debt
Improved scheduler logging, bugfix;code_debt
"TS-1823: add line continuation to remap.config
Add line continuation to remap.config using a backslash at the end
of a line as the continuation character.
The handling for continuation was made in tokLine() by adding an
optional third char parameter (`cont') which is the continuation
character. This should make it usable in other contexts outside of
remap.config also, for example other config file parsers.
This implementation is not very intelligent, as it only checks for the
backslash immediately preceding the newline and does not handle any
whitespace. The backslash and newline are converted into spaces, and
the next line is appended.
Example:
.definefilter foo \
  @action=allow \
  @src_ip=127.0.0.1
is read and parsed in UrlRewrite::BuildTable() as:
.definefilter foo     @action=allow     @src_ip=127.0.0.1";design_debt
Removed redundant hash of out_shape in algoreg key. (#8122);code_debt
HDFS-14336. Fix checkstyle for NameNodeMXBean. Contributed by Danny Becker.;code_debt
"[FLINK-20444][runtime] Chain YieldingOperatorFactory to new sources.
For legacy sources, we had to disable chaining because of incompatible threading models.
New sources are working fine however and it would give some users massive performance improvements.";code_debt
CAMEL-7852 clean up the karaf feature osgi test;code_debt
AMBARI-17365 Add-host wizard on large clusters is painfully slow. (atkach);code_debt
"thirdeye build fix (#295)
* thirdeye build fix
* adding end point - thirdeye
* making function end point more specific.";code_debt
"In new aggregation, resolve some java style warning, remove explicit casting
RB=723078
G=pinot-dev-reviewers
R=jfim,mshrivas,kgopalak,vradhakr,atumbde,raringun,ssubrama
A=mshrivas";code_debt
"Merge ""Fix for NATable Heap leak""";code_debt
"Merge pull request #302 from aledsage/fix/entities-stopOnShutdown
Fixes/simplifies synchronization in Entities.invokeStopOnShutdown";code_debt
"[STREAMING] [MINOR] Close files correctly when iterator is finished in streaming WAL recovery
Currently there's no chance to close the file correctly after the iteration is finished, change to `CompletionIterator` to avoid resource leakage.
Closes #6050 from jerryshao/close-file-correctly and squashes the following commits:
52dfaf5 [jerryshao] Close files correctly when iterator is finished";design_debt
clear up more warnings in modules/contrib;code_debt
replace travis build status with jenkins;code_debt
Cleanup: Remove unused functions (#7365);code_debt
HDFS-6690. Deduplicate xattr names in memory. (wang);code_debt
HIVE-6569 : HCatalog still has references to deprecated property hive.metastore.local (Sushanth Sowmyan via Ashutosh Chauhan);code_debt
"chore: consolidate common code in importers (#11936)
* chore: consolidate common code in importers
* Small fixes
* Small fixes";code_debt
"style: Label styling/storybook touchups (#10627)
* colors corrected, hover/cursory only change if there's an onClick
* adding info label, breaking gallery out to its own story
* linting
* fixing bad class name
* now with fading!
* now supporting additional (non-bootstrap) label styles
* adding new secondary/primary labels to gallery
* fixing map key react warning
* using the new secondary label in the ChartList view
* linting
* fixing TS issue";code_debt
tidy recent changes;code_debt
Fix a checkstyle issue;code_debt
"Bug fixes/Improvement for notify pending receive method (#3337)
### Motivation
Prevent 2 bugs and refactoring for method [notifyPendingReceivedCallback()](https://github.com/apache/pulsar/blob/master/pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java#L912) 
### Modifications
  - Bugfix interceptor missed event when prefetch messages is disabled by
    consumer `ReceiverQueueSize == 0`.
  - Bugfix when message is null and no exception is present. Previously to this
    commit testing if message was null was made by `checkNotNull()` method leaving
    consumed future without completion resulting in a hanged future.
  - Refactor to favour simplicity and readability for control flow.
  - Add unit tests exploiting bug fixes.
### Result
Bug fixes and more maintainable code.";code_debt
CAMEL-3551: Polished;code_debt
"CLOUDSTACK-8401: Fix KVM's SG script to properly cleanup old network rules
- Router VMs don't have a chain rule with -def suffix, this fixes name and
  properly removes VR vms not running on a host
- Before trying to remove dnats, filter empty/None elements from list
- destroy_ebtables_rules should check what kind of action is request to be
  performed (-A for add or -D for removed) and execute based on that
- Before executing any command, log it for debugging purposes
- Method to cleanup bridge, may be used in future";code_debt
"[SPARK-10788][MLLIB][ML] Remove duplicate bins for decision trees
Decision trees in spark.ml (RandomForest.scala) communicate twice as much data as needed for unordered categorical features. Here's an example.
Say there are 3 categories A, B, C. We consider 3 splits:
* A vs. B, C
* A, B vs. C
* A, C vs. B
Currently, we collect statistics for each of the 6 subsets of categories (3 * 2 = 6). However, we could instead collect statistics for the 3 subsets on the left-hand side of the 3 possible splits: A and A,B and A,C. If we also have stats for the entire node, then we can compute the stats for the 3 subsets on the right-hand side of the splits. In pseudomath: stats(B,C) = stats(A,B,C) - stats(A).
This patch adds a parent stats array to the `DTStatsAggregator` so that the right child stats do not need to be stored. The right child stats are computed by subtracting left child stats from the parent stats for unordered categorical features.
Closes #9474 from sethah/SPARK-10788.";code_debt
simplify mlp mulgpu;code_debt
HADOOP-15358. SFTPConnectionPool connections leakage. Contributed by Mikhail Pryakhin.;design_debt
"Bump replicator dependency
Fix default value for replicator max_document_id_length parameter
Cleanup error logging code
COUCHDB-3291";code_debt
"[hotfix][e2e] Reduce e2e-hadoop to exclusion
Also having it work as an include is confusing.";design_debt
APEXMALHAR-2457 Remove duplicate entries;code_debt
Remove old configuration from BoringCyborg (#10490);code_debt
[hotfix] [cep] Add sanity check for erroneously pruned elements;code_debt
"Fix: Empty exception message in java functions can cause an NPE (#3245)
* Fix: Empty exception message in java functions can cause an NPE
* add additional exception message error null checking";code_debt
"supported date type for dictionary_exclude
removed java style errors
added validation for both date and timestamp
added test case for validation of both timestamp and date
refactor test cases
removed code from unnecessary file
rebased the code
added validation in table creator as well";code_debt
Remove unused logical def classes;code_debt
"Merge pull request #1160 from cshaley/master
Speed up kaggle-ndsb2 example Preprocessing";code_debt
NIFI-4839 - Rename the registry group to `registry` for better UX;code_debt
n Improved compatibility with Python 3.5+ - Convert signal.SIGTERM to int (#9207);code_debt
Fix style check config (#3257);code_debt
"[MINOR] Fix append / binary-other test issues (runtime, output)
This patch aims to fix two test packages that repeatedly created issues
when ran through github actions. Both had the characteristic of
including multiple 250s+ tests and the new output buffering likely
caused timeouts of not receiving any feedback from the tests. We now
reduced the data sized, disabled output buffering, and slightly improved
the performance of result comparisons. Together these changes improved
the total runtime of these packages by >2x, where most time is spent in
the R baseline computation.";code_debt
"[SPARK-8619] [STREAMING] Don't recover keytab and principal configuration within Streaming checkpoint
[Client.scala](https://github.com/apache/spark/blob/master/yarn/src/main/scala/org/apache/spark/deploy/yarn/Client.scala#L786) will change these configurations, so this would cause the problem that the Streaming recover logic can't find the local keytab file(since configuration was changed)
Problem described at [Jira](https://issues.apache.org/jira/browse/SPARK-8619)
Closes #7008 from SaintBacchus/SPARK-8619 and squashes the following commits:
d50dbdf [huangzhaowei] Delect one blank space
9b8e92c [huangzhaowei] Fix code style and add a short comment.
0d8f800 [huangzhaowei] Don't recover keytab and principal configuration within Streaming checkpoint.";code_debt
SIZE / BYTES confusion;code_debt
ninja-fix javac warning;code_debt
Groovysh: Refactor: Do not duplicate code;code_debt
Simplify component configuration for box, fhir & google itests;code_debt
CAMEL-1144: Polished code. Strategy method for the iterator and having the inner class as private;code_debt
"Merge ""Remove deprecated code""";code_debt
Merge pull request #5598: Improve consistency of hadoop and hbase scripts, fix shellcheck issues;code_debt
Polished;code_debt
fixed a typeo when trying to apply the patch for AMQ-575;code_debt
[CARBONDATA-701]Fix memory leak issue for new flow dataloading This closes #594;design_debt
"[SPARK-9336][SQL] Remove extra JoinedRows
They were added to improve performance (so JIT can inline the JoinedRow calls). However, we can also just improve it by projecting output out to UnsafeRow in Tungsten variant of the operators.
Closes #7659 from rxin/remove-joinedrows and squashes the following commits:
7510447 [Reynold Xin] [SPARK-9336][SQL] Remove extra JoinedRows";code_debt
CAMEL-12083: Polished a bit in karaf features;code_debt
"GEODE-7312: modify the ThreadMonitor to print the stack of a blocking thread
Log a thread trace for a thread that's blocking a ""stuck"" thread.
This will help a lot when a user experiences hung operations.  Prior to
this change we needed to request thread dumps for servers and that was
usually not possible to obtain because the servers had already been
terminated & restarted.  This change puts the relevant thread dumps in
the server's log file, which is much easier for folks to gather after
the fact.";code_debt
STORM-3374 remove unnecessary stacktrace from log;code_debt
Fix formating isses in printable site;code_debt
.NET: Improve exception messages for binary misconfiguration and missing assemblies;code_debt
"[PINOT-3101] Fix connection leaks on server restarts and connection timeouts
In ScatterGatherImpl.SingleRequestHandler, we need to cancel an outstanding future if we timed out getting a
connection. Otherwise, the counts in AsyncPoolImpl will go wrong, and we will be waiting on connections to be
released when none will be.
On a graceful close from the server, we need to destroy the resource associated with that connection (from
the point of view of AsyncPoolImpl)
Adding more logs to debug connection issues
RB=735254
BUG=PINOT-3101
G=pinot-dev-reviewers
R=kgopalak,jfim,atumbde,mshrivas
A=kgopalak,atumbde";design_debt
"HBASE-10051 rolling-restart.sh have old value of ""zookeeper.znode.unassiged"" config causing infinite loop";design_debt
minor correction code was using a test file instead of the actual output file;code_debt
"ACCUMULO-2048 Removed unnecessary path manipulation in walog GC and
added sanity check";code_debt
"[SPARK-20262][SQL] AssertNotNull should throw NullPointerException
## What changes were proposed in this pull request?
AssertNotNull currently throws RuntimeException. It should throw NullPointerException, which is more specific.
## How was this patch tested?
N/A
Closes #17573 from rxin/SPARK-20262.";code_debt
Fix logging message.;code_debt
Fix bad formatting in changelog.;code_debt
YARN-6519. Fix warnings from Spotbugs in hadoop-yarn-server-resourcemanager. Contributed by Weiwei Yang.;code_debt
[MINOR] Code Cleanup, remove redundant code (#1337);code_debt
Fixed formatting;code_debt
For checkstyle;code_debt
JENA-1703: Remove unused files;code_debt
"docs: remove unused release instruction (#8100)
Turns out since we use `git archive`, there's no need for `git clean`
which was pretty disruptive.";code_debt
temporary remove karaf maven plugin while karafee is based on karaf 2.x;design_debt
"ARROW-5784: [Release][GLib] Replace c_glib/ after running c_glib/autogen.sh in dev/release/02-source.sh
c_glib/ source archive is generated by `make dist` because includes configure script.
The current `dev/release/02-source.sh` build Arrow C++ and Arrow GLib to include the artifacts of GTK-Doc and then run `make dist`.  But it is slow.
So this PR run only `c_glib/autogen.sh` and then replace c_glib/.
Closes #4749 from shiro615/release-replace-c-glib-after-running-autogen and squashes the following commits:
9a69f8edc <Yosuke Shiro> Remove an unnecessary environment variable
3a2550fbd <Yosuke Shiro> Remove omit from 02-source-test.rb
501a2dd97 <Yosuke Shiro> Remove autom4te.cache after running autogen.sh
46a4f8995 <Sutou Kouhei> Use docker-compose
e357a88b7 <Yosuke Shiro> Exclude c_glib/autom4te.cache/* from RAT check
70cb4a762 <Yosuke Shiro> Remove an unnecessary diff
aa786804d <Yosuke Shiro> Enable test test_glib_configure on Travis CI
e04276e33 <Yosuke Shiro> Remove libraries for C++ build
56098ae87 <Yosuke Shiro>  Replace c_glib/ by c_glib/ after running autogen.sh";code_debt
"MINOR: Remove redundant clause in secureAclsEnabled check
Also include a few minor clean-ups.
Closes #1623 from ijuma/fix-zk-inconsistent-security-check";code_debt
"minor renaming to be consistent
OPENEJB-1736: Example: OSGi on Apache Karaf";code_debt
Fix generics warning;code_debt
"spotbugs: make map traversal more efficient (#1035)
* make map traversal more efficient
* make map traversal more efficient
modify according to review
* compile fail and delete space";code_debt
"TS-4649: Minor style improvement to the loggin system.
- Make log field name arrays static.
- Make LogField members const.
- Remove unused LogFilter::reverse().
- Make various other trivial member functions const.";code_debt
HDFS-12712. [9806] Code style cleanup;code_debt
"ARROW-5039: [Rust] [DataFusion] Re-implement CAST support
This PR achieves a few things:
- Removes some PoC code and replaces it with generic code for evaluating CAST expressions
- Adds support for casting from UInt64 in arrow compute module (looks like this was just missed)
- Improves error messages and rustdocs
- Adds a bounds check to avoid a panic if a column index is incorrect
Closes #4054 from andygrove/ARROW-5039 and squashes the following commits:
fbc606c <Andy Grove> tests for casting from all floating point types, plus fix bug in mapping from f32 to u16
ae4338c <Andy Grove> tests for casting from all unsigned int types
46a016e <Andy Grove> tests for casting from all signed int types
9ddd055 <Andy Grove> check for null after cast
ddc80dd <Andy Grove> add unit test for casting from int64
e2a9e33 <Andy Grove> revert last commit
84951ad <Andy Grove> Revert adding Int64 cast support
588459a <Andy Grove> Code cleanup
28d63c6 <Andy Grove> Improve error messages and rustdocs
542ad26 <Andy Grove> Re-implement CAST support in DataFusion
c01763c <Andy Grove> Add support for casting from UInt64";code_debt
"Add basic encrypt token generator to simplify code (#3403)
* add BaseEncryptSQLTokenGenerator
* add aware package";code_debt
Remove useless braces;code_debt
"Fixed lookups for v2 topics in C++ client lib with HTTP service URL (#2043)
* Fixed lookups for v2 topics in C++ client lib with HTTP service URL
* Fixed formatting
* Fixed path
* Use different topic names in tests
* Fixed formatting";code_debt
"optimize integrate framework (#5413)
* display raw sql in parametrized test
* print test context when assertion error occur
* for checkstyle";code_debt
added TheCrew to the GiraphGraphProvided. Renamed methods in ValueMapTest away from their old values() model. More updates to CHANGELOG.;code_debt
Remove unused method CF.merge and add more tests to ColumnFamilyTest.  patch by Sandeep Tata review by jbellis for #69;code_debt
DISPATCH-1824: Fix TCP adaptor listener and connector shutdown leaks;design_debt
Fix missing styles in FilterScopeSelector modal (#11726);code_debt
removing most warnings in ppi/survey related code;code_debt
"Fixes more leaks when no OCSP URL is available
This is a follow up and more complete version of
19a55a2679dda03f1258e097a82c27c98f00efbc";design_debt
CLOUDSTACK-3096: format configGenerator.py;code_debt
Added warning message for BLVP.;code_debt
"[CARBONDATA-3720] Support alter table scenario for new insert into flow
Why is this PR needed?
Currently, the rearrange logic is based on schema ordinal.
For alter table drop and add columns with/without partition, schema ordinal based re arrange may not work as index will be outside the projection size. This logic become complex to handle.
Hence don't use schema ordinal for rerrange, implemented a position map based rearrange.
What changes were proposed in this PR?
Implemented a position map based rearrange.
Does this PR introduce any user interface change?
No
Is any new testcase added?
No
This closes #3634";code_debt
Remove unnecessary doctest __main__ methods.;code_debt
"Merge pull request #2506 from jujoramos/feature/GEODE-5523
GEODE-5523: Remove DefaultHashMap
The internal class `DefaultHashMap` was designed as an internal
workaround to return a default value whenever the value returned by
`Map.get(K)` was `null`. Starting with Java 8 the `Map` interface
added the method `getOrDefault`, which does something similar in a more
efficient way but it returns the default only if the key doesn't exist.
After inspecting the code, we don't insert `null` values into the
`statsMap`, so it is safe to delete the old `DefaultHashMap` class and
replace its usage by `Map.getOrDefault`.";design_debt
HADOOP-13546. Override equals and hashCode of the default retry policy to avoid connection leakage. Contributed by Xiaobing Zhou.;design_debt
[CXF-6475] Adding 'http.autoredirect' property to make it simpler to configure 2.0 clients;design_debt
Remove useless json type in IT (#9423);code_debt
made it easier to use a custom aggregation collection as discussed in this thread :  http://www.nabble.com/AggregationCollection-implementation-tp15891263s22882p15891263.html;design_debt
"KAFKA-9685: PT2, avoid unnecessary set creation in ACL matching (#8382)
#8261 went a long way to solving some of the ACL performance issues. I don't think
we need to create sets at all for the `find` and `isEmpty` calls. ` testAuthorizer` is
22% to 62% of the cost after this change:";code_debt
"[SYSTEMML-1289] Performance codegen cellwise over compressed matrices
This patch makes the following performance improvements to codegen
cellwise operations (and others) over compressed matrices:
1) Sparse output matrices for sparse-safe operations, where we ensure
correctness by explicitly sorting the output sparse rows, which is done
in a thread-local manner per row partition.
2) Pre-allocation of sparse rows in order to avoid repeated
re-allocations by determining the number of non zeros per row partition
up front. Note that this requires segment-aligned row partitions, which
we only enforce if this does not limit the effective degree of
parallelism.
3) Skip-scan exploitation to find rl boundaries for OLE value iterators
in order to avoid repeated scans of the entire iterator just to find the
row partition starts. This is also implicitly used by all other codegen
operations over compressed matrices.
For example, on a scenario with a pre-processed ImageNet dataset of 1.2M
images, 30x30 pixels per image, and a simple sparse-safe cellwise
generated operator for X*(Y+7), where X is the compressed input, this
patch improved single-node performance from 36s to 11.5s. This is
competitive, given that the uncompressed codegen operation takes 16.3s.  
Finally, this patch also includes a robustness fix of the generic
ColGroupOffset iterator for cases, where an iterator over a row
partition does not have any row indexes.";code_debt
AMBARI-12083. Installing Repo Packages needs to be more robust to handle the actual_version installed when the script is killed because of a timeout (alejandro);design_debt
"[hotfix][runtime] Delete unused interface ExecutionStatusListener
This closes #7977.";code_debt
"M    build.xml
A    src/test/org/apache/hadoop/hbase/TestBrokenTest.java
M    src/test/org/apache/hadoop/hbase/StaticTestEnvironment.java
A    src/test/org/apache/hadoop/hbase/TestSomething.java
    Temporary commit to see how suites-of-tests work with hudson.
    Will back them out after build runs.";design_debt
converted unnessecary log.info to log.debug and also generated the static query set again;code_debt
"TOBAGO-1524: Use standard AJAX mechanism
* cleanup: remove the old AJAX stuff from Tobago.";code_debt
Rat simplification;code_debt
"bug 9161:
add more log";code_debt
"[SPARK-11078] Ensure spilling tests actually spill
#9084 uncovered that many tests that test spilling don't actually spill. This is a follow-up patch to fix that to ensure our unit tests actually catch potential bugs in spilling. The size of this patch is inflated by the refactoring of `ExternalSorterSuite`, which had a lot of duplicate code and logic.
Closes #9124 from andrewor14/spilling-tests.";code_debt
Made TinkerGraph even smaller and more efficient for Edge and VertexProperty. Added a StrategyVertex optimization for @dkuppitz and Giraph.;design_debt
"DRILL-1197: C++ Client. Differentiate socket/handshake/query timeout for deadline timer.
It also
- returns more detailed connection status for validate handshake.
- adds timeout options for query submitter.";code_debt
Fix checkstyle issues;code_debt
Improve performance of BooleanUtils.toBoolean(String);code_debt
removed unuseful type check in Int32IO class;code_debt
Add skip option to UpdateExtensionDocPageMojo to be able to workaround https://github.com/quarkusio/quarkus/issues/10217;design_debt
removed commented out and dead code;code_debt
"Update Import-Package to include Spring 4
Update OSGi metadata to include Spring 4.X in the version range. Removed duplicate org.springframework.osgi* package reference.";code_debt
checkstyle tweaks;code_debt
"[SPARK-31934][BUILD] Remove set -x from docker image tool
### What changes were proposed in this pull request?
Remove `set -x` from the docker image tool.
### Why are the changes needed?
The image tool prints out information that may confusing.
### Does this PR introduce _any_ user-facing change?
Less information is displayed by the docker image tool.
### How was this patch tested?
Ran docker image tool locally.
Closes #28759 from holdenk/SPARK-31934-remove-extranious-info-from-the-docker-image-tool.";code_debt
"[SPARK-34059][SQL][CORE] Use for/foreach rather than map to make sure execute it eagerly
### What changes were proposed in this pull request?
This PR is basically a followup of https://github.com/apache/spark/pull/14332.
Calling `map` alone might leave it not executed due to lazy evaluation, e.g.)
We should better use `foreach` to make sure it's executed where the output is unused or `Unit`.
### Why are the changes needed?
To prevent the potential issues by not executing `map`.
### Does this PR introduce _any_ user-facing change?
No, the current codes look not causing any problem for now.
### How was this patch tested?
I found these item by running IntelliJ inspection, double checked one by one, and fixed them. These should be all instances across the codebase ideally.
Closes #31110 from HyukjinKwon/SPARK-34059.";design_debt
Made a log message slightly less ugly;code_debt
"fix: function config cleanupSubscription update bug (#3771)
* fix: function config cleanupSubscription update bug
* add and fix unit tests";code_debt
LUCENE-5189: remove leftover;code_debt
"TS-1872 More robust compiler detection
we add autoconf-archive's ax_compiler_vendor to more robustly detect
which compiler we're dealing with.";design_debt
Remove unnecessary white spaces;code_debt
Some cleanup of styling;code_debt
"GEODE-17: clean up error messages
* clean up authentication/authorization error messages
* Catch Authorization exception later in the command chain to avoid unnecesary parsing of command result
* Add ExceptionHandler in controller to set the http header correctly
* Catch Authorization exception in gfsh execution for better error report";code_debt
cleanups for camel-hdfs2 to camel-hdfs component renaming;code_debt
"Added getTableConfig API into ZKMetadataProvider (#1497)
We should provide one single API to fetch table config because both offline and realtime use the same TableConfig.
This can simplify the logic and reduce some redundant check on table type.";code_debt
"ARROW-3544: [Gandiva] [C++] Create function registry in multiple compilation units to reduce build times
Refactored function_registry into separate files. The function signatures are now split across
3 different files viz. function_registry.cc, function_registry_binaryfn.cc & function_registry_unaryfn.cc.
This approach reduces the build times on my setup with little refactoring.
I looked into tensorflow as well, as Wes had suggested, however tensorflow heavily utilizes tempalate based
approach, which is quite different from this & may require quite a bit of refactoring in gandiva.
Closes #3051 from siddharthdave/master and squashes the following commits:
1d75ac7f6 <Siddharth Dave> ARROW-3544:   Extremely long compile time for function_registry.cc in release mode on clang 6 removed individual clasess for each registry. removed unused header files. cleaned up code.
ab93602f3 <Siddharth Dave> ARROW-3544:   Extremely long compile time for function_registry.cc in release mode on clang 6 fixed lint errors with make format
8161eddb5 <Siddharth Dave> ARROW-3544:   Extremely long compile time for function_registry.cc in release mode on clang 6 added a note in function_registry_common.h that its for internal use.
60954a038 <Siddharth Dave> ARROW-3544:   Extremely long compile time for function_registry.cc in release mode on clang 6 > Replaced STRINGIFY with ARROW_STRINGIFY
241b6340c <Siddharth Dave> ARROW-3544:   Extremely long compile time for function_registry.cc in release mode on clang 6 > Yet another refactor of macros > removed redundant comments
faeffeef4 <Siddharth Dave> ARROW-3544:   Extremely long compile time for function_registry.cc in release mode on clang 6 1. incorporated review comments suggested by ravindra 2. refactored code a bit & removed unused includes etc.
508b7835e <Siddharth Dave> ARROW-3544:   Extremely long compile time for function_registry.cc in release mode on clang 6 Fixed make check-format errors.
b8176dd40 <Siddharth Dave> ARROW-3544:   Extremely long compile time for function_registry.cc in release mode on clang 6 Incorported review comments: 1. removed duplicate code/macros & moved it into a new header file function_registry_common.h 2. added separate classes for holding different function types 3. during initialization, the map is populated by individualy populating from these classes into 1 common map.
1788fb32e <Siddharth Dave> ARROW-3544:   Extremely long compile time for function_registry.cc in release mode on clang 6 Fixing whitespace issue reported during 'make lint'
2cdb6df58 <Siddharth Dave> ARROW-3544:   Extremely long compile time for function_registry.cc in release mode on clang 6 Refactored function_registry into separate files. The function signatures are now split across 3 different files viz. function_registry.cc, function_registry_binaryfn.cc & function_registry_unaryfn.cc. This approach reduces the build times on my setup with little refactoring.";code_debt
[IGNITE-349]: bugfix by integration testing results: (1) NPE in properties serialization (2) small usability improvement.;code_debt
"[SPARK-21196] Split codegen info of query plan into sequence
codegen info of query plan can be very long.
In debugging console / web page, it would be more readable if the subtrees and corresponding codegen are split into sequence.
Example:
The example will return Seq[(String, String)] of length 1, containing the subtree as string and the corresponding generated code.
The subtree as string:
The generated code:
## What changes were proposed in this pull request?
add method codegenToSeq: split codegen info of query plan into sequence
## How was this patch tested?
unit test
cloud-fan gatorsmile
Please review http://spark.apache.org/contributing.html before opening a pull request.
Closes #18409 from gengliangwang/codegen.";code_debt
Merge [TRAFODION-1745] Show more info on TRANSLATE errors;code_debt
SOLR-15136: Reduce excessive logging introduced with Per Replica States feature;code_debt
"[NNVM] Imperative Invoke (#3208)
* fix
* fix";code_debt
"Disable JMX on the test brokers as it's not needed in these tests,
prevents some failures and speeds things up a little.";code_debt
"Optional long-polling based segment announcement via HTTP instead of Zookeeper (#3902)
* Optional long-polling based segment announcement via HTTP instead of Zookeeper
* address review comments
* make endpoint /druid-internal/v1 instead of /druid/internal so that jetty qos filters can be configured easily when needed
* update segment callback initialization to be called only after first segment list fetch has been succeeded from all servers
* address review comments
* remove size check not required anymore as only segment servers announce themselves and not all peon processes
* annouce segment server on historical only after cached segments are loaded
* fix checkstyle errors";code_debt
[AMBARI-24610] [Log Search UI] Show user friendly component name in query input (#2277);code_debt
"NIFI-631: Initial implementation of FetchFile processor
Reviewed by Tony Kurc (tkurc@apache.org)";design_debt
"CAMEL-10957 Log a warning if the response canno...
...t be unmarshalled in Composite API
Adds a logging of WARN level in case of exceptions while unmarshalling
responses from Composite API";code_debt
"Skip redundant tombstones on compaction.
Patch by Branimir Lambov reviewed by marcuse for CASSANDRA-7953";code_debt
"THRIFT-5199: Fix infinite loop writing to closed TSocket in PHP
Client: php
Patch: Tim Heilig
This closes #2134";design_debt
"Remove the unused helixManager parameter from GobblinHelixTaskStateTracker
Closes #2202 from HappyRay/remove-unused-helix-
manager-parameter";code_debt
"WIP Added code for new V3 format to optimize scan
Fixed testcases
Fixed style
Fixed issue
Added read a head blocklet PR to it
fixed style
Refactored code
Added read a head blocklet
Optimized decoder
Updated code of V3 format interfaces
OPtimized greater than and less than filters
Fixed col group queries
Refactored V1 format with new interface
Fixed complex query
Fixed comments";code_debt
[HUDI-1062]Remove unnecessary maxEvent check and add some log in KafkaOffsetGen (#1779);code_debt
AMBARI-24361 Make upgrade progress counter more readable;design_debt
LUCENE-3484: Fix NPE in TaxonomyWriter: parents array creation was not thread safe.;requirement_debt
bug 8866: Direct Network Usage, TrafficSentinel support added, work in progress;requirement_debt
for multiple thread safety;requirement_debt
Updated RateTracker to be thread safe, more accurate, and very fast.  removed subsampling of rate calculation in disruptor, because sub-sampling was more expensive than just doing the calculation.;requirement_debt
Preliminary Version of Naive Bayes. (Todo: Translate to Python, Resolve Security Issues/Code Injections);requirement_debt
"GUAC-676: Conversion to Guacamole.Display wasn't finished - ""transfer"" and others still directly used layer.";requirement_debt
"Add quantization support for GluonCV (#15754)
* enhance quantization api
* integrate gluoncv solution
* support gluon ssd
* enhance api
* enhance example script
* add wildcard match for exclude layers
* support int8 dtype parameter
* enable dataiter api
* use try method
* add unit test for quantize gluon
* fix lint
* fix lint 2
* fix temporary directory in python2
* fix lint
* fix try import and add todo
* trigger";requirement_debt
camel-sap-netweaver component. Work in progress.;requirement_debt
"ARROW-3882: [Rust] Cast Kernel for most types
This is an implementation of a cast kernel for most Arrow types.
Limitations (when PR is complete):
* Casting to or from `StructArray` not supported
* Casting `ListArray` to non-list array not supported
* Casting of incompatible primitive types not supported (e.g. temporal to boolean)
Closes #3797 from nevi-me/ARROW-3882 and squashes the following commits:
67c3ab3 <Wakahisa> Merge branch 'master' into ARROW-3882
0f42cd1 <Neville Dipale> replace cast macros with generic functions
66acfb3 <Neville Dipale> move cast_kernels > kernels/cast
9784313 <Neville Dipale> fix doc comment
04c7307 <Neville Dipale> boolean casts, documentation, error handling
4a8906b <Neville Dipale> cast binary -> numeric
c3b8961 <Neville Dipale> use arrow cast in datafusion
ae9509c <Neville Dipale> ARROW-3882:  Cast Kernel for most types";requirement_debt
"[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch adds the below changes.
  - We now compile all the dedup patches into functions,
  - The main program places a function call for each dedupOp
    and calls the corresponding function,
  - Move the recomputation related code to a new class,
  - Add a new test class to match the recomputed results
    with the original outputs.
Current code doesn't support multiple loops. Future commits
will add optimizations to construct multi-return functions
of equivalent function calls into loops.";requirement_debt
Update example blueprint for Node.JS Todo application;requirement_debt
"Test AI on lengthKind pattern now works, however, it uses features that
are not yet implemented (string padding/trimming), so a few things were
added to make it work. It still exercises lengthKind pattern, it just
dodges the padding/trimming by using initators/terminators to deal with
the padding.
Rewrote AI as a self-contained TDML test file in tresys-contributed,
deleted the old one.";requirement_debt
"-No jacoco. We will use https://analysis.apache.org/
-Removing some unused code
-Fixing some old TODOs";requirement_debt
BIGTOP-260. Mahout puppet module needs to be implemented;requirement_debt
Rest DSL. camel-swagger work in progress.;requirement_debt
Fixed security issue in listNetworks;requirement_debt
"[CALCITE-2216] Improve extensibility of AggregateReduceFunctionsRule (Fabian Hueske)
Close apache/calcite#650";requirement_debt
"PARQUET-463: Add local DCHECK macros, fix some dcheck bugs exposed
I was also able to remove the `-Wno-unused-value` compiler flag. Removing `-Wno-unused-variable` will have to take place in another patch (more work required).
Closes #67 from wesm/PARQUET-463 and squashes the following commits:
da3afb2 [Wes McKinney] Fix signed-unsigned comparisons inside dchecks
a1ca479 [Wes McKinney] Remove -Wno-unused-value
0b49cc6 [Wes McKinney] Adapt simple dcheck macros from Kudu, fix dcheck failures";requirement_debt
[FLINK-5345] [core] Migrate various cleanup calls to concurrency-safe directory deletion;requirement_debt
"[TABLE SERVICE] replaying TxnRequest is not implemented
*Motivation*
when enabling table service for pulsar at apache/incubator-pulsar#1922, I noticed that replaying TxnRequest is missed somehow.
*Solution*
This PR implements the replaying TxnRequest logic in the command process.
This closes #1505 from sijie/replay_txn_request";requirement_debt
CAMEL-702: A proposed fix for CAMEL-702. Gert will take a look too. Concurrency issue with camel-saon. WORK IN PROGRESS!!;requirement_debt
add todo for ComStmtExecutePacket;requirement_debt
GUACAMOLE-47: Remove XFF header code due to security concerns.;requirement_debt
"Big changes. 
Added whole grammar system. Can now describe what goes on
when trying to process DFDL using a BNF-grammar-like construction set. 
The whole 'grammar' for DFDL is in dsom/GrammarMixins.
Works like a compiler so as to do much more decision making at compile
time than prior-versions. The front end now calls for many more DFDL
properties to be defined than were required before. This required
updating the DFDL schemas in many unit tests and test files.
However, there is still no backend for this. 
Reorganized tests into those that should pass, and those known to fail -
for both the AA-BG tests, and the IBM tests. 
5 fewer tests pass in the AA-BG set, and only 1 IBM test passes now.
This is a minor regression due to the new-front end not having group
references yet, and having not yet implemented type to element
back-referencing in the new front-end, and a bunch of new rich
attributes are now computed on our schema components, many of which
aren't adequately unit tested yet. 
Added the remaining ICU jars that we need to support charset
encoding/decoding, and unit tests that exercise this stuff. This remains
a learning exercise in figuring out how to get the right notification
call backs from ICU for the needed encode/decode error situations in
DFDL. 
Added a Unit test for Unicode, XML, and internationalization. This test
just characterizes the behavior of the Scala environment. So as new
revisions of Scala come out, if something we are depending on, say about
how it does XML namespaces, then there is some likelihood one of these
tests will fail.";requirement_debt
"AMQ-8012 - Improve thread safety of SubQueueSelectorCacheBroker
When returning a copy of the set of selectors we need to synchronize";requirement_debt
HBASE-12090 Bytes: more Unsafe, more Faster. (Vladimir Rodionov);requirement_debt
"NO-JIRA: Skip building Proton examples and tests in GH Action (#871)
These options are enabled in PROTON-2170 and PROTON-2171.
Proton versions that don't implement BUILD_EXAMPLES yet will
ignore it and print a CMake warning.";requirement_debt
LUCENE-3484: Address NullPointerException in TaxonomyWriter caused by lack of thread safety during creation of the parents array.;requirement_debt
LUCENE-3484: Fix NullPointerException in TaxonomyWriter by making the creation of the parents array thread safe.;requirement_debt
LUCENE-3484: Correct a NullPointerException in TaxonomyWriter by ensuring thread safety when creating the parents array.;requirement_debt
LUCENE-3484: Rectify a NullPointerException in TaxonomyWriter by implementing thread safety during the creation of the parents array.;requirement_debt
LUCENE-3484: Resolve a NullPointerException issue in TaxonomyWriter by introducing thread safety in the creation of the parents array.;requirement_debt
LUCENE-3484: Eliminate a NullPointerException in TaxonomyWriter by ensuring that the creation of the parents array is thread safe.;requirement_debt
LUCENE-3484: Fix a NullPointerException in TaxonomyWriter by making the parents array creation thread safe.;requirement_debt
LUCENE-3484: Address an issue of NullPointerException in TaxonomyWriter by introducing thread safety during the creation of the parents array.;requirement_debt
LUCENE-3484: Correct the NullPointerException in TaxonomyWriter by implementing thread safety in the creation of the parents array.;requirement_debt
LUCENE-3484: Rectify a NullPointerException in TaxonomyWriter caused by the lack of thread safety in creating the parents array.;requirement_debt
LUCENE-3484: Resolve a NullPointerException issue in TaxonomyWriter by ensuring thread safety during the creation of the parents array.;requirement_debt
LUCENE-3484: Eliminate a NullPointerException in TaxonomyWriter by making the creation of the parents array thread safe.;requirement_debt
LUCENE-3484: Fix a NullPointerException in TaxonomyWriter by ensuring thread safety when creating the parents array.;requirement_debt
LUCENE-3484: Address an issue of NullPointerException in TaxonomyWriter by introducing thread safety in the creation of the parents array.;requirement_debt
LUCENE-3484: Correct the NullPointerException in TaxonomyWriter by implementing thread safety in creating the parents array.;requirement_debt
LUCENE-3484: Rectify a NullPointerException in TaxonomyWriter caused by the absence of thread safety in the creation of the parents array.;requirement_debt
LUCENE-3484: Resolve a NullPointerException issue in TaxonomyWriter by ensuring that the creation of the parents array is thread safe.;requirement_debt
LUCENE-3484: Eliminate a NullPointerException in TaxonomyWriter by implementing thread safety during the creation of the parents array.;requirement_debt
Bug 8866: Implement work in progress for adding support for Direct Network Usage and TrafficSentinel.;requirement_debt
Bug 8866: Work in progress to incorporate support for Direct Network Usage and TrafficSentinel.;requirement_debt
Bug 8866: In progress, adding support for Direct Network Usage and TrafficSentinel.;requirement_debt
Bug 8866: Support for Direct Network Usage and TrafficSentinel added, work in progress.;requirement_debt
Bug 8866: Work in progress to include support for Direct Network Usage and TrafficSentinel, with ongoing development.;requirement_debt
Bug 8866: In progress, adding support for Direct Network Usage and TrafficSentinel features.;requirement_debt
Bug 8866: Work in progress, introducing support for Direct Network Usage and TrafficSentinel functionality.;requirement_debt
Bug 8866: Support for Direct Network Usage and TrafficSentinel added, currently in development.;requirement_debt
Bug 8866: Work in progress to incorporate support for Direct Network Usage and TrafficSentinel capabilities.;requirement_debt
Bug 8866: In progress, adding support for Direct Network Usage and TrafficSentinel features.;requirement_debt
Bug 8866: Introduce TrafficSentinel support and Direct Network Usage, work in progress.;requirement_debt
Bug 8866: Work in progress to add support for Direct Network Usage and implement TrafficSentinel functionality.;requirement_debt
Bug 8866: In progress, incorporating Direct Network Usage and implementing support for TrafficSentinel.;requirement_debt
Bug 8866: Support for Direct Network Usage and TrafficSentinel added, currently being developed.;requirement_debt
Bug 8866: Work in progress to implement TrafficSentinel support and introduce Direct Network Usage.;requirement_debt
Bug 8866: In progress, adding Direct Network Usage and implementing support for TrafficSentinel.;requirement_debt
Bug 8866: Work in progress to include TrafficSentinel support and implement Direct Network Usage.;requirement_debt
Bug 8866: In progress, incorporating support for Direct Network Usage and implementing TrafficSentinel features.;requirement_debt
Implementing measures for thread safety across multiple threads.;requirement_debt
Introducing thread safety mechanisms to handle multiple threads.;requirement_debt
Enhancing thread safety to accommodate multiple concurrent threads.;requirement_debt
Addressing thread safety concerns in the context of multiple threads.;requirement_debt
Introducing improvements to guarantee thread safety in scenarios involving multiple threads.;requirement_debt
Enhancing the code to handle multiple threads safely.;requirement_debt
Implementing safeguards to ensure thread safety in the presence of multiple threads.;requirement_debt
Addressing thread safety challenges when dealing with multiple concurrent threads.;requirement_debt
Enhancing the codebase to provide thread safety for multiple threads.;requirement_debt
Introducing measures to achieve thread safety in scenarios involving multiple threads.;requirement_debt
Enhancing the codebase to handle multiple threads with improved thread safety.;requirement_debt
Addressing concurrency issues by implementing thread safety measures for multiple threads.;requirement_debt
Introducing thread safety enhancements to support concurrent execution across multiple threads.;requirement_debt
Implementing strategies to ensure thread safety when dealing with multiple threads concurrently.;requirement_debt
Enhancing thread safety mechanisms to accommodate parallel execution by multiple threads.;requirement_debt
Addressing thread synchronization concerns to achieve thread safety in the presence of multiple threads.;requirement_debt
Introducing improvements to enable safe execution across multiple threads.;requirement_debt
Enhancing the code to provide robust thread safety for concurrent execution by multiple threads.;requirement_debt
"Enhancements to RateTracker:
Ensured thread safety to prevent concurrent access issues.
Improved accuracy for more precise rate calculations.
Optimized performance for faster execution.";requirement_debt
Upgraded RateTracker to achieve thread safety, enhance accuracy, and significantly improve performance.;requirement_debt
Implemented thread safety measures, accuracy improvements, and performance optimizations for RateTracker.;requirement_debt
Enhanced RateTracker to be thread safe, highly accurate, and faster in performance by removing the subsampling of rate calculation in the disruptor.;requirement_debt
Updated RateTracker to provide thread safety, improved accuracy, and optimized performance by eliminating subsampling in rate calculation.;requirement_debt
Introduced thread safety, accuracy enhancements, and performance optimizations to RateTracker by removing subsampling for rate calculation in the disruptor.;requirement_debt
Revamped RateTracker to ensure thread safety, enhance calculation accuracy, and significantly boost performance by eliminating subsampling in the disruptor.;requirement_debt
Implemented robust thread safety measures, refined calculation accuracy, and optimized performance for RateTracker by eliminating subsampling in the disruptor.;requirement_debt
Upgraded RateTracker to be thread safe, highly accurate in calculations, and exceptionally fast by removing subsampling in the disruptor.;requirement_debt
Modified RateTracker to achieve thread safety, improve calculation precision, and optimize performance by eliminating subsampling in the disruptor.;requirement_debt
Enhanced RateTracker with comprehensive thread safety, increased calculation accuracy, and improved performance by eliminating subsampling in the disruptor.;requirement_debt
Updated RateTracker to ensure thread safety, deliver more accurate calculations, and achieve faster execution by eliminating subsampling in the disruptor.;requirement_debt
Implemented thread safety mechanisms, refined calculation accuracy, and boosted performance for RateTracker by removing subsampling in the disruptor.;requirement_debt
Optimized RateTracker by incorporating thread safety, enhanced calculation precision, and improved performance through the removal of subsampling in the disruptor.;requirement_debt
Refined RateTracker to provide thread safety, improved calculation accuracy, and accelerated performance by eliminating subsampling in the disruptor.;requirement_debt
Streamlined RateTracker with comprehensive thread safety, enhanced accuracy in calculations, and optimized performance by eliminating subsampling in the disruptor.;requirement_debt
Revamped RateTracker to ensure thread safety, increase calculation accuracy, and significantly improve performance by eliminating the subsampling technique in the disruptor.;requirement_debt
Enhanced RateTracker by introducing thread safety measures, improving calculation accuracy, and optimizing performance through the removal of subsampling in the disruptor.;requirement_debt
Initial implementation of Naive Bayes algorithm. (To-do: Translate to Python, Address security concerns related to code injections);requirement_debt
Initial draft of Naive Bayes algorithm. (To-do: Convert to Python, Address security issues regarding code injections);requirement_debt
Initial version of Naive Bayes algorithm. (To-do: Translate to Python, Resolve security vulnerabilities/code injection risks);requirement_debt
Naive Bayes algorithm in its preliminary state. (To-do: Convert to Python, Address security issues and code injections);requirement_debt
Early version of the Naive Bayes algorithm. (To-do: Translate to Python, Resolve security concerns and code injection vulnerabilities);requirement_debt
Initial implementation of the Naive Bayes algorithm. (To-do: Convert to Python, Address security issues and code injection risks);requirement_debt
Preliminary release of the Naive Bayes algorithm. (To-do: Translate to Python, Resolve security concerns and code injection vulnerabilities);requirement_debt
First iteration of the Naive Bayes algorithm. (To-do: Convert to Python, Address security issues and code injection risks);requirement_debt
Initial implementation of Naive Bayes algorithm. (To-do: Translate to Python, Resolve security concerns related to code injections);requirement_debt
Early stage version of the Naive Bayes algorithm. (To-do: Convert to Python, Address security vulnerabilities and code injection risks);requirement_debt
Initial draft of the Naive Bayes algorithm. (To-do: Translate to Python, Resolve security issues and code injection vulnerabilities);requirement_debt
Preliminary version of Naive Bayes algorithm. (To-do: Convert to Python, Address security concerns regarding code injections);requirement_debt
Initial development of the Naive Bayes algorithm. (To-do: Translate to Python, Resolve security issues and code injection risks);requirement_debt
Initial release of the Naive Bayes algorithm. (To-do: Convert to Python, Address security concerns and code injection vulnerabilities);requirement_debt
Early implementation of the Naive Bayes algorithm. (To-do: Translate to Python, Resolve security issues and code injection risks);requirement_debt
Initial version of the Naive Bayes algorithm. (To-do: Convert to Python, Address security issues and code injection vulnerabilities);requirement_debt
Preliminary implementation of Naive Bayes algorithm. (To-do: Translate to Python, Resolve security concerns and code injection risks);requirement_debt
First version of the Naive Bayes algorithm. (To-do: Convert to Python, Address security issues and code injection vulnerabilities);requirement_debt
"GUAC-676: Unfinished migration to Guacamole.Display - ""transfer"" and similar operations still directly accessed the layer.";requirement_debt
"GUAC-676: Conversion to Guacamole.Display not fully implemented - ""transfer"" and other functions still directly referencing the layer.";requirement_debt
"GUAC-676: Incomplete transition to Guacamole.Display - ""transfer"" and other related tasks still directly utilizing the layer.";requirement_debt
"GUAC-676: Unresolved conversion to Guacamole.Display - ""transfer"" and other operations still directly rely on the layer.";requirement_debt
"GUAC-676: Conversion to Guacamole.Display not entirely completed - ""transfer"" and other functionalities still directly access the layer.";requirement_debt
"GUAC-676: Inadequate migration to Guacamole.Display - ""transfer"" and other tasks still directly depend on the layer.";requirement_debt
"GUAC-676: Conversion to Guacamole.Display partially implemented - ""transfer"" and other functions still directly leverage the layer.";requirement_debt
"GUAC-676: Incomplete transfer to Guacamole.Display - ""transfer"" and other actions still directly make use of the layer.";requirement_debt
"GUAC-676: Unfinished adaptation to Guacamole.Display - ""transfer"" and other features still directly utilize the layer.";requirement_debt
"GUAC-676: Conversion to Guacamole.Display not fully finalized - ""transfer"" and other functionalities still directly reference the layer.";requirement_debt
"GUAC-676: Incomplete conversion to Guacamole.Display - ""transfer"" and other tasks still directly rely on the layer.";requirement_debt
"GUAC-676: Unresolved transition to Guacamole.Display - ""transfer"" and other operations still directly depend on the layer.";requirement_debt
"GUAC-676: Conversion to Guacamole.Display not entirely accomplished - ""transfer"" and other functionalities still directly access the layer.";requirement_debt
"GUAC-676: Inadequate migration to Guacamole.Display - ""transfer"" and other functions still directly leverage the layer.";requirement_debt
"GUAC-676: Conversion to Guacamole.Display partially done - ""transfer"" and other tasks still directly make use of the layer.";requirement_debt
"GUAC-676: Incomplete transfer to Guacamole.Display - ""transfer"" and other features still directly depend on the layer.";requirement_debt
"GUAC-676: Unfinished adaptation to Guacamole.Display - ""transfer"" and other actions still directly utilize the layer.";requirement_debt
"GUAC-676: Conversion to Guacamole.Display not fully completed - ""transfer"" and other functionalities still directly reference the layer.";requirement_debt
"""Enhance GluonCV with quantization support (#15754)

Improve the quantization API
Integrate the GluonCV solution for quantization
Add support for quantization in Gluon SSD
Enhance the API for better usability
Improve the example script for quantization
Implement wildcard matching for excluding layers
Introduce support for int8 dtype parameter
Enable the dataiter API for quantization
Implement try method for robustness
Add unit tests for quantizing Gluon models
Fix linting issues
Resolve linting issue 2
Fix temporary directory issue in Python 2
Address additional linting concerns
Resolve import issue and add TODO comment
Trigger the changes""";requirement_debt
"""Introduce quantization support for GluonCV (#15754)
Enhance the API for quantization functionality
Integrate the solution from GluonCV for seamless quantization
Enable quantization support in Gluon SSD
Improve the API for enhanced usability
Enhance the example script to showcase quantization capabilities
Introduce wildcard matching for excluding specific layers
Add support for int8 dtype parameter in quantization
Enable the dataiter API for quantization
Implement try method to handle exceptions gracefully
Add comprehensive unit tests to verify the quantization of Gluon models
Address linting issues and ensure code quality
Resolve additional linting concern
Fix temporary directory issue in Python 2
Address linting issues once again
Resolve import issue and add a TODO comment for future improvements
Trigger the changes""";requirement_debt
"""Quantization support added to GluonCV (#15754)
Enhance the quantization API to provide more flexibility
Integrate the quantization solution from GluonCV for seamless usage
Extend support for quantization to Gluon SSD models
Improve the API for better usability and convenience
Enhance the example script to demonstrate the quantization process
Implement wildcard matching to exclude specific layers from quantization
Introduce the int8 dtype parameter to control the quantization precision
Enable the dataiter API for easier integration with quantization workflows
Utilize the try method for error handling and graceful exception handling
Develop comprehensive unit tests to validate the quantization functionality
Address linting issues to ensure code quality and consistency
Fix temporary directory issue in Python 2 for compatibility
Resolve linting concerns once again for cleaner codebase
Fix import issue and add a TODO comment for future improvements
Trigger the changes to apply the enhancements""";requirement_debt
"""Enhancements for GluonCV quantization (#15754)
Refine the quantization API for better control and ease of use
Integrate GluonCV's quantization solution to leverage existing capabilities
Add support for quantization in Gluon SSD models
Enhance the API for improved user experience and flexibility
Update the example script to showcase the quantization features
Implement wildcard matching to selectively exclude layers from quantization
Introduce the int8 dtype parameter to specify the quantization precision
Enable the dataiter API to facilitate seamless integration with quantization workflows
Implement try method for robust error handling and exception management
Develop comprehensive unit tests to ensure the accuracy of quantizing Gluon models
Resolve linting issues to maintain code quality and readability
Fix temporary directory issue in Python 2 for compatibility purposes
Address linting concerns once again for cleaner codebase
Fix import issue and add a TODO comment for future improvements
Trigger the changes to apply the quantization enhancements""";requirement_debt
"""Implement quantization support for GluonCV (#15754)
Enhance the API to support quantization functionality
Integrate the quantization solution from GluonCV into the codebase
Enable quantization support for Gluon SSD models
Improve the API to enhance usability and flexibility
Refine the example script to demonstrate quantization capabilities
Introduce wildcard matching to selectively exclude layers from quantization
Add support for the int8 dtype parameter for quantization precision control
Enable the dataiter API to facilitate integration with quantization workflows
Implement the try method for error handling and robustness
Develop unit tests to validate the accuracy of Gluon model quantization
Address linting issues to ensure code quality and consistency
Fix temporary directory issue in Python 2 for compatibility
Resolve linting concerns once again to maintain code cleanliness
Fix import issue and add a TODO comment for future improvements
Trigger the changes to apply the implemented quantization support""";requirement_debt
"""Add quantization capabilities to GluonCV (#15754)
Enhance the API to incorporate quantization functionality
Integrate the quantization solution from GluonCV for seamless usage
Introduce quantization support for Gluon SSD models
Improve the API to provide a more user-friendly experience
Update the example script to showcase the new quantization features
Implement wildcard matching to selectively exclude layers from quantization
Include support for the int8 dtype parameter to control quantization precision
Enable the dataiter API for seamless integration with quantization workflows
Utilize the try method for improved error handling and exception management
Develop comprehensive unit tests to ensure accurate quantization of Gluon models
Address linting issues to maintain code quality and adherence to standards
Fix temporary directory issue in Python 2 for compatibility purposes
Resolve linting concerns once again for cleaner codebase
Fix import issue and add a TODO comment for future improvements
Trigger the changes to apply the added quantization capabilities""";requirement_debt
"""Enhance GluonCV with quantization functionality (#15754)
Refine the API to support quantization features
Integrate the quantization solution provided by GluonCV
Implement quantization support for Gluon SSD models
Improve the API to offer better usability and flexibility
Update the example script to demonstrate the usage of quantization
Implement wildcard matching to exclude specific layers from quantization
Introduce the int8 dtype parameter to control the quantization precision
Enable the dataiter API for seamless integration with quantization workflows
Utilize the try method for better error handling and exception management
Develop comprehensive unit tests to validate the accuracy of Gluon model quantization
Address linting issues to maintain code quality and consistency
Fix temporary directory issue in Python 2 for compatibility purposes
Resolve linting concerns once again for cleaner codebase
Fix import issue and add a TODO comment for future improvements
Trigger the changes to incorporate the enhanced quantization functionality""";requirement_debt
"""Implement quantization support in GluonCV (#15754)
Enhance the API to enable quantization capabilities
Incorporate the quantization solution from GluonCV into the codebase
Introduce support for quantization in Gluon SSD models
Improve the API to offer better usability and flexibility
Update the example script to showcase the quantization functionality
Implement wildcard matching to selectively exclude layers from quantization
Introduce the int8 dtype parameter for controlling quantization precision
Enable the dataiter API for seamless integration with quantization workflows
Utilize the try method for efficient error";requirement_debt
"""Enable quantization support for GluonCV (#15754)
Enhance the API to facilitate quantization functionality
Integrate the quantization solution provided by GluonCV
Add support for quantization in Gluon SSD models
Improve the API for enhanced usability and flexibility
Update the example script to demonstrate the usage of quantization
Implement wildcard matching to selectively exclude layers from quantization process
Introduce the int8 dtype parameter to control the precision of quantization
Enable the dataiter API for seamless integration with quantization workflows
Utilize the try method for robust error handling and exception management
Develop comprehensive unit tests to validate the accuracy of Gluon model quantization
Address linting issues to ensure code quality and maintainability
Fix temporary directory issue in Python 2 for improved compatibility
Resolve linting concerns once again to ensure code cleanliness and adherence to standards
Fix import issue and add a TODO comment for future enhancements
Trigger the changes to enable the quantization support""";requirement_debt
"""Enhance GluonCV with quantization capability (#15754)
Improve the API to incorporate quantization features
Integrate GluonCV's quantization solution for seamless usage
Introduce quantization support for Gluon SSD models
Enhance the API for better usability and flexibility
Update the example script to showcase the quantization functionality
Implement wildcard matching to exclude specific layers from quantization
Support the int8 dtype parameter for controlling quantization precision
Enable the dataiter API for seamless integration with quantization workflows
Utilize the try method for better error handling and exception management
Develop comprehensive unit tests to validate the quantization process
Address linting issues to ensure code quality and adherence to guidelines
Resolve the temporary directory issue in Python 2 for improved compatibility
Resolve linting concerns once again for cleaner codebase
Fix the import issue and add a TODO comment for future improvements
Trigger the changes to incorporate the enhanced quantization capability""";requirement_debt
"""Implement quantization support in GluonCV framework (#15754)
Enhance the API to enable quantization functionality
Integrate the quantization solution provided by GluonCV into the framework
Add support for quantization in Gluon SSD models
Improve the API to offer better usability and flexibility
Update the example script to demonstrate the usage of quantization
Implement wildcard matching to selectively exclude layers from quantization
Introduce the int8 dtype parameter to control the precision of quantization
Enable the dataiter API for seamless integration with quantization workflows
Utilize the try method for efficient error handling and exception management
Develop comprehensive unit tests to validate the accuracy of Gluon model quantization
Address linting issues to maintain code quality and consistency
Fix the temporary directory issue in Python 2 for better compatibility
Resolve linting concerns once again for cleaner codebase
Fix the import issue and add a TODO comment for future improvements
Trigger the changes to incorporate the implemented quantization support""";requirement_debt
"""Enhance GluonCV with quantization capabilities (#15754)
Refine the API to incorporate quantization features
Integrate the quantization solution provided by GluonCV for seamless usage
Add support for quantization in Gluon SSD models
Improve the API to provide better usability and flexibility
Update the example script to showcase the new quantization capabilities
Implement wildcard matching to selectively exclude layers from quantization
Introduce the int8 dtype parameter to control the precision of quantization
Enable the dataiter API for seamless integration with quantization";requirement_debt
"""Add quantization support to GluonCV framework (#15754)
Enhance the API to enable quantization functionality
Integrate the quantization solution provided by GluonCV into the framework
Introduce quantization support for Gluon SSD models
Improve the API to offer better usability and flexibility
Update the example script to demonstrate the usage of quantization
Implement wildcard matching to selectively exclude layers from the quantization process
Introduce the int8 dtype parameter to control the precision of quantization
Enable the dataiter API for seamless integration with quantization workflows
Utilize the try method for efficient error handling and exception management
Develop comprehensive unit tests to validate the accuracy of Gluon model quantization
Address linting issues to ensure code quality and consistency
Resolve the temporary directory issue in Python 2 for improved compatibility
Resolve linting concerns once again for cleaner codebase
Fix the import issue and add a TODO comment for future improvements
Trigger the changes to incorporate the added quantization support""";requirement_debt
"""Improve GluonCV with quantization support (#15754)
Enhance the API to enable quantization functionality in GluonCV
Integrate the quantization solution provided by GluonCV into the framework
Add support for quantization in Gluon SSD models
Improve the API to offer better usability and flexibility
Update the example script to showcase the quantization capabilities
Implement wildcard matching to selectively exclude layers from the quantization process
Introduce the int8 dtype parameter to control the precision of quantization
Enable the dataiter API for seamless integration with quantization workflows
Utilize the try method for efficient error handling and exception management
Develop comprehensive unit tests to validate the accuracy of Gluon model quantization
Address linting issues to maintain code quality and consistency
Resolve the temporary directory issue in Python 2 for better compatibility
Resolve linting concerns once again for a cleaner codebase
Fix the import issue and add a TODO comment for future improvements
Trigger the changes to incorporate the enhanced quantization support""";requirement_debt
"""Enhance GluonCV with improved quantization capabilities (#15754)
Enhance the API to support advanced quantization functionality
Integrate the optimized quantization solution provided by GluonCV
Add comprehensive quantization support for Gluon SSD models
Improve the API for enhanced usability and flexibility
Update the example script to demonstrate the advanced quantization features
Implement wildcard matching to selectively exclude specific layers from quantization
Introduce the int8 dtype parameter for precise control over quantization precision
Enable seamless integration with quantization workflows through the dataiter API
Utilize the try method for robust error handling and exception management
Develop extensive unit tests to validate the accuracy and reliability of quantization
Address linting issues to ensure code quality and adherence to coding standards
Resolve the temporary directory issue in Python 2 for better compatibility
Resolve any remaining linting concerns for a cleaner and consistent codebase
Fix the import issue and add a TODO comment to note potential future improvements
Trigger the changes to incorporate the enhanced quantization capabilities""";requirement_debt
"""Implement advanced quantization support in GluonCV (#15754)
Enhance the API to enable advanced quantization functionality
Integrate the optimized quantization solution provided by GluonCV
Introduce comprehensive quantization support for Gluon SSD models
Improve the API for enhanced usability and flexibility
Update the example script to demonstrate the advanced quantization features
Implement wildcard matching to selectively exclude specific layers from the quantization process
Introduce the int8 dtype parameter for precise control over quantization precision
Enable seamless integration with quantization workflows through the dataiter API
Utilize the try method for improved error handling and exception management
Develop extensive unit tests to validate the accuracy and reliability of quantization
Address any remaining linting issues to ensure code quality and consistency
Resolve the temporary directory issue in Python 2 for improved compatibility
Resolve any remaining linting concerns for a cleaner and consistent codebase
Fix the import issue and add a TODO comment to note potential future improvements
Trigger the changes to incorporate the advanced quantization support""";requirement_debt
"""Enhance GluonCV with advanced quantization functionality (#15754)
Enhance the API to support advanced quantization features in GluonCV
Integrate the optimized quantization solution provided by GluonCV
Add comprehensive quantization support for Gluon SSD models
Improve the API to provide enhanced usability and flexibility
Update the example script to showcase the advanced quantization capabilities
Implement wildcard matching to selectively exclude specific layers from quantization
Introduce the int8 dtype parameter to control the precision of quantization
Enable seamless integration with quantization workflows through the dataiter API
Utilize the try method for improved error handling and exception management
Develop extensive unit tests to validate the accuracy and reliability of quantization
Address linting issues to maintain code quality and consistency
Resolve the temporary directory issue in Python 2 for better compatibility
Resolve any remaining linting concerns for a cleaner and consistent codebase
Fix the import issue and add a TODO comment to note potential future improvements
Trigger the changes to incorporate the advanced quantization functionality""";requirement_debt
"""Implement enhanced quantization support in GluonCV (#15754)
Enhance the API to enable advanced quantization capabilities
Integrate the optimized quantization solution provided by GluonCV
Add comprehensive quantization support for Gluon SSD models
Improve the API to offer enhanced usability and flexibility
Update the example script to demonstrate the advanced quantization features
Implement wildcard matching to selectively exclude specific layers from quantization
Introduce the int8 dtype parameter for precise control over quantization precision
Enable seamless integration with quantization workflows through the dataiter API
Utilize the try method for robust error handling and exception management
Develop extensive unit tests to validate the accuracy and reliability of quantization
Address any remaining linting issues to maintain code quality and consistency
Resolve the temporary directory issue in Python 2 for improved compatibility
Resolve any remaining linting concerns for a cleaner and consistent codebase
Fix the import issue and add a TODO comment to note potential future improvements
Trigger the changes to incorporate the enhanced quantization support""";requirement_debt
Work in progress: Camel SAP NetWeaver component.;requirement_debt
In progress: Developing the Camel SAP NetWeaver component.;requirement_debt
Ongoing work on the Camel SAP NetWeaver component.;requirement_debt
Work in progress for the Camel SAP NetWeaver component development.;requirement_debt
Currently working on the Camel SAP NetWeaver component.;requirement_debt
In the process of developing the Camel SAP NetWeaver component.;requirement_debt
Continuing development of the Camel SAP NetWeaver component.;requirement_debt
In the midst of working on the Camel SAP NetWeaver component.;requirement_debt
Making progress on the development of the Camel SAP NetWeaver component.;requirement_debt
Currently engaged in the development of the Camel SAP NetWeaver component.;requirement_debt
Actively working on the Camel SAP NetWeaver component.;requirement_debt
Engaged in the ongoing development of the Camel SAP NetWeaver component.;requirement_debt
In the works: Developing the Camel SAP NetWeaver component.;requirement_debt
Currently involved in the development of the Camel SAP NetWeaver component.;requirement_debt
Making strides in the development of the Camel SAP NetWeaver component.;requirement_debt
Continuing efforts on the Camel SAP NetWeaver component.;requirement_debt
Progressing with the development of the Camel SAP NetWeaver component.;requirement_debt
Advancing the development of the Camel SAP NetWeaver component.;requirement_debt
"""ARROW-3882: Implementation of Cast Kernel for most types in Rust
This PR introduces a cast kernel for most Arrow types, enabling efficient type conversion operations. However, there are a few limitations to note once the PR is complete:
- Casting to or from `StructArray` is not supported.
- Casting `ListArray` to a non-list array is not supported.
- Casting between incompatible primitive types, such as temporal to boolean, is not supported.
Closes #3797 by nevi-me/ARROW-3882, merging the following commits:
67c3ab3 <Wakahisa> Merge branch 'master' into ARROW-3882
0f42cd1 <Neville Dipale> Replaced cast macros with generic functions
66acfb3 <Neville Dipale> Moved cast_kernels to kernels/cast
9784313 <Neville Dipale> Fixed doc comment
04c7307 <Neville Dipale> Implemented boolean casts, documentation, and error handling
4a8906b <Neville Dipale> Implemented cast from binary to numeric
c3b8961 <Neville Dipale> Used Arrow cast in datafusion
ae9509c <Neville Dipale> ARROW-3882: Implementation of Cast Kernel for most types""";requirement_debt
"""ARROW-3882: Rust implementation of Cast Kernel for various types
In this PR, a cast kernel for most Arrow types is added, allowing efficient type conversion. However, there are a few limitations to consider once the PR is complete:
- Casting to or from `StructArray` is not supported.
- Casting `ListArray` to a non-list array is not supported.
- Casting between incompatible primitive types (e.g., temporal to boolean) is not supported.
Closes #3797 by nevi-me/ARROW-3882, with the following commits squashed:
67c3ab3 <Wakahisa> Merge branch 'master' into ARROW-3882
0f42cd1 <Neville Dipale> Replaced cast macros with generic functions
66acfb3 <Neville Dipale> Moved cast_kernels to kernels/cast
9784313 <Neville Dipale> Fixed doc comment
04c7307 <Neville Dipale> Implemented boolean casts, documentation, and error handling
4a8906b <Neville Dipale> Implemented cast from binary to numeric
c3b8961 <Neville Dipale> Used Arrow cast in datafusion
ae9509c <Neville Dipale> ARROW-3882: Rust implementation of Cast Kernel for various types""";requirement_debt
"ARROW-3882: [Rust] Implementation of Cast Kernel for Various Arrow Types
This commit introduces a cast kernel implementation that supports most Arrow types. The purpose of this implementation is to enable casting operations between different data types in Arrow.
However, there are a few limitations to be aware of:
- Casting to or from `StructArray` is not currently supported.
- Casting `ListArray` to a non-list array is not supported.
- Casting of incompatible primitive types, such as temporal to boolean, is not supported.
This commit also includes the resolution of issue #3797, which was addressed by the contributions made in the following commits:
- 67c3ab3 <Wakahisa> Merge branch 'master' into ARROW-3882
- 0f42cd1 <Neville Dipale> Replaced cast macros with generic functions
- 66acfb3 <Neville Dipale> Moved cast_kernels to kernels/cast directory
- 9784313 <Neville Dipale> Fixed documentation comment
- 04c7307 <Neville Dipale> Added support for boolean casts, improved documentation, and error handling
- 4a8906b <Neville Dipale> Implemented cast operation from binary to numeric types
- c3b8961 <Neville Dipale> Utilized Arrow cast in datafusion module
- ae9509c <Neville Dipale> ARROW-3882: Cast Kernel for most types

Closes #3797, which was raised by the nevi-me/ARROW-3882 branch.";requirement_debt
"ARROW-3882: [Rust] Implementation of Cast Kernel for Various Arrow Types
This commit introduces a cast kernel implementation that supports most Arrow types. It enables casting operations between compatible types within the Arrow framework. However, there are a few limitations to be aware of:
- Casting to or from `StructArray` is not supported.
- Casting `ListArray` to a non-list array is not supported.
- Casting between incompatible primitive types, such as temporal to boolean, is not supported.
This PR, from the branch nevi-me/ARROW-3882, closes issue #379It also includes squashed commits from various contributors, including:
- 67c3ab3 by Wakahisa: Merge branch 'master' into ARROW-3882
- 0f42cd1 by Neville Dipale: Replacement of cast macros with generic functions
- 66acfb3 by Neville Dipale: Relocation of cast_kernels to kernels/cast directory
- 9784313 by Neville Dipale: Documentation comment fixes
- 04c7307 by Neville Dipale: Implementation of boolean casts, documentation improvements, and error handling
- 4a8906b by Neville Dipale: Casting from binary to numeric types
- c3b8961 by Neville Dipale: Usage of arrow cast in datafusion
- ae9509c by Neville Dipale: ARROW-3882: Cast Kernel implementation for most types";requirement_debt
"ARROW-3882: [Rust] Implementation of Cast Kernel for Various Arrow Types
This commit introduces a cast kernel implementation for most Arrow types in Rust. The cast kernel allows for type conversion operations within the Arrow framework.
However, there are some limitations to note:
- Casting to or from `StructArray` is not supported.
- Casting `ListArray` to a non-list array is not supported.
- Casting between incompatible primitive types, such as temporal to boolean, is not supported.
This PR (Pull Request) aims to address these limitations and provides a foundation for efficient type casting within Arrow. It closes issue #3797 and includes the following squashed commits:
- Merge branch 'master' into ARROW-3882 (commit hash: 67c3ab3, author: Wakahisa)
- Replace cast macros with generic functions (commit hash: 0f42cd1, author: Neville Dipale)
- Move cast_kernels to kernels/cast directory (commit hash: 66acfb3, author: Neville Dipale)
- Fix doc comment (commit hash: 9784313, author: Neville Dipale)
- Add support for boolean casts, update documentation, and improve error handling (commit hash: 04c7307, author: Neville Dipale)
- Enable casting from binary to numeric types (commit hash: 4a8906b, author: Neville Dipale)
- Utilize arrow cast in datafusion (commit hash: c3b8961, author: Neville Dipale)
- ARROW-3882: Implementation of Cast Kernel for most types (commit hash: ae9509c, author: Neville Dipale)";requirement_debt
"ARROW-3882: [Rust] Implementation of Cast Kernel for Various Arrow Types
This commit introduces a cast kernel implementation that supports most of the Arrow types. It allows for efficient data type conversion within the Arrow ecosystem.
There are some limitations to be aware of:
- Casting to or from `StructArray` is not yet supported.
- Casting `ListArray` to a non-list array is not supported.
- Casting between incompatible primitive types, such as temporal to boolean, is not supported.
This PR, contributed by nevi-me, addresses these limitations and closes issue #379It includes the following squashed commits:
- Merge branch 'master' into ARROW-3882 (67c3ab3, by Wakahisa)
- Replace cast macros with generic functions (0f42cd1, by Neville Dipale)
- Move cast_kernels to kernels/cast (66acfb3, by Neville Dipale)
- Fix documentation comment (9784313, by Neville Dipale)
- Add support for boolean casts, improve documentation, and handle errors (04c7307, by Neville Dipale)
- Implement cast from binary to numeric (4a8906b, by Neville Dipale)
- Use arrow cast in datafusion (c3b8961, by Neville Dipale)
- ARROW-3882: Cast Kernel for most types (ae9509c, by Neville Dipale)";requirement_debt
"ARROW-3882: [Rust] Implementation of Cast Kernel for various Arrow types
This commit introduces a new cast kernel implementation for a wide range of Arrow types. The purpose of this implementation is to enable efficient and accurate casting operations within the Rust implementation of Arrow.
There are a few limitations to be aware of once the pull request is completed:
- Casting to or from `StructArray` is not supported
- Casting `ListArray` to a non-list array is not supported
- Casting of incompatible primitive types, such as temporal to boolean, is not supported
This change resolves #3797 and incorporates the following commits into one:
- 67c3ab3 <Wakahisa> Merge branch 'master' into ARROW-3882
- 0f42cd1 <Neville Dipale> Replacement of cast macros with generic functions
- 66acfb3 <Neville Dipale> Move cast_kernels to kernels/cast directory
- 9784313 <Neville Dipale> Fix documentation comment
- 04c7307 <Neville Dipale> Implement boolean casts, update documentation, handle errors
- 4a8906b <Neville Dipale> Implement cast from binary to numeric types
- c3b8961 <Neville Dipale> Utilize arrow cast in datafusion module
- ae9509c <Neville Dipale> ARROW-3882: Cast Kernel implementation for various types";requirement_debt
"ARROW-3882: [Rust] Implementation of Cast Kernel for Various Arrow Types
This commit introduces a cast kernel implementation for a wide range of Arrow types. It provides the capability to perform data type casting operations. However, there are some limitations that need to be addressed in future updates. Currently, casting to or from `StructArray` is not supported, casting `ListArray` to a non-list array is not supported, and casting of incompatible primitive types, such as temporal to boolean, is also not supported. This commit closes issue #3797 from the `nevi-me/ARROW-3882` branch and incorporates the following commits:

- 67c3ab3 <Wakahisa> Merge branch 'master' into ARROW-3882
- 0f42cd1 <Neville Dipale> Replaced cast macros with generic functions
- 66acfb3 <Neville Dipale> Moved cast_kernels to kernels/cast directory
- 9784313 <Neville Dipale> Fixed documentation comment
- 04c7307 <Neville Dipale> Added support for boolean casts, improved documentation and error handling
- 4a8906b <Neville Dipale> Implemented cast from binary to numeric types
- c3b8961 <Neville Dipale> Utilized arrow cast in datafusion
- ae9509c <Neville Dipale> ARROW-3882: Cast Kernel for most types

Please note that the changes made in this commit bring the ability to perform cast operations for most types in Arrow.";requirement_debt
"ARROW-3882: [Rust] Implementation of Cast Kernel for Most Types
This commit introduces a cast kernel implementation for most types in Arrow. The goal is to provide efficient and accurate type casting capabilities within the Rust implementation. However, there are some limitations to consider:
- Casting to or from `StructArray` is currently not supported.
- Casting `ListArray` to a non-list array is not supported.
- Casting of incompatible primitive types, such as temporal to boolean, is not supported.
This change addresses ARROW-3882 and closes issue #379It also includes the following squashed commits:
- Merge branch 'master' into ARROW-3882 (67c3ab3, authored by Wakahisa)
- Replace cast macros with generic functions (0f42cd1, authored by Neville Dipale)
- Move cast_kernels to kernels/cast (66acfb3, authored by Neville Dipale)
- Fix doc comment (9784313, authored by Neville Dipale)
- Implement boolean casts, update documentation, and improve error handling (04c7307, authored by Neville Dipale)
- Enable casting from binary to numeric types (4a8906b, authored by Neville Dipale)
- Utilize arrow cast in datafusion (c3b8961, authored by Neville Dipale)
- ARROW-3882: Cast Kernel for most types (ae9509c, authored by Neville Dipale)

Please note that further improvements and optimizations will be made in future commits.";requirement_debt
"ARROW-3882: Implement Cast Kernel for various types in Rust
This commit introduces a cast kernel implementation for most types in the Arrow project. The cast kernel enables type conversion operations across different Arrow types. However, there are a few limitations to note:
- Casting to or from `StructArray` is not supported.
- Casting `ListArray` to a non-list array is not supported.
- Casting incompatible primitive types, such as temporal to boolean, is not supported.

This change resolves issue #3797 and includes the following commits:
- 67c3ab3 <Wakahisa> Merge branch 'master' into ARROW-3882
- 0f42cd1 <Neville Dipale> Replace cast macros with generic functions
- 66acfb3 <Neville Dipale> Move cast_kernels to kernels/cast directory
- 9784313 <Neville Dipale> Fix documentation comment
- 04c7307 <Neville Dipale> Implement boolean casts, update documentation, and handle errors
- 4a8906b <Neville Dipale> Implement cast from binary to numeric types
- c3b8961 <Neville Dipale> Use arrow cast in datafusion
- ae9509c <Neville Dipale> ARROW-3882: Implement Cast Kernel for most types

Closes #3797 from nevi-me/ARROW-3882.";requirement_debt
"""ARROW-3882: [Rust] Implement Cast Kernel for a Wide Range of Arrow Types
This PR introduces a cast kernel implementation for various Arrow types, enabling efficient data type conversions. However, there are a few limitations that should be noted:

Casting to or from StructArray is currently not supported.
Casting ListArray to a non-list array is not supported.
Casting of incompatible primitive types, such as temporal to boolean, is not supported.
The PR closes issue #3797 and includes the following commits:
67c3ab3 <Wakahisa> Merge branch 'master' into ARROW-3882
0f42cd1 <Neville Dipale> Replace cast macros with generic functions
66acfb3 <Neville Dipale> Move cast_kernels to kernels/cast directory
9784313 <Neville Dipale> Fix documentation comment
04c7307 <Neville Dipale> Implement boolean casts, update documentation, and handle errors
4a8906b <Neville Dipale> Implement cast from binary to numeric types
c3b8961 <Neville Dipale> Integrate arrow cast in datafusion
ae9509c <Neville Dipale> ARROW-3882: Implement Cast Kernel for most types""";requirement_debt
"""ARROW-3882: [Rust] Enhance Cast Kernel to Support a Wide Array of Arrow Types
This commit introduces significant improvements to the cast kernel, enabling it to handle a broader range of Arrow types. However, it's important to note some limitations in the current implementation:

Casting to or from StructArray is not yet supported.
Casting ListArray to a non-list array is not currently implemented.
Casting between incompatible primitive types, such as temporal to boolean, is not supported.
The commit resolves issue #3797 and includes the following changes:
67c3ab3 <Wakahisa> Merge branch 'master' into ARROW-3882
0f42cd1 <Neville Dipale> Replace cast macros with generic functions
66acfb3 <Neville Dipale> Refactor cast_kernels by moving them to the kernels/cast directory
9784313 <Neville Dipale> Update documentation comment
04c7307 <Neville Dipale> Implement boolean casts, enhance documentation, and handle errors effectively
4a8906b <Neville Dipale> Enable cast from binary to numeric types
c3b8961 <Neville Dipale> Integrate arrow cast in datafusion
ae9509c <Neville Dipale> ARROW-3882: Implement Cast Kernel for a wide range of types""";requirement_debt
"""ARROW-3882: [Rust] Comprehensive Cast Kernel Implementation for Diverse Arrow Types
This commit encompasses a comprehensive implementation of the cast kernel, enabling seamless data type conversions across a wide range of Arrow types. However, there are a few limitations to consider:

The casting operations involving StructArray are currently not supported.
Casting ListArray to a non-list array is not yet implemented.
Casting between incompatible primitive types, such as temporal to boolean, is not supported.
The commit effectively addresses issue #3797 and incorporates the following changes:
67c3ab3 <Wakahisa> Merge branch 'master' into ARROW-3882
0f42cd1 <Neville Dipale> Introduce generic functions to replace cast macros
66acfb3 <Neville Dipale> Refactor cast_kernels and relocate them to the kernels/cast directory
9784313 <Neville Dipale> Improve documentation comments
04c7307 <Neville Dipale> Implement boolean casts, update documentation, and handle errors
4a8906b <Neville Dipale> Implement cast from binary to numeric types
c3b8961 <Neville Dipale> Integrate arrow cast in datafusion
ae9509c <Neville Dipale> ARROW-3882: Implement Cast Kernel for a wide variety of types""";requirement_debt
"ARROW-3882: [Rust] Implementation of Cast Kernel for various Arrow types
This commit introduces a cast kernel for a wide range of Arrow types. It provides the ability to perform type casting operations on most data types supported by Arrow.
Here are the limitations to consider once the pull request is complete:
- Casting to or from `StructArray` is not currently supported.
- Casting `ListArray` to a non-list array is not supported.
- Casting between incompatible primitive types, such as temporal to boolean, is not supported.
This commit resolves #3797 by merging the changes from the nevi-me/ARROW-3882 branch. The commit also includes several squashed commits from different contributors, such as Wakahisa and Neville Dipale. Notable changes include replacing cast macros with generic functions, reorganizing the cast kernels into the kernels/cast directory, and improving documentation, error handling, and support for boolean casts and binary to numeric casting.";requirement_debt
"ARROW-3882: [Rust] Implementation of Cast Kernel for Various Arrow Types
This commit introduces a cast kernel implementation for most Arrow types in Rust. The cast functionality allows for type conversion between different Arrow data types. However, there are certain limitations to be aware of once the pull request is complete. These limitations include the lack of support for casting to or from `StructArray`, casting `ListArray` to a non-list array, and casting of incompatible primitive types (e.g., temporal to boolean).

This commit closes issue #3797, which was opened by the contributor nevi-me/ARROW-388The commit also includes several squashed commits from other contributors, including Wakahisa and Neville Dipale. The squashed commits involve merging the master branch into the ARROW-3882 branch, replacing cast macros with generic functions, restructuring the cast_kernels directory to kernels/cast, fixing documentation comments, handling boolean casts and errors, casting binary to numeric types, and utilizing the arrow cast in datafusion.
";requirement_debt
"ARROW-3882: [Rust] Implementation of Cast Kernel for Various Arrow Types
This commit introduces a cast kernel implementation that supports most Arrow types. It enables casting operations between compatible types.
However, there are a few limitations that should be noted:
- Casting to or from `StructArray` is not supported.
- Casting `ListArray` to a non-list array is not supported.
- Casting between incompatible primitive types, such as temporal to boolean, is not supported.
This PR resolves #3797 and includes the following commits:
- 67c3ab3 <Wakahisa> Merge branch 'master' into ARROW-3882
- 0f42cd1 <Neville Dipale> Replaced cast macros with generic functions
- 66acfb3 <Neville Dipale> Moved cast_kernels to kernels/cast directory
- 9784313 <Neville Dipale> Fixed documentation comment
- 04c7307 <Neville Dipale> Added support for boolean casts, improved documentation and error handling
- 4a8906b <Neville Dipale> Enabled casting from binary to numeric types
- c3b8961 <Neville Dipale> Utilized arrow cast in datafusion
- ae9509c <Neville Dipale> ARROW-3882: Cast Kernel for most types";requirement_debt
"""ARROW-3882: [Rust] Implementation of Cast Kernel for various Arrow types
This commit adds a cast kernel implementation that supports most Arrow types. However, there are a few limitations to be aware of:

Casting to or from StructArray is not currently supported
Casting ListArray to a non-list array is not supported
Casting between incompatible primitive types, such as temporal to boolean, is not supported
This change addresses the limitations and adds the necessary functionality for casting operations. The commit closes issue #3797 from the nevi-me/ARROW-3882 branch and includes the following squashed commits:
Merge branch 'master' into ARROW-3882 (commit: 67c3ab3, author: Wakahisa)
Replace cast macros with generic functions (commit: 0f42cd1, author: Neville Dipale)
Move cast_kernels to kernels/cast directory (commit: 66acfb3, author: Neville Dipale)
Fix doc comment (commit: 9784313, author: Neville Dipale)
Add support for boolean casts, update documentation, and improve error handling (commit: 04c7307, author: Neville Dipale)
Enable casting from binary to numeric types (commit: 4a8906b, author: Neville Dipale)
Utilize arrow cast in datafusion (commit: c3b8961, author: Neville Dipale)
ARROW-3882: Cast Kernel implementation for most types (commit: ae9509c, author: Neville Dipale)""";requirement_debt
"""ARROW-3882: [Rust] Implementation of Cast Kernel for diverse Arrow types
This commit introduces a cast kernel implementation that handles a wide range of Arrow types. However, there are certain limitations to be aware of:
The casting of StructArray is currently not supported
Converting a ListArray to a non-list array is not possible
Casting between incompatible primitive types, such as temporal to boolean, is not supported
This commit addresses these limitations and adds the necessary functionality for casting operations. It closes issue #3797 from the nevi-me/ARROW-3882 branch and includes the following squashed commits:
Merge branch 'master' into ARROW-3882 (commit: 67c3ab3, author: Wakahisa)
Replaced cast macros with generic functions (commit: 0f42cd1, author: Neville Dipale)
Moved cast_kernels to the kernels/cast directory (commit: 66acfb3, author: Neville Dipale)
Fixed the documentation comment (commit: 9784313, author: Neville Dipale)
Added support for boolean casts, updated the documentation, and improved error handling (commit: 04c7307, author: Neville Dipale)
Enabled casting from binary to numeric types (commit: 4a8906b, author: Neville Dipale)
Utilized arrow cast in datafusion (commit: c3b8961, author: Neville Dipale)
ARROW-3882: Implementation of Cast Kernel for most types (commit: ae9509c, author: Neville Dipale)""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following changes:
  - Compilation of all dedup patches into functions.
  - The main program now includes function calls for each dedupOp and invokes the corresponding functions.
  - Relocation of the recomputation-related code to a new class.
  - Addition of a new test class to compare the recomputed results with the original outputs.
The current code does not support multiple loops. Future commits will focus on optimizing the construction of multi-return functions to transform equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following changes:
- Compilation of all dedup patches into functions.
- The main program now includes function calls for each dedupOp and executes the corresponding function.
- The recomputation-related code has been moved to a new class.
- A new test class has been added to compare the recomputed results with the original outputs.
The current code does not support multiple loops. Subsequent commits will focus on optimizing the construction of multi-return functions and incorporating equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Enhancing re-computation from lineage with dedup
This patch introduces the following changes:
- Compilation of all dedup patches into functions for improved efficiency.
- Modification of the main program to include function calls for each dedup operation and invoke the corresponding functions.
- Relocation of the recomputation-related code to a new class.
- Addition of a new test class to compare the recomputed results with the original outputs.
The current code does not yet support multiple loops, but future commits will focus on optimizing the construction of multi-return functions by consolidating equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Enhancements to re-computation from lineage with dedup
This patch introduces the following changes:
- Compilation of all dedup patches into functions
- The main program now includes function calls for each dedupOp and invokes the corresponding functions
- Relocation of the recomputation code to a new class
- Addition of a new test class to compare the recomputed results with the original outputs
The current code does not yet support multiple loops. Subsequent commits will focus on optimizing the construction of multi-return functions and incorporating equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following changes:
  - Compilation of all dedup patches into functions
  - Function calls for each dedup operation in the main program
  - Relocation of recomputation-related code to a new class
  - Addition of a new test class to compare recomputed results with original outputs
The current code does not support multiple loops. Future commits will focus on optimizing the construction of multi-return functions and incorporating equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following changes:
- Compilation of all dedup patches into functions.
- Modification of the main program to include function calls for each dedup operation and invoke the corresponding function.
- Relocation of the recomputation-related code to a new class.
- Addition of a new test class to compare the recomputed results with the original outputs.
The current code does not support multiple loops. Subsequent commits will focus on optimizing the construction of multi-return functions to consolidate equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following changes:
- Compilation of all dedup patches into functions.
- The main program includes function calls for each dedup operation and invokes the respective function.
- Relocation of the recomputation-related code to a new class.
- Addition of a new test class to compare the recomputed results with the original outputs.
The existing code does not support multiple loops. Subsequent commits will incorporate optimizations to build multi-return functions that consolidate equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following changes:
- Compilation of all dedup patches into functions
- The main program now includes function calls for each dedupOp and invokes the corresponding function
- Relocation of the recomputation related code to a new class
- Addition of a new test class to compare the recomputed results with the original outputs
The current code does not yet support multiple loops. Future commits will focus on optimizing the construction of multi-return functions and incorporating equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following enhancements:
- Compilation of all dedup patches into functions.
- Placement of function calls for each dedup operation in the main program, invoking the respective functions.
- Relocation of recomputation-related code to a new class.
- Addition of a new test class to compare recomputed results with the original outputs.
The current code does not support multiple loops. Future commits will include optimizations to construct multi-return functions for equivalent function calls within loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following changes:
- Compilation of all dedup patches into functions.
- Function calls for each dedupOp in the main program, invoking the respective functions.
- Relocation of the recomputation related code to a new class.
- Addition of a new test class to compare the recomputed results with the original outputs.
The current code does not yet support multiple loops. Future commits will focus on optimizing the construction of multi-return functions and incorporating equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following changes:
  - Compilation of all dedup patches into functions
  - Function calls for each dedupOp in the main program
  - Relocation of recomputation-related code to a new class
  - Addition of a new test class to compare recomputed results with original outputs
The current code does not support multiple loops. Subsequent commits will focus on optimizing the construction of multi-return functions and incorporating equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following changes:
- Compilation of all dedup patches into functions
- The main program now includes function calls for each dedup operation and invokes the corresponding function
- Relocation of the recomputation-related code to a new class
- Addition of a new test class to compare the recomputed results with the original outputs
The current code does not support multiple loops. Subsequent commits will focus on optimizing the construction of multi-return functions and converting equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following enhancements:
- Compilation of all dedup patches into functions
- Function calls for each dedup operation in the main program
- Relocation of recomputation-related code to a new class
- Addition of a new test class to validate recomputed results against original outputs
At present, the code does not support multiple loops. Subsequent commits will focus on optimizing the construction of multi-return functions to consolidate equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following changes:
- Compilation of all dedup patches into functions.
- Addition of function calls for each dedupOp in the main program, which invokes the corresponding function.
- Relocation of the recomputation-related code to a new class.
- Inclusion of a new test class to compare the recomputed results with the original outputs.
The current code does not support multiple loops. Subsequent commits will focus on optimizing the construction of multi-return functions that consolidate equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following enhancements:
- Compilation of all dedup patches into functions.
- The main program now includes function calls for each dedupOp and invokes the corresponding function.
- Relocation of the recomputation-related code to a new class.
- Addition of a new test class to compare the recomputed results with the original outputs.
The current code does not yet support multiple loops. Subsequent commits will focus on optimizing the construction of multi-return functions by consolidating equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following changes:
  - The compilation process now incorporates all dedup patches into functions.
  - The main program is modified to include a function call for each dedup operation, and the corresponding function is invoked.
  - The recomputation-related code is moved to a new class.
  - A new test class is added to compare the recomputed results with the original outputs.
The current code does not yet support multiple loops. Subsequent commits will focus on optimizing the construction of multi-return functions to replace equivalent function calls with loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following enhancements:
- Compilation of all dedup patches into functions.
- Addition of function calls for each dedupOp in the main program, invoking the corresponding function.
- Relocation of the recomputation related code to a new class.
- Inclusion of a new test class to compare the recomputed results with the original outputs.
The current code does not yet support multiple loops. Subsequent commits will focus on optimizing the construction of multi-return functions and incorporating equivalent function calls into loops.""";requirement_debt
"""[SYSTEMDS-2650] Re-computation from lineage with dedup
This patch introduces the following changes:
- Compilation of all dedup patches into functions
- Function calls for each dedup operation in the main program
- Relocation of recomputation-related code to a new class
- Addition of a new test class to compare recomputed results with original outputs
The current code does not support multiple loops, but future commits will address this limitation by optimizing the construction of multi-return functions and incorporating equivalent function calls into loops.""";requirement_debt
Update the example blueprint for the Node.JS Todo application.;requirement_debt
Revise the sample blueprint for the Node.JS Todo application.;requirement_debt
Enhance the example blueprint for the Node.JS Todo application.;requirement_debt
Modify the blueprint example for the Node.JS Todo application.;requirement_debt
Update the blueprint template for the Node.JS Todo application.;requirement_debt
Refactor the example blueprint for the Node.JS Todo application.;requirement_debt
Adjust the sample blueprint for the Node.JS Todo application.;requirement_debt
Improve the blueprint structure for the Node.JS Todo application.;requirement_debt
Fine-tune the example blueprint for the Node.JS Todo application.;requirement_debt
Adapt the blueprint template for the Node.JS Todo application.;requirement_debt
Enhance the clarity of the example blueprint for the Node.JS Todo application.;requirement_debt
Revamp the structure of the blueprint for the Node.JS Todo application.;requirement_debt
Customize the example blueprint for the Node.JS Todo application.;requirement_debt
Update the formatting of the blueprint for the Node.JS Todo application.;requirement_debt
Refine the example blueprint for the Node.JS Todo application.;requirement_debt
Adjust the layout of the blueprint for the Node.JS Todo application.;requirement_debt
Optimize the structure of the example blueprint for the Node.JS Todo application.;requirement_debt
Streamline the blueprint template for the Node.JS Todo application.;requirement_debt
The test for AI on the lengthKind pattern is now functional, although it relies on features that have not been implemented yet, such as string padding/trimming. To make it work, some modifications were made. The test still validates the lengthKind pattern, but it handles the padding/trimming by utilizing initiators/terminators. Additionally, the AI has been rewritten as a self-contained TDML test file in the tresys-contributed repository, and the old AI file has been removed.;requirement_debt
The lengthKind pattern test for AI is now operational, albeit with dependencies on unimplemented features like string padding/trimming. To ensure functionality, certain adjustments were made. While the test continues to evaluate the lengthKind pattern, it circumvents padding/trimming by utilizing initiators/terminators.;requirement_debt
The test for AI on the lengthKind pattern now functions properly, although it relies on features that are not yet implemented, such as string padding/trimming. To make it work, some additional elements were introduced. Despite the modifications, the test effectively exercises the lengthKind pattern by leveraging initiators/terminators to address padding concerns.;requirement_debt
A successful implementation of the test for AI on the lengthKind pattern has been achieved. However, as certain features like string padding/trimming are still pending development, specific adjustments were made to ensure functionality. Despite these changes, the test accurately verifies the lengthKind pattern by utilizing initiators/terminators to handle the padding aspects.;requirement_debt
The AI test for the lengthKind pattern now functions as intended, even though it depends on features that are yet to be implemented, such as string padding/trimming. To overcome this limitation, certain modifications were made to the test. However, it still effectively validates the lengthKind pattern by employing initiators/terminators to manage padding-related considerations.;requirement_debt
The lengthKind pattern test for AI is now operational, although it relies on features that have not been implemented yet, such as string padding/trimming. To accommodate this, several adjustments were made to ensure functionality. Despite these changes, the test remains a valid assessment of the lengthKind pattern and utilizes initiators/terminators to handle the padding requirements.;requirement_debt
The AI test focusing on the lengthKind pattern is now functional, even though it utilizes features that have not been implemented, such as string padding/trimming. To address this limitation, certain modifications were implemented to ensure proper functioning. Despite these alterations, the test effectively examines the lengthKind pattern, using initiators/terminators to manage padding concerns.;requirement_debt
The test for AI on the lengthKind pattern has been successfully implemented, although it relies on features that are yet to be developed, such as string padding/trimming. In order to make it work, specific adjustments were made. Nevertheless, the test continues to accurately assess the lengthKind pattern by employing initiators/terminators to handle padding-related requirements.;requirement_debt
The lengthKind pattern test for AI is now operational, although it utilizes features that are not yet implemented, including string padding/trimming. To ensure functionality, certain additions were made. Despite these modifications, the test effectively exercises the lengthKind pattern, bypassing padding/trimming by employing initiators/terminators.;requirement_debt
The test for AI on the lengthKind pattern is now functional, even though it depends on features that are yet to be implemented, such as string padding/trimming. To make it work, specific adjustments were incorporated. Nevertheless, the test remains a valid evaluation of the lengthKind pattern by utilizing initiators/terminators to handle the padding aspects.;requirement_debt
The AI test for the lengthKind pattern is now successfully functioning, although it relies on features that are not yet implemented, such as string padding/trimming. In order to address this limitation, certain modifications were made to ensure proper operation. Despite these changes, the test accurately examines the lengthKind pattern by utilizing initiators/terminators to handle padding-related considerations.;requirement_debt
The lengthKind pattern test for AI is now operational, although it relies on features that have not been implemented yet, such as string padding/trimming. To accommodate this, several adjustments were made to ensure functionality. Despite these changes, the test remains a valid assessment of the lengthKind pattern and utilizes initiators/terminators to handle the padding requirements.;requirement_debt
The AI test focusing on the lengthKind pattern is now functional, even though it utilizes features that have not been implemented, such as string padding/trimming. To address this limitation, certain modifications were implemented to ensure proper functioning. Despite these alterations, the test effectively examines the lengthKind pattern, using initiators/terminators to manage padding concerns.;requirement_debt
The test for AI on the lengthKind pattern has been successfully implemented, although it relies on features that are yet to be developed, such as string padding/trimming. In order to make it work, specific adjustments were made. Nevertheless, the test continues to accurately assess the lengthKind pattern by employing initiators/terminators to handle padding-related requirements.;requirement_debt
The lengthKind pattern test for AI is now operational, although it utilizes features that are not yet implemented, including string padding/trimming. To ensure functionality, certain additions were made. Despite these modifications, the test effectively exercises the lengthKind pattern, bypassing padding/trimming by employing initiators/terminators.;requirement_debt
The test for AI on the lengthKind pattern is now functional, even though it depends on features that are yet to be implemented, such as string padding/trimming. To make it work, specific adjustments were incorporated. Nevertheless, the test remains a valid evaluation of the lengthKind pattern by utilizing initiators/terminators to handle the padding aspects.;requirement_debt
The AI test for the lengthKind pattern is now successfully functioning, although it relies on features that are not yet implemented, such as string padding/trimming. In order to address this limitation, certain modifications were made to ensure proper operation. Despite these changes, the test accurately examines the lengthKind pattern by utilizing initiators/terminators to handle padding-related considerations.;requirement_debt
The lengthKind pattern test for AI is now operational, although it relies on features that have not been implemented yet, such as string padding/trimming. To accommodate this, several adjustments were made to ensure functionality. Despite these changes, the test remains a valid assessment of the lengthKind pattern and utilizes initiators/terminators to handle the padding requirements.;requirement_debt
"Jacoco is not included. Instead, we will utilize https://analysis.apache.org/ for code analysis.
Eliminating unnecessary code that is not being used.
Resolving outdated TODOs by addressing them appropriately.";requirement_debt
"Excluding Jacoco from the setup and opting for https://analysis.apache.org/ for code analysis.
Removing unused code that is no longer necessary for the project.
Addressing old TODOs and resolving them as per the current requirements.";requirement_debt
"Updating the configuration by excluding Jacoco and incorporating https://analysis.apache.org/ for code analysis.
Cleaning up the codebase by removing unused sections that are no longer relevant.
Resolving legacy TODOs that have been pending, ensuring all necessary actions are taken.";requirement_debt
"Adjusting the project configuration to exclude Jacoco and utilize https://analysis.apache.org/ for comprehensive code analysis.
Streamlining the codebase by removing unused sections that serve no purpose in the current context.
Addressing outdated TODOs and updating them to align with the current project objectives.";requirement_debt
"Revising the configuration to remove Jacoco and integrating https://analysis.apache.org/ for more effective code analysis.
Conducting code cleanup to eliminate unused code segments that are no longer needed.
Taking action on outdated TODOs to ensure they are resolved and aligned with the project's current needs.";requirement_debt
"Updating the project setup to exclude Jacoco and adopt https://analysis.apache.org/ for enhanced code analysis capabilities.
Removing unnecessary code components that are not contributing to the project's functionality.
Addressing old TODOs and updating them with relevant actions and considerations.";requirement_debt
"Modifying the configuration to exclude Jacoco and incorporate the advanced code analysis features of https://analysis.apache.org/.
Refactoring the codebase to eliminate unused sections that no longer serve a purpose.
Resolving outdated TODOs by addressing the necessary tasks and updating them to reflect the current project requirements.";requirement_debt
"Omitting Jacoco and opting for the utilization of https://analysis.apache.org/ for code analysis purposes.
Removing unused code that is no longer necessary for the project's functionality.
Resolving outdated TODOs by addressing them and ensuring they align with the current project goals.";requirement_debt
"Updating the project configuration to exclude Jacoco and integrate https://analysis.apache.org/ for comprehensive code analysis.
Cleaning up the codebase by eliminating unused code segments that do not contribute to the project's functionality.
Addressing old TODOs and resolving them to ensure the project remains up-to-date.";requirement_debt
"Modifying the configuration to exclude Jacoco and leverage the advanced code analysis capabilities of https://analysis.apache.org/.
Streamlining the codebase by removing unnecessary sections that no longer serve a purpose.
Taking action on outdated TODOs and revising them to reflect the current requirements of the project.";requirement_debt
"Adjusting the project setup to exclude Jacoco and utilize https://analysis.apache.org/ for enhanced code analysis.
Removing redundant code components that are not utilized in the project.
Updating and resolving outdated TODOs by incorporating the necessary changes and improvements.";requirement_debt
"Refining the project configuration by removing Jacoco and integrating https://analysis.apache.org/ for code analysis.
Eliminating unused code sections that have no impact on the project's functionality.
Ensuring that old TODOs are addressed and updated in accordance with the current project specifications.";requirement_debt
"Reconfiguring the project to exclude Jacoco and leverage the advanced code analysis capabilities provided by https://analysis.apache.org/.
Cleaning up the codebase by removing unnecessary code segments that are no longer relevant.
Resolving outdated TODOs by taking the required actions and updating them to align with the project's current objectives.";requirement_debt
"Excluding Jacoco and opting for the utilization of https://analysis.apache.org/ for code analysis purposes.
Eliminating unused code segments that do not contribute to the project's functionality.
Addressing and resolving outdated TODOs to align with the current project requirements.";requirement_debt
"Updating the project configuration to remove Jacoco and integrate https://analysis.apache.org/ for comprehensive code analysis.
Streamlining the codebase by removing redundant sections that no longer serve a purpose.
Resolving legacy TODOs and ensuring they are updated based on the project's current needs.";requirement_debt
"Modifying the configuration to exclude Jacoco and leverage the advanced code analysis capabilities of https://analysis.apache.org/.
Cleaning up the codebase by removing unused code segments that do not impact the project's functionality.
Updating and addressing outdated TODOs to reflect the current state of the project.";requirement_debt
"Adjusting the project setup to exclude Jacoco and utilize https://analysis.apache.org/ for enhanced code analysis.
Removing unnecessary code components that are not utilized in the project.
Ensuring that old TODOs are resolved and updated in accordance with the current project specifications.";requirement_debt
"Refactoring the project configuration to exclude Jacoco and incorporate the advanced code analysis features of https://analysis.apache.org/.
Streamlining the codebase by eliminating unused sections that do not contribute to the project's functionality.
Resolving outdated TODOs by taking the necessary actions and updating them to align with the project's current objectives.";requirement_debt
BIGTOP-260: Implementation of the Mahout puppet module is required.;requirement_debt
BIGTOP-260: Development of the Mahout puppet module is necessary.;requirement_debt
BIGTOP-260: Mahout puppet module implementation is missing.;requirement_debt
BIGTOP-260: Add support for the Mahout puppet module.;requirement_debt
BIGTOP-260: Implement the puppet module for Mahout.;requirement_debt
BIGTOP-260: Mahout puppet module integration is needed.;requirement_debt
BIGTOP-260: Create the Mahout puppet module.;requirement_debt
BIGTOP-260: Develop the Mahout puppet module.;requirement_debt
BIGTOP-260: Mahout puppet module implementation task.;requirement_debt
BIGTOP-260: Add the Mahout puppet module.;requirement_debt
BIGTOP-260: Implement Mahout module in puppet.;requirement_debt
BIGTOP-260: Mahout puppet module enhancement required.;requirement_debt
BIGTOP-260: Create puppet module for Mahout.;requirement_debt
BIGTOP-260: Development task for Mahout puppet module.;requirement_debt
BIGTOP-260: Implement the Mahout module using puppet.;requirement_debt
BIGTOP-260: Mahout puppet module implementation request.;requirement_debt
BIGTOP-260: Enhance Mahout module with puppet support.;requirement_debt
BIGTOP-260: Mahout puppet module integration effort.;requirement_debt
Work in progress for Rest DSL and camel-swagger integration.;requirement_debt
Work is underway to integrate camel-swagger with Rest DSL.;requirement_debt
In-progress development of Rest DSL and camel-swagger integration.;requirement_debt
Ongoing work to integrate camel-swagger with Rest DSL.;requirement_debt
Currently working on integrating camel-swagger with Rest DSL.;requirement_debt
Rest DSL and camel-swagger integration is currently in progress.;requirement_debt
In the process of integrating camel-swagger with Rest DSL.;requirement_debt
Continued development of Rest DSL and camel-swagger integration.;requirement_debt
Rest DSL and camel-swagger integration implementation in progress.;requirement_debt
Working on integrating camel-swagger with Rest DSL.;requirement_debt
Development effort for Rest DSL and camel-swagger integration.;requirement_debt
Making progress on the integration of camel-swagger with Rest DSL.;requirement_debt
Implementing camel-swagger integration with Rest DSL.;requirement_debt
In the midst of integrating camel-swagger with Rest DSL.;requirement_debt
Rest DSL and camel-swagger integration is being worked on.;requirement_debt
Continuing development of Rest DSL and camel-swagger integration.;requirement_debt
Engaged in integrating camel-swagger with Rest DSL.;requirement_debt
Rest DSL and camel-swagger integration work is ongoing.;requirement_debt
Addressed a security vulnerability in the listNetworks function.;requirement_debt
Resolved a security issue present in the listNetworks feature.;requirement_debt
Fixed a security vulnerability found in the listNetworks implementation.;requirement_debt
Patched a security flaw identified in the listNetworks functionality.;requirement_debt
Addressed a security concern related to the listNetworks feature.;requirement_debt
Rectified a security vulnerability within the listNetworks code.;requirement_debt
Mitigated a security risk associated with the listNetworks functionality.;requirement_debt
Corrected a security issue discovered in the listNetworks module.;requirement_debt
Resolved a security vulnerability affecting the listNetworks behavior.;requirement_debt
Fixed a security weakness in the listNetworks implementation.;requirement_debt
Eliminated a security threat present in the listNetworks feature.;requirement_debt
Addressed a security vulnerability detected in the listNetworks function.;requirement_debt
Resolved a security flaw identified in the listNetworks component.;requirement_debt
Rectified a security concern related to the listNetworks functionality.;requirement_debt
Patched a security vulnerability affecting the listNetworks behavior.;requirement_debt
Fixed a security vulnerability found within the listNetworks code.;requirement_debt
Addressed a security issue affecting the listNetworks feature.;requirement_debt
Resolved a security vulnerability in the listNetworks module.;requirement_debt
"""[CALCITE-2216] Enhance the extensibility of AggregateReduceFunctionsRule (Contributed by Fabian Hueske)
Resolve issue apache/calcite#650""";requirement_debt
"""[CALCITE-2216] Enhance the extensibility of AggregateReduceFunctionsRule (Authored by Fabian Hueske)
Close issue apache/calcite#650""";requirement_debt
"""[CALCITE-2216] Improve the flexibility of AggregateReduceFunctionsRule (By Fabian Hueske)
Resolve the issue apache/calcite#650""";requirement_debt
"""[CALCITE-2216] Enhance the extensibility of the AggregateReduceFunctionsRule (Submitted by Fabian Hueske)
Close the apache/calcite#650 issue""";requirement_debt
"""[CALCITE-2216] Improve the extensibility of the AggregateReduceFunctionsRule (Contributed by Fabian Hueske)
Close the apache/calcite#650 issue""";requirement_debt
"""[CALCITE-2216] Enhance the flexibility of the AggregateReduceFunctionsRule (Authored by Fabian Hueske)
Resolve the apache/calcite#650 issue""";requirement_debt
"""[CALCITE-2216] Enhance the extensibility of the AggregateReduceFunctionsRule (By Fabian Hueske)
Close the issue apache/calcite#650""";requirement_debt
"""[CALCITE-2216] Improve the extensibility of the AggregateReduceFunctionsRule (Authored by Fabian Hueske)
Close the issue apache/calcite#650""";requirement_debt
"""[CALCITE-2216] Enhance the extensibility of the AggregateReduceFunctionsRule (Submitted by Fabian Hueske)
Resolve apache/calcite#650""";requirement_debt
"""[CALCITE-2216] Improve the flexibility of the AggregateReduceFunctionsRule (Contributed by Fabian Hueske)
Resolve apache/calcite#650""";requirement_debt
"""[CALCITE-2216] Enhance the extensibility of the AggregateReduceFunctionsRule (By Fabian Hueske)
Close apache/calcite#650""";requirement_debt
"""[CALCITE-2216] Enhance the flexibility of the AggregateReduceFunctionsRule (Authored by Fabian Hueske)
Close apache/calcite#650""";requirement_debt
"""[CALCITE-2216] Improve the extensibility of the AggregateReduceFunctionsRule (Contributed by Fabian Hueske)
Close apache/calcite#650""";requirement_debt
"""[CALCITE-2216] Enhance the extensibility of the AggregateReduceFunctionsRule (Submitted by Fabian Hueske)
Close the apache/calcite#650 issue""";requirement_debt
"""[CALCITE-2216] Improve the extensibility of the AggregateReduceFunctionsRule (Authored by Fabian Hueske)
Close the apache/calcite#650 issue""";requirement_debt
"""[CALCITE-2216] Enhance the extensibility of the AggregateReduceFunctionsRule (By Fabian Hueske)
Resolve the issue apache/calcite#650""";requirement_debt
"""[CALCITE-2216] Enhance the flexibility of the AggregateReduceFunctionsRule (Submitted by Fabian Hueske)
Resolve the issue apache/calcite#650""";requirement_debt
"""[CALCITE-2216] Improve the extensibility of the AggregateReduceFunctionsRule (Contributed by Fabian Hueske)
Resolve the apache/calcite#650 issue""";requirement_debt
"""PARQUET-463: Incorporate local DCHECK macros and resolve associated dcheck bugs
Additionally, the `-Wno-unused-value` compiler flag has been removed, while the removal of `-Wno-unused-variable` will be addressed in a separate patch due to further work being required.
Closes #67 by wesm/PARQUET-463, squashing the following commits:
da3afb2 [Wes McKinney] Address signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Eliminate -Wno-unused-value
0b49cc6 [Wes McKinney] Adapt simple dcheck macros from Kudu and resolve dcheck failures.""";requirement_debt
"""PARQUET-463: Incorporate local DCHECK macros and address dcheck bugs
In addition, the compiler flag `-Wno-unused-value` has been successfully removed. However, the removal of `-Wno-unused-variable` will be tackled in a separate patch due to the need for further work.
Closes #67 by wesm/PARQUET-463, merging the following commits:
da3afb2 [Wes McKinney] Fix signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Eliminate -Wno-unused-value
0b49cc6 [Wes McKinney] Adapt simple dcheck macros from Kudu and resolve dcheck failures.""";requirement_debt
"""PARQUET-463: Introduce local DCHECK macros and address dcheck bugs
Additionally, the `-Wno-unused-value` compiler flag has been removed, while the removal of `-Wno-unused-variable` will be handled separately in a future patch due to additional work required.
Closes #67 by wesm/PARQUET-463, merging the following commits:
da3afb2 [Wes McKinney] Fix signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Remove -Wno-unused-value
0b49cc6 [Wes McKinney] Adapt simple dcheck macros from Kudu, resolve dcheck failures.""";requirement_debt
"""PARQUET-463: Introduce local DCHECK macros and address dcheck bugs
Additionally, the compiler flag `-Wno-unused-value` has been successfully removed. However, the removal of `-Wno-unused-variable` will be tackled in a separate patch due to additional work required.
Closes #67 by wesm/PARQUET-463, consolidating the following commits:
da3afb2 [Wes McKinney] Fix comparisons between signed and unsigned values within dchecks
a1ca479 [Wes McKinney] Eliminate -Wno-unused-value flag
0b49cc6 [Wes McKinney] Adapt simple dcheck macros from Kudu and resolve dcheck failures""";requirement_debt
"""PARQUET-463: Introduce local DCHECK macros and address dcheck bugs
In this commit, local DCHECK macros are added to improve the debugging experience. Additionally, some dcheck bugs are fixed, which were exposed during testing. As part of this work, the `-Wno-unused-value` compiler flag has been removed, while the removal of `-Wno-unused-variable` will be handled separately in a future patch as it requires further work.
This commit closes issue #67 by wesm/PARQUET-463 and includes the following squashed commits:
- da3afb2: Fix signed-unsigned comparisons within dchecks
- a1ca479: Remove -Wno-unused-value
- 0b49cc6: Adapt simple dcheck macros from Kudu and resolve dcheck failures.""";requirement_debt
"""PARQUET-463: Introduce local DCHECK macros and address dcheck bugs
In this update, I have added local DCHECK macros and resolved several dcheck bugs that were exposed. As a result, the compiler flag `-Wno-unused-value` has been removed successfully. However, the removal of `-Wno-unused-variable` will require a separate patch as it involves additional work.
Closes #67 by wesm/PARQUET-463, incorporating the following commits:
da3afb2 [Wes McKinney] Fix signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Remove -Wno-unused-value
0b49cc6 [Wes McKinney] Adapt simple dcheck macros from Kudu and fix dcheck failures.""";requirement_debt
"""PARQUET-463: Addition of local DCHECK macros and resolution of dcheck bugs
In this commit, local DCHECK macros were added along with fixes for some dcheck bugs that were exposed. As part of the changes, the `-Wno-unused-value` compiler flag was successfully removed. However, the removal of `-Wno-unused-variable` will require further work and will be addressed in a separate patch.
Closes #67 by wesm/PARQUET-463, incorporating the following commits:
da3afb2: Fixed signed-unsigned comparisons inside dchecks
a1ca479: Removed -Wno-unused-value
0b49cc6: Adapted simple dcheck macros from Kudu and resolved dcheck failures.""";requirement_debt
"""PARQUET-463: Introduction of local DCHECK macros and resolution of dcheck bugs
In addition, the compiler flag `-Wno-unused-value` has been successfully removed. However, the removal of `-Wno-unused-variable` will be addressed in a separate patch as it requires further work.
Closes #67 by wesm/PARQUET-463, incorporating the following commits:
da3afb2 [Wes McKinney] Fixing signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Eliminating -Wno-unused-value
0b49cc6 [Wes McKinney] Implementing simple dcheck macros from Kudu and resolving dcheck failures.""";requirement_debt
"""PARQUET-463: Introduce local DCHECK macros and resolve dcheck bugs
In addition, the compiler flag `-Wno-unused-value` has been removed. The removal of the `-Wno-unused-variable` flag will be addressed in a separate patch, as it requires further work.
Closes #67 by wesm/PARQUET-463, and includes the following commits:
da3afb2 [Wes McKinney] Fixes signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Eliminates -Wno-unused-value
0b49cc6 [Wes McKinney] Adapts simple dcheck macros from Kudu and resolves dcheck failures.""";requirement_debt
"""PARQUET-463: Introduce local DCHECK macros and address dcheck bugs
As part of this work, the `-Wno-unused-value` compiler flag has been successfully removed. However, the removal of `-Wno-unused-variable` will require a separate patch as it involves additional work.
Closes #67 by wesm/PARQUET-463, squashing the following commits:
da3afb2 [Wes McKinney] Fix signed-unsigned comparisons inside dchecks
a1ca479 [Wes McKinney] Remove -Wno-unused-value
0b49cc6 [Wes McKinney] Adapt simple dcheck macros from Kudu and resolve dcheck failures.""";requirement_debt
"""PARQUET-463: Addition of local DCHECK macros and resolution of exposed dcheck bugs
Furthermore, the compiler flag `-Wno-unused-value` has been successfully removed. However, the removal of `-Wno-unused-variable` will be addressed in a separate patch, as it requires additional work.
Closes #67 by wesm/PARQUET-463 and combines the following commits:
da3afb2 [Wes McKinney] Corrected signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Eliminated -Wno-unused-value
0b49cc6 [Wes McKinney] Adapted simple dcheck macros from Kudu and resolved dcheck failures""";requirement_debt
"""PARQUET-463: Introduce local DCHECK macros and resolve related dcheck bugs
In addition, I have successfully eliminated the need for the `-Wno-unused-value` compiler flag. However, the removal of `-Wno-unused-variable` will be addressed in a separate patch, as it requires further work.
Closes #67 by wesm/PARQUET-463, with the following commits squashed:
da3afb2 [Wes McKinney] Address signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Remove -Wno-unused-value
0b49cc6 [Wes McKinney] Adapt simple dcheck macros from Kudu and resolve dcheck failures""";requirement_debt
"""PARQUET-463: Introduction of local DCHECK macros and resolution of exposed dcheck bugs
In addition, the compiler flag `-Wno-unused-value` has been removed. The removal of `-Wno-unused-variable` will be addressed in a separate patch as it requires further work.
Closes #67 by wesm/PARQUET-463, and includes the following commits:
da3afb2 [Wes McKinney] Fixed signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Removed -Wno-unused-value
0b49cc6 [Wes McKinney] Adapted simple dcheck macros from Kudu and resolved dcheck failures.""";requirement_debt
"""PARQUET-463: Introduction of local DCHECK macros and resolution of exposed dcheck bugs
In addition, the compiler flag `-Wno-unused-value` has been successfully removed. However, the removal of `-Wno-unused-variable` will require a separate patch as it involves more work.
Closes #67 by wesm/PARQUET-463, incorporating the following commits:
da3afb2 [Wes McKinney] Fixing signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Eliminating -Wno-unused-value
0b49cc6 [Wes McKinney] Adapting simple dcheck macros from Kudu and resolving dcheck failures.""";requirement_debt
"""PARQUET-463: Introduce local DCHECK macros and resolve related dcheck bugs
Additionally, the `-Wno-unused-value` compiler flag has been removed, while the removal of `-Wno-unused-variable` will be addressed separately in a future patch, as it requires further work.
Closes #67 by wesm/PARQUET-463, with the following commits squashed:
da3afb2 [Wes McKinney] Address signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Eliminate -Wno-unused-value flag
0b49cc6 [Wes McKinney] Adapt dcheck macros from Kudu, rectify dcheck failures""";requirement_debt
"""PARQUET-463: Introduction of local DCHECK macros and resolution of dcheck bugs
As part of this patch, the `-Wno-unused-value` compiler flag was successfully removed. However, the removal of the `-Wno-unused-variable` flag will require additional work and will be addressed in a separate patch.
Closes #67 by wesm/PARQUET-463, squashing the following commits:
da3afb2 [Wes McKinney] Fixed signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Removed -Wno-unused-value
0b49cc6 [Wes McKinney] Adapted simple dcheck macros from Kudu, and resolved dcheck failures.""";requirement_debt
"""PARQUET-463: Addition of local DCHECK macros and resolution of exposed dcheck bugs
In addition, the compiler flag `-Wno-unused-value` has been successfully removed. However, the removal of `-Wno-unused-variable` will require a separate patch due to the additional work involved.
Closes #67 by wesm/PARQUET-463, with the following commits squashed:
da3afb2 [Wes McKinney] Fixing signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Removal of -Wno-unused-value
0b49cc6 [Wes McKinney] Adaptation of simple dcheck macros from Kudu, along with fixing dcheck failures.""";requirement_debt
"""PARQUET-463: Introduce local DCHECK macros and address dcheck bugs
Additionally, the `-Wno-unused-value` compiler flag has been removed. However, the removal of the `-Wno-unused-variable` flag will be handled in a separate patch, as it requires further work.
Closes #67 by wesm/PARQUET-463, incorporating the following commits:
da3afb2 [Wes McKinney] Fix signed-unsigned comparisons within dchecks
a1ca479 [Wes McKinney] Remove -Wno-unused-value
0b49cc6 [Wes McKinney] Adapt simple dcheck macros from Kudu and resolve dcheck failures.""";requirement_debt
[FLINK-5345] [core] Refactor cleanup calls to ensure concurrency-safe directory deletion;requirement_debt
[FLINK-5345] [core] Enhance concurrency safety for directory deletion during cleanup;requirement_debt
[FLINK-5345] [core] Improve concurrency handling of directory deletion in cleanup;requirement_debt
[FLINK-5345] [core] Update cleanup process to support concurrent directory deletion;requirement_debt
[FLINK-5345] [core] Refine directory deletion in cleanup for better concurrency handling;requirement_debt
[FLINK-5345] [core] Enhance cleanup mechanism for concurrent-safe directory deletion;requirement_debt
[FLINK-5345] [core] Optimize directory deletion in cleanup for concurrency safety;requirement_debt
[FLINK-5345] [core] Modify cleanup calls to ensure concurrency-safe directory deletion;requirement_debt
[FLINK-5345] [core] Enhance concurrency handling for directory cleanup and deletion;requirement_debt
[FLINK-5345] [core] Revise cleanup logic for concurrent-safe directory deletion;requirement_debt
[FLINK-5345] [core] Update directory deletion in cleanup to support concurrent execution;requirement_debt
[FLINK-5345] [core] Improve concurrency safety of directory deletion in cleanup;requirement_debt
[FLINK-5345] [core] Refactor cleanup process for concurrency-safe directory deletion;requirement_debt
[FLINK-5345] [core] Enhance directory deletion in cleanup to handle concurrency;requirement_debt
[FLINK-5345] [core] Optimize cleanup calls for concurrent-safe directory deletion;requirement_debt
[FLINK-5345] [core] Modify directory deletion in cleanup to ensure concurrency safety;requirement_debt
[FLINK-5345] [core] Revise cleanup mechanism to support concurrent directory deletion;requirement_debt
[FLINK-5345] [core] Update concurrency handling for directory deletion in cleanup;requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing
*Motivation*
During the process of enabling table service for Pulsar in apache/incubator-pulsar#1922, it was discovered that replaying TxnRequest was inadvertently overlooked.
*Solution*
This pull request addresses the issue by introducing the necessary logic for replaying TxnRequest in the command process.
This resolves #1505 contributed by sijie/replay_txn_request""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing
*Motivation*
During the process of enabling table service for pulsar at apache/incubator-pulsar#1922, it was discovered that the replaying of TxnRequest was overlooked.
*Solution*
This pull request addresses the issue by introducing the logic for replaying TxnRequest in the command process.
This resolves #1505 contributed by sijie/replay_txn_request""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing
*Objective*
While working on enabling table service for Pulsar at apache/incubator-pulsar#1922, it came to my attention that the replaying TxnRequest logic was overlooked.
*Resolution*
This pull request addresses the missing replaying TxnRequest logic by implementing it within the command process.
This resolves #1505 by sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] The implementation of replaying TxnRequest is missing.
*Motivation*
During the process of enabling table service for Pulsar at apache/incubator-pulsar#1922, it was observed that the replaying TxnRequest logic was inadvertently overlooked.
*Solution*
This pull request addresses the issue by implementing the replaying TxnRequest logic in the command process.
This resolves #1505 contributed by sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] The implementation for replaying TxnRequest is missing.
*Motivation*
During the process of enabling table service for Pulsar at apache/incubator-pulsar#1922, it was discovered that the logic for replaying TxnRequest was overlooked.
*Solution*
This pull request addresses the issue by implementing the necessary logic for replaying TxnRequest in the command process.
This resolves #1505 by sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing.
*Motivation*
During the enablement of table service for Pulsar at apache/incubator-pulsar#1922, it was discovered that the replaying TxnRequest functionality was inadvertently omitted.
*Solution*
This pull request addresses the issue by adding the necessary logic to handle replaying TxnRequest in the command process.
Closes #1505 from sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing
*Motivation*
While enabling table service for Pulsar at apache/incubator-pulsar#1922, it was discovered that the logic for replaying TxnRequest was overlooked.
*Solution*
This pull request addresses the missing replaying TxnRequest logic in the command process.
Closes #1505 by sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing
*Objective*
During the enabling of table service for pulsar at apache/incubator-pulsar#1922, it was observed that the replaying of TxnRequest was overlooked.
*Resolution*
This pull request addresses the issue by incorporating the replaying TxnRequest logic into the command process.
This resolves #1505 by merging sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing.
*Motivation*
While enabling table service for Pulsar in apache/incubator-pulsar#1922, it was discovered that the replaying of TxnRequest was overlooked.
*Solution*
This pull request addresses the issue by adding the necessary logic for replaying TxnRequest in the command process.
Closes #1505 from sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing
*Background*
While working on enabling table service for Pulsar at apache/incubator-pulsar#1922, I discovered that the replaying of TxnRequest was overlooked.
*Resolution*
This pull request addresses the issue by incorporating the logic for replaying TxnRequest in the command process.
Closes #1505 by sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing
*Motivation*
During the process of enabling table service for Pulsar at apache/incubator-pulsar#1922, it was observed that the replaying logic for TxnRequest was overlooked.
*Solution*
This pull request addresses the issue by introducing the replaying TxnRequest logic in the command process.
Closes #1505 from sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing.
*Motivation*
During the process of enabling table service for Pulsar in apache/incubator-pulsar#1922, it was discovered that the replaying of TxnRequest was overlooked.
*Solution*
This pull request addresses the issue by implementing the necessary logic for replaying TxnRequest in the command process.
Closes #1505 from sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] The implementation for replaying TxnRequest is missing
*Motivation*
During the process of enabling table service for pulsar at apache/incubator-pulsar#1922, it was discovered that the replaying logic for TxnRequest was overlooked.
*Solution*
This pull request addresses the issue by implementing the necessary logic for replaying TxnRequest in the command process.
This resolves #1505 from sijie/replay_txn_request""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing
*Motivation*
During the process of enabling table service for Pulsar in apache/incubator-pulsar#1922, it was observed that the replaying TxnRequest logic was somehow overlooked.
*Solution*
This pull request addresses the issue by implementing the necessary logic for replaying TxnRequest in the command process.
Closes #1505 from sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing.
*Motivation*
During the process of enabling table service for pulsar at apache/incubator-pulsar#1922, it was observed that the replaying TxnRequest logic was somehow overlooked.
*Solution*
This pull request addresses the issue by implementing the replaying TxnRequest logic in the command process.
This resolves #1505 by sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing
*Motivation*
During the process of enabling table service for Pulsar at apache/incubator-pulsar#1922, it was observed that the replaying logic for TxnRequest was overlooked.
*Solution*
This pull request addresses the issue by implementing the necessary logic for replaying TxnRequest in the command process.
This resolves #1505 contributed by sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing
*Motivation*
While enabling table service for Pulsar at apache/incubator-pulsar#1922, it was observed that the replaying logic for TxnRequest was overlooked.
*Solution*
This pull request addresses the missing replaying logic for TxnRequest in the command process.
Closes #1505 by incorporating the changes from sijie/replay_txn_request.""";requirement_debt
"""[TABLE SERVICE] Implementation of replaying TxnRequest is missing
*Motivation*
During the process of enabling table service for Pulsar at apache/incubator-pulsar#1922, it was discovered that the replaying TxnRequest logic was inadvertently overlooked.
*Solution*
This pull request addresses the issue by implementing the replaying TxnRequest logic in the command process.
Closes #1505 by sijie/replay_txn_request""";requirement_debt
CAMEL-702: Proposed fix for concurrency issue in camel-saon. Pending review by Gert. Work in progress.;requirement_debt
CAMEL-702: Proposed solution for addressing the concurrency issue in camel-saon. Gert's input is also sought. Currently in progress.;requirement_debt
CAMEL-702: Proposed resolution for the concurrency issue with camel-saon. Under review by Gert. Work is still ongoing.;requirement_debt
CAMEL-702: Proposed patch to fix the concurrency issue in camel-saon. Gert's review is awaited. Development is in progress.;requirement_debt
CAMEL-702: Proposed solution to handle the concurrency problem in camel-saon. Gert's feedback is requested. Work is ongoing.;requirement_debt
CAMEL-702: Proposed remedy for the concurrency issue encountered in camel-saon. Awaiting Gert's review. Currently being worked on.;requirement_debt
CAMEL-702: Suggested fix for the concurrency issue in camel-saon. Gert's evaluation is anticipated. Work in progress.;requirement_debt
CAMEL-702: Suggested solution to address the concurrency issue with camel-saon. Pending review by Gert. Development ongoing.;requirement_debt
CAMEL-702: Proposed resolution to resolve the concurrency issue in camel-saon. Gert's input is awaited. Work is in progress.;requirement_debt
CAMEL-702: Proposed approach to mitigate the concurrency issue in camel-saon. Gert's review is expected. Work in progress.;requirement_debt
CAMEL-702: Proposed fix for addressing the concurrency issue encountered in camel-saon. Awaiting Gert's review. Development is ongoing.;requirement_debt
CAMEL-702: Suggested resolution for the concurrency issue with camel-saon. Gert's feedback is being sought. Currently in progress.;requirement_debt
CAMEL-702: Suggested patch to rectify the concurrency issue in camel-saon. Gert's review is awaited. Work is still ongoing.;requirement_debt
CAMEL-702: Suggested solution to handle the concurrency problem in camel-saon. Gert's evaluation is requested. Work is underway.;requirement_debt
CAMEL-702: Suggested remedy for the concurrency issue in camel-saon. Awaiting Gert's review. Currently being worked on.;requirement_debt
CAMEL-702: Proposed approach to resolve the concurrency issue encountered in camel-saon. Gert's input is anticipated. Work is in progress.;requirement_debt
CAMEL-702: Suggested approach to address the concurrency issue encountered in camel-saon. Awaiting Gert's review. Development is ongoing.;requirement_debt
CAMEL-702: Suggested fix for the concurrency issue in camel-saon. Gert's review is expected. Development ongoing.;requirement_debt
Added TODO for ComStmtExecutePacket.;requirement_debt
Included a TODO for ComStmtExecutePacket.;requirement_debt
Added a reminder for ComStmtExecutePacket with TODO.;requirement_debt
Inserted a TODO comment for ComStmtExecutePacket.;requirement_debt
Included a TODO marker for ComStmtExecutePacket.;requirement_debt
Added a placeholder for future work in ComStmtExecutePacket with a TODO.;requirement_debt
Inserted a TODO note for ComStmtExecutePacket.;requirement_debt
Included a TODO reminder for ComStmtExecutePacket.;requirement_debt
Added a comment for future improvement in ComStmtExecutePacket with a TODO.;requirement_debt
Inserted a TODO marker for further development in ComStmtExecutePacket.;requirement_debt
Included a placeholder for upcoming changes in ComStmtExecutePacket with a TODO.;requirement_debt
Added a reminder for future modifications in ComStmtExecutePacket with a TODO.;requirement_debt
Inserted a TODO comment for ComStmtExecutePacket.;requirement_debt
Included a TODO marker for ComStmtExecutePacket.;requirement_debt
Added a placeholder for future work in ComStmtExecutePacket with a TODO.;requirement_debt
Inserted a TODO note for ComStmtExecutePacket.;requirement_debt
Included a TODO reminder for ComStmtExecutePacket.;requirement_debt
Added a comment for future improvement in ComStmtExecutePacket with a TODO.;requirement_debt
GUACAMOLE-47: Remove XFF header handling code for security reasons.;requirement_debt
GUACAMOLE-47: Eliminate XFF header code to address security concerns.;requirement_debt
GUACAMOLE-47: Remove XFF header processing code due to security issues.;requirement_debt
GUACAMOLE-47: Exclude XFF header handling code to enhance security.;requirement_debt
GUACAMOLE-47: Remove XFF header logic for improved security.;requirement_debt
GUACAMOLE-47: Omit XFF header code to mitigate security risks.;requirement_debt
GUACAMOLE-47: Discontinue XFF header handling code for security purposes.;requirement_debt
GUACAMOLE-47: Remove XFF header functionality due to security concerns.;requirement_debt
GUACAMOLE-47: Eliminate XFF header processing code to ensure security.;requirement_debt
GUACAMOLE-47: Exclude XFF header code to enhance application security.;requirement_debt
GUACAMOLE-47: Remove XFF header handling code as a security precaution.;requirement_debt
GUACAMOLE-47: Omit XFF header logic due to security considerations.;requirement_debt
GUACAMOLE-47: Discontinue XFF header handling code for security reasons.;requirement_debt
GUACAMOLE-47: Remove XFF header functionality to address security vulnerabilities.;requirement_debt
GUACAMOLE-47: Eliminate XFF header processing code to strengthen security measures.;requirement_debt
GUACAMOLE-47: Exclude XFF header code to safeguard against security risks.;requirement_debt
GUACAMOLE-47: Remove XFF header handling code to ensure a secure environment.;requirement_debt
GUACAMOLE-47: Omit XFF header logic to mitigate potential security threats.;requirement_debt
"""Significant updates have been made to the codebase. The introduction of a comprehensive grammar system now allows for detailed descriptions of the processing of DFDL using BNF-like construction. The entire 'grammar' for DFDL can be found in dsom/GrammarMixins. The system now functions similar to a compiler, enabling extensive decision-making at compile time compared to previous versions. The front-end now requires the definition of numerous DFDL properties, resulting in updates to DFDL schemas in multiple unit tests and test files. However, a backend for this system is yet to be implemented.

Test organization has been restructured to differentiate between passing and known-failing tests for both the AA-BG and IBM test suites. In the AA-BG set, five fewer tests pass, and only one IBM test currently succeeds. This is a minor regression caused by the new front-end lacking group references and not yet implementing type-to-element back-referencing. Additionally, a variety of new rich attributes are now computed on schema components, many of which require more thorough unit testing.

The necessary ICU jars have been added to support charset encoding/decoding, along with corresponding unit tests to validate this functionality. This addition serves as an exploration into obtaining the correct notification callbacks from ICU for the required encode/decode error scenarios in DFDL.

A new unit test has been introduced to assess Unicode, XML, and internationalization behaviors. This test focuses on characterizing the behavior of the Scala environment. Consequently, if future revisions of Scala introduce changes that affect aspects such as XML namespaces, it is likely that one of these tests will detect any failures.""";requirement_debt
"""Extensive enhancements have been made, including the implementation of a complete grammar system. This system now enables the description of DFDL processing using a set of BNF-like constructions, resembling a compiler. The DFDL grammar is now located in dsom/GrammarMixins. The updated front-end requires the definition of additional DFDL properties, resulting in the need to update DFDL schemas across various unit tests and test files. However, the backend for this system is yet to be developed.""

""The codebase has undergone significant changes, introducing a comprehensive grammar system that allows for detailed explanations of DFDL processing using BNF-like constructions. The entire DFDL grammar is now housed in dsom/GrammarMixins. This system operates akin to a compiler, enabling extensive decision-making during compilation compared to previous versions. The front-end now mandates the definition of numerous DFDL properties, necessitating updates to DFDL schemas in multiple unit tests and test files. However, the implementation of a backend for this system is still pending.""

""This commit brings substantial changes, most notably the addition of a comprehensive grammar system. With this system, it is now possible to describe the intricacies of DFDL processing using a set of BNF-like constructions. The entire DFDL grammar has been consolidated in dsom/GrammarMixins. This system functions as a compiler, enabling advanced decision-making at compile time. The front-end now requires the definition of numerous DFDL properties, resulting in updates to DFDL schemas across several unit tests and test files. However, work on the backend for this system is still in progress.""";requirement_debt
"""Major updates have been implemented, introducing a complete grammar system that allows for detailed descriptions of DFDL processing using BNF-like constructions. The entire DFDL grammar is now centralized in dsom/GrammarMixins. This system functions similar to a compiler, providing advanced decision-making capabilities during compilation compared to previous versions. The front-end now demands the definition of multiple DFDL properties, leading to updates in DFDL schemas across various unit tests and test files. However, the development of a backend for this system is still pending.""

""This commit encompasses significant changes, notably the addition of a comprehensive grammar system. This system enables detailed explanations of DFDL processing through the use of BNF-like constructions. The entire DFDL grammar is now consolidated in dsom/GrammarMixins. Functioning akin to a compiler, this system empowers advanced decision-making during compilation compared to previous versions. The front-end now mandates the definition of numerous DFDL properties, resulting in updates to DFDL schemas in multiple unit tests and test files. However, the backend for this system is yet to be fully implemented.""";requirement_debt
"""A substantial update has been made, introducing a complete grammar system that allows for detailed descriptions of DFDL processing using BNF-like constructions. The entirety of the DFDL grammar can now be found in dsom/GrammarMixins. This system operates as a compiler, enabling advanced decision-making during compilation compared to previous iterations. The front-end now requires the definition of numerous DFDL properties, necessitating updates to DFDL schemas across multiple unit tests and test files. However, work on the backend for this system is still ongoing.""";requirement_debt
"""Noteworthy changes have been made, including the addition of a comprehensive grammar system. This system enables detailed explanations of DFDL processing using BNF-like constructions. The complete DFDL grammar has been consolidated in dsom/GrammarMixins. Functioning as a compiler, this system facilitates advanced decision-making during compilation compared to earlier versions. The front-end now enforces the definition of multiple DFDL properties, leading to updates in DFDL schemas across various unit tests and test files. However, the backend for this system is not yet available.""";requirement_debt
"""Extensive updates have been made, introducing a comprehensive grammar system that enables detailed descriptions of DFDL processing using BNF-like constructions. The entire DFDL grammar is now housed in dsom/GrammarMixins. This system functions similarly to a compiler, allowing for advanced decision-making during compilation compared to previous versions. The front-end now requires the definition of numerous DFDL properties, resulting in updates to DFDL schemas across multiple unit tests and test files. However, the backend implementation for this system is still pending.""";requirement_debt
"""This commit implements significant changes, primarily the addition of a comprehensive grammar system. This system allows for detailed descriptions of DFDL processing using BNF-like constructions. The complete DFDL grammar is now located in dsom/GrammarMixins. Operating as a compiler, this system enhances decision-making capabilities during compilation compared to previous iterations. The front-end now mandates the definition of multiple DFDL properties, necessitating updates to DFDL schemas in various unit tests and test files. However, the backend implementation for this system is still in progress.""";requirement_debt
"""A series of substantial changes have been introduced, notably the inclusion of a comprehensive grammar system. This system facilitates detailed descriptions of DFDL processing using BNF-like constructions. The complete DFDL grammar has been consolidated in dsom/GrammarMixins. Operating similar to a compiler, this system enables advanced decision-making during compilation, surpassing the capabilities of previous versions. The front-end now requires the definition of numerous DFDL properties, leading to updates in DFDL schemas across multiple unit tests and test files. However, the implementation of a backend for this system is still underway.""";requirement_debt
"""This commit incorporates significant updates, most notably the integration of a comprehensive grammar system. This system empowers detailed explanations of DFDL processing through the use of BNF-like constructions. The complete DFDL grammar is now centralized in dsom/GrammarMixins. Operating akin to a compiler, this system enhances decision-making capabilities during compilation compared to earlier versions. The front-end now mandates the definition of multiple DFDL properties, resulting in updates to DFDL schemas in various unit tests and test files. However, the backend for this system is still being developed.""";requirement_debt
"""Major modifications have been made, introducing a complete grammar system that allows for detailed descriptions of DFDL processing using BNF-like constructions. The entire DFDL grammar is now consolidated in dsom/GrammarMixins. This system functions as a compiler, providing advanced decision-making capabilities during compilation compared to previous versions. The front-end now demands the definition of numerous DFDL properties, leading to updates in DFDL schemas across multiple unit tests and test files. However, the backend implementation for this system is still a work in progress.""";requirement_debt
"""This commit brings substantial changes, notably the addition of a comprehensive grammar system. This system enables detailed explanations of DFDL processing using BNF-like constructions. The entire DFDL grammar is now centralized in dsom/GrammarMixins. Operating as a compiler, this system empowers advanced decision-making during compilation compared to previous iterations. The front-end now requires the definition of numerous DFDL properties, resulting in updates to DFDL schemas in multiple unit tests and test files. However, work on the backend implementation for this system is ongoing.""";requirement_debt
"""Extensive updates have been implemented, introducing a comprehensive grammar system that enables detailed descriptions of DFDL processing using BNF-like constructions. The entire DFDL grammar is now housed in dsom/GrammarMixins. This system operates as a compiler, allowing for advanced decision-making during compilation compared to previous versions. The front-end now demands the definition of numerous DFDL properties, necessitating updates to DFDL schemas across multiple unit tests and test files. However, work on the backend implementation for this system is still in progress.""";requirement_debt
"""A significant overhaul has been conducted, introducing a complete grammar system that facilitates detailed descriptions of DFDL processing through BNF-like constructions. The entire DFDL grammar is now centralized in dsom/GrammarMixins. Functioning as a compiler, this system enhances decision-making capabilities during compilation compared to earlier versions. The front-end now mandates the definition of multiple DFDL properties, necessitating updates to DFDL schemas in numerous unit tests and test files. However, the backend implementation for this system is still under development.""";requirement_debt
"""This commit encompasses substantial changes, most notably the introduction of a comprehensive grammar system. This system enables detailed descriptions of DFDL processing using BNF-like constructions. The entire DFDL grammar is now consolidated in dsom/GrammarMixins. Operating as a compiler, this system enhances decision-making capabilities during compilation compared to previous iterations. The front-end now requires the definition of multiple DFDL properties, leading to updates in DFDL schemas across multiple unit tests and test files. However, the backend implementation for this system is still in progress.""";requirement_debt
"""Extensive enhancements have been made, including the implementation of a complete grammar system. This system now allows for detailed descriptions of DFDL processing using a set of BNF-like constructions. The entire DFDL grammar is now located in dsom/GrammarMixins. Operating similarly to a compiler, this system enables advanced decision-making during compilation, surpassing the capabilities of previous versions. The front-end now requires the definition of numerous DFDL properties, necessitating updates to DFDL schemas in multiple unit tests and test files. However, the backend for this system is yet to be fully implemented.""";requirement_debt
"""Noteworthy changes have been implemented, introducing a comprehensive grammar system that enables detailed descriptions of DFDL processing using BNF-like constructions. The complete DFDL grammar is now consolidated in dsom/GrammarMixins. Functioning like a compiler, this system empowers advanced decision-making during compilation compared to previous versions. The front-end now mandates the definition of multiple DFDL properties, resulting in updates to DFDL schemas in multiple unit tests and test files. However, the implementation of a backend for this system is still pending.""";requirement_debt
"""Significant updates have been made, introducing a comprehensive grammar system that allows for detailed descriptions of DFDL processing using a BNF-grammar-like construction set. The entire DFDL grammar is now located in dsom/GrammarMixins. This system functions similarly to a compiler, enabling more advanced decision-making during compilation compared to previous versions. The front end now requires the definition of additional DFDL properties, leading to updates in DFDL schemas across multiple unit tests and test files. However, the backend implementation for this system is still pending.""";requirement_debt
"""Major modifications have been implemented, adding a complete grammar system that provides the ability to describe the DFDL processing using a BNF-grammar-like construction set. The entire 'grammar' for DFDL is now consolidated in dsom/GrammarMixins. This system operates like a compiler, enabling more comprehensive decision-making during compilation compared to previous versions. The front end now demands the definition of a wider range of DFDL properties than before, resulting in updates to DFDL schemas in numerous unit tests and test files. However, the backend for this system has not been developed yet.""";requirement_debt
AMQ-8012: Enhance thread safety of SubQueueSelectorCacheBroker by synchronizing the retrieval of a copy of selectors.;requirement_debt
AMQ-8012: Strengthen thread safety of SubQueueSelectorCacheBroker by applying synchronization when returning a copy of selectors.;requirement_debt
AMQ-8012: Enhance the thread safety of SubQueueSelectorCacheBroker by synchronizing the process of returning a copy of selectors.;requirement_debt
AMQ-8012: Improve the thread safety of SubQueueSelectorCacheBroker by introducing synchronization when retrieving a copy of selectors.;requirement_debt
AMQ-8012: Refine the thread safety of SubQueueSelectorCacheBroker by synchronizing the retrieval of a copy of selectors.;requirement_debt
AMQ-8012: Optimize the thread safety of SubQueueSelectorCacheBroker by synchronizing the process of returning a copy of selectors.;requirement_debt
AMQ-8012: Enhance the concurrency handling of SubQueueSelectorCacheBroker by synchronizing the retrieval of selectors.;requirement_debt
AMQ-8012: Strengthen the thread safety of SubQueueSelectorCacheBroker by synchronizing the process of returning a copy of selectors.;requirement_debt
AMQ-8012: Improve the concurrency control of SubQueueSelectorCacheBroker by applying synchronization during the retrieval of selectors.;requirement_debt
AMQ-8012: Enhance the synchronization of SubQueueSelectorCacheBroker to ensure thread safety when returning a copy of selectors.;requirement_debt
AMQ-8012: Optimize the concurrency management of SubQueueSelectorCacheBroker by synchronizing the retrieval of selectors.;requirement_debt
AMQ-8012: Refine the synchronization mechanism of SubQueueSelectorCacheBroker for improved thread safety during the retrieval of selectors.;requirement_debt
AMQ-8012: Strengthen the concurrency control of SubQueueSelectorCacheBroker by applying synchronization when returning a copy of selectors.;requirement_debt
AMQ-8012: Enhance the thread safety of SubQueueSelectorCacheBroker by synchronizing the process of retrieving a copy of selectors.;requirement_debt
AMQ-8012: Improve the synchronization of SubQueueSelectorCacheBroker to ensure thread safety during the retrieval of selectors.;requirement_debt
AMQ-8012: Optimize the thread safety of SubQueueSelectorCacheBroker by synchronizing the retrieval of a copy of selectors.;requirement_debt
AMQ-8012: Refine the concurrency handling of SubQueueSelectorCacheBroker by applying synchronization when returning a copy of selectors.;requirement_debt
AMQ-8012: Strengthen the synchronization mechanism of SubQueueSelectorCacheBroker for improved thread safety during selector retrieval.;requirement_debt
HBASE-12090: Utilize Unsafe for enhanced performance in Bytes operations. (Vladimir Rodionov);requirement_debt
HBASE-12090: Improve performance of Bytes operations by leveraging Unsafe. (Vladimir Rodionov);requirement_debt
HBASE-12090: Enhance speed of Bytes operations by leveraging Unsafe. (Vladimir Rodionov);requirement_debt
HBASE-12090: Utilize Unsafe for faster Bytes operations. (Vladimir Rodionov);requirement_debt
HBASE-12090: Optimize Bytes operations for improved performance using Unsafe. (Vladimir Rodionov);requirement_debt
HBASE-12090: Boost performance of Bytes operations by leveraging Unsafe. (Vladimir Rodionov);requirement_debt
HBASE-12090: Increase speed of Bytes operations by utilizing Unsafe. (Vladimir Rodionov);requirement_debt
HBASE-12090: Leverage Unsafe to achieve faster Bytes operations. (Vladimir Rodionov);requirement_debt
HBASE-12090: Enhance performance of Bytes operations by exploiting Unsafe. (Vladimir Rodionov);requirement_debt
HBASE-12090: Improve efficiency of Bytes operations by utilizing Unsafe. (Vladimir Rodionov);requirement_debt
HBASE-12090: Optimize speed of Bytes operations by leveraging Unsafe. (Vladimir Rodionov);requirement_debt
HBASE-12090: Utilize Unsafe to achieve faster Bytes operations. (Vladimir Rodionov);requirement_debt
HBASE-12090: Boost efficiency of Bytes operations by leveraging Unsafe. (Vladimir Rodionov);requirement_debt
HBASE-12090: Increase performance of Bytes operations by utilizing Unsafe. (Vladimir Rodionov);requirement_debt
HBASE-12090: Leverage Unsafe for improved performance in Bytes operations. (Vladimir Rodionov);requirement_debt
HBASE-12090: Enhance speed and performance of Bytes operations using Unsafe. (Vladimir Rodionov);requirement_debt
HBASE-12090: Optimize efficiency of Bytes operations by exploiting Unsafe. (Vladimir Rodionov);requirement_debt
HBASE-12090: Improve performance and speed of Bytes operations using Unsafe. (Vladimir Rodionov);requirement_debt
"NO-JIRA: Exclude building Proton examples and tests in GitHub Action workflow (#871).
This change aligns with the options introduced in PROTON-2170 and PROTON-2171.
Proton versions that do not yet support BUILD_EXAMPLES will ignore it and generate a CMake warning.";requirement_debt
"NO-JIRA: Disable the building of Proton examples and tests in the GitHub Action workflow (#871).
This modification is in line with the options introduced in PROTON-2170 and PROTON-2171.
Proton versions that do not currently support BUILD_EXAMPLES will disregard it and produce a CMake warning.";requirement_debt
"NO-JIRA: Exclude the compilation of Proton examples and tests in the GH Action workflow (#871).
This adjustment reflects the options implemented in PROTON-2170 and PROTON-2171.
Proton versions that do not yet implement BUILD_EXAMPLES will overlook it and issue a CMake warning.";requirement_debt
"NO-JIRA: Skip the construction of Proton examples and tests in the GH Action workflow (#871).
This update corresponds to the options presented in PROTON-2170 and PROTON-2171.
Proton versions that do not currently include BUILD_EXAMPLES will overlook it and display a CMake warning.";requirement_debt
"NO-JIRA: Prevent the generation of Proton examples and tests in the GH Action workflow (#871).
This change aligns with the options specified in PROTON-2170 and PROTON-2171.
Proton versions that do not support BUILD_EXAMPLES yet will disregard it and emit a CMake warning.";requirement_debt
"NO-JIRA: Omit the compilation of Proton examples and tests in the GitHub Action workflow (#871).
This adjustment follows the options introduced in PROTON-2170 and PROTON-2171.
Proton versions that do not yet implement BUILD_EXAMPLES will ignore it and produce a CMake warning.";requirement_debt
"NO-JIRA: Exclude the construction of Proton examples and tests in the GitHub Action workflow (#871).
This modification aligns with the options outlined in PROTON-2170 and PROTON-2171.
Proton versions that do not currently support BUILD_EXAMPLES will overlook it and issue a CMake warning.";requirement_debt
"NO-JIRA: Disable the generation of Proton examples and tests in the GH Action workflow (#871).
This update reflects the options implemented in PROTON-2170 and PROTON-2171.
Proton versions that do not include BUILD_EXAMPLES yet will disregard it and emit a CMake warning.";requirement_debt
"NO-JIRA: Skip building the Proton examples and tests in the GitHub Action workflow (#871).
This adjustment corresponds to the options introduced in PROTON-2170 and PROTON-2171.
Proton versions that do not yet support BUILD_EXAMPLES will ignore it and generate a CMake warning.";requirement_debt
"NO-JIRA: Prevent the construction of Proton examples and tests in the GitHub Action workflow (#871).
This change is in accordance with the options specified in PROTON-2170 and PROTON-2171.
Proton versions that do not support BUILD_EXAMPLES yet will disregard it and emit a CMake warning.";requirement_debt
"NO-JIRA: Omit the generation of Proton examples and tests in the GH Action workflow (#871).
This adjustment aligns with the options presented in PROTON-2170 and PROTON-2171.
Proton versions that do not yet implement BUILD_EXAMPLES will overlook it and display a CMake warning.";requirement_debt
"NO-JIRA: Exclude the building of Proton examples and tests in the GH Action workflow (#871).
This modification follows the options introduced in PROTON-2170 and PROTON-2171.
Proton versions that do not currently include BUILD_EXAMPLES will disregard it and emit a CMake warning.";requirement_debt
"NO-JIRA: Disable the compilation of Proton examples and tests in the GH Action workflow (#871).
This update corresponds to the options specified in PROTON-2170 and PROTON-2171.
Proton versions that do not yet implement BUILD_EXAMPLES will overlook it and produce a CMake warning.";requirement_debt
"NO-JIRA: Skip the generation of Proton examples and tests in the GH Action workflow (#871).
This change aligns with the options outlined in PROTON-2170 and PROTON-2171.
Proton versions that do not currently support BUILD_EXAMPLES will ignore it and issue a CMake warning.";requirement_debt
"NO-JIRA: Prevent the building of Proton examples and tests in the GH Action workflow (#871).
This adjustment reflects the options implemented in PROTON-2170 and PROTON-2171.
Proton versions that do not support BUILD_EXAMPLES yet will disregard it and produce a CMake warning.";requirement_debt
"NO-JIRA: Omit the construction of Proton examples and tests in the GH Action workflow (#871).
This update corresponds to the options introduced in PROTON-2170 and PROTON-2171.
Proton versions that do not yet implement BUILD_EXAMPLES will overlook it and emit a CMake warning.";requirement_debt
"NO-JIRA: Exclude the generation of Proton examples and tests in the GH Action workflow (#871).
This modification aligns with the options specified in PROTON-2170 and PROTON-2171.
Proton versions that do not currently include BUILD_EXAMPLES will disregard it and display a CMake warning.";requirement_debt
"NO-JIRA: Disable the construction of Proton examples and tests in the GH Action workflow (#871).
This change follows the options introduced in PROTON-2170 and PROTON-2171.
Proton versions that do not yet support BUILD_EXAMPLES will ignore it and emit a CMake warning.";requirement_debt
"Refactor to make the HttpAction objects and servlets independent of Jetty.
An indirect dependency existed for HttpAction on SPARQLServer.
Refactoring is a step towards JENA-201 (Deliver Fuseki as a WAR file).";architecture_debt
"Improved build configuration
1, Fix SPARK-1441: compile spark core error with hadoop 0.23.x
2, Fix SPARK-1491: maven hadoop-provided profile fails to build
3, Fix org.scala-lang: * ,org.apache.avro:* inconsistent versions dependency
4, A modified on the sql/catalyst/pom.xml,sql/hive/pom.xml,sql/core/pom.xml (Four spaces formatted into two spaces)
Closes #480 from witgo/format_pom and squashes the following commits:
03f652f [witgo] review commit
b452680 [witgo] Merge branch 'master' of https://github.com/apache/spark into format_pom
bee920d [witgo] revert fix SPARK-1629: Spark Core missing commons-lang dependence
7382a07 [witgo] Merge branch 'master' of https://github.com/apache/spark into format_pom
6902c91 [witgo] fix SPARK-1629: Spark Core missing commons-lang dependence
0da4bc3 [witgo] merge master
d1718ed [witgo] Merge branch 'master' of https://github.com/apache/spark into format_pom
e345919 [witgo] add avro dependency to yarn-alpha
77fad08 [witgo] Merge branch 'master' of https://github.com/apache/spark into format_pom
62d0862 [witgo] Fix org.scala-lang: * inconsistent versions dependency
1a162d7 [witgo] Merge branch 'master' of https://github.com/apache/spark into format_pom
934f24d [witgo] review commit
cf46edc [witgo] exclude jruby
06e7328 [witgo] Merge branch 'SparkBuild' into format_pom
99464d2 [witgo] fix maven hadoop-provided profile fails to build
0c6c1fc [witgo] Fix compile spark core error with hadoop 0.23.x
6851bec [witgo] Maintain consistent SparkBuild.scala, pom.xml";build_debt
HBASE-4422  Move block cache parameters and references into single CacheConf class (jgray);architecture_debt
"Rewrite rebalancing plan generator
This patch splits the functionality of the module out into three
classes or work:
* Fixing zoning and replica level violations
* Contracting a cluster
* Rebalancing shards across a cluster
The implementations of the first two features are pretty similar - find
the shards that need to be moved, then choose an optimal home for each
of them.  By default the contraction code will remove shards from nodes
in the ""decom"" zone, and the rebalancing code will ignore that zone
entirrely. An optimal home is a node that
a) is in the correct zone, and
b) has the fewest # of shards for the DB among nodes in the zone, and
c) has the fewest total # of shards among nodes satisfying a) and b)
The implementation of rebalancing is a bit more complicated.  The
rebalancing algorithm looks roughly like this
For DB in all_dbs:
    Ensure all nodes have at least (N*Q) div length(Nodes) shards
    Ensure no node has more than (N*Q) div length(Nodes) + 1 shards
For node in nodes:
    If node has more than TotalShards div length(Nodes) + 1 shards:
        Donate shard to another node
The net result is that each database is balanced across the cluster and
the cluster as a whole is globally balanced.
The current version of the module prints out shard move and copy
operations in a clou-friendly format via io:format.  It also returns a
list of {Op, #shard{}, node()} tuples representing the operations.
The rebalancer will stop after generating 1000 operations by default.
The limit can be customized by using the 1-arity versions of expand,
contract and fix_zoning, but note that the performance of the rebalancer
degrades as the number of pending operations increases.
BugzID: 23690
BugzID: 20770";architecture_debt
Move BytesSource and StringSource from converter to api as they are used from several places including util which should not know about converters;architecture_debt
[AIRFLOW-6858] Decouple DagBag and Executor (#7479);architecture_debt
AMBARI-16743: clean up import * for RANGER service (Juanjo Marron via jluniya);build_debt
KARAF-1438 Optimize imports for deployers;build_debt
minor, remove dependency on kylin-tool;build_debt
"Legacy deserializer can create unexpected boundary range tombstones
patch by Sylvain Lebresne; reviewed by Branimir Lambov for CASSANDRA-13237";architecture_debt
[AIRFLOW-4535] Break jobs.py into multiple files (#5303);architecture_debt
Removing unused dependency and changing default daemon port to 9090.  Fixes #300;build_debt
Move SshBasedJavaAppSetup class into its own file;architecture_debt
Unused import;build_debt
TOBAGO-1345: Remove dependencies to rarely used libraries;build_debt
Clean up some unused imports;build_debt
delete invalid import;build_debt
HDFS-2223. Untangle depencencies between NN components. Contributed by Todd Lipcon.;build_debt
"Merge master branch to 3.x dev branch (#3718)
* Release resource after use in ConfigParserTest (#3127)
Release resource after use in ConfigParserTest
* add javadoc for registry and some code (#3140)
add javadoc for registry and optimize code
* Correct spelling error (#3146)
* Code optimization (#3118)
* code optimization
* useless import
* optimization
* Code rule (#3016)
* code optimization (#3167)
code optimization
* Add javadoc for dubbo-serialization module(#3002). (#3004)
Add javadoc for dubbo-serialization module(#3002).
* optimize ReconnectTimerTask's log output (#3162)
* optimize log output
* Separate logs for reconnect and close
* remove reconnect exception log
* add some small optimize (#3171)
* modify some log describe
* use java8 lambda expression
* fix telnet trace times is always 1 (#3038)
* fix telnet trace times is always 1
* use StringUtils determine if the string is empty
* Fix 3105 , make invoke command with Json string parameter without ""class"" key
* Fix 3105 ï¼ŒKeep the class key to support overloaded methods
* optimize InvokerTelnetHandlerTest
* Upgrade junt to junit5 (#3149)
* upgrade junit to junit5
* modify test
* upgrade_junt_to_junit5
* 
* fi test case
* Disabled soem test case temporarily
* upgrade junit to junit5 and batch modify test case
* copy some code from jupiter5.4.0.M1 for some issues
* rat
* update rat path
* revert case
* add junit-platform-surefire-provider to maven-surefire-plugin
* update dependency
* fix coverage issue (#1)
* use jupiter 5.4.0-M1 and remove junit5 source code
* Format change.
* fix wrong word spelling (#3217)
*  Fix provicer --> provider (#3222)
* Optimize the code:  use logger instead of printStackTrace(). (#3202)
* Optimize code: remove unnecessary judgment code. (#3196)
* Optimize the code: fix CallbackServiceCodec.java exportOrunexportCallbackService method issue. (#3199)
* Optimize the code: fix url to null, NullPointerException, change private variable to camel mode.
* Optimize the code: exportOrUnexportCallbackService method camel mode.
* Optimize the code: fix method:encodeInvocationArgument private callbackStatus is camel writing.
* Optimize the code: fix name issue
* Exporter is a noun, we should use a verb here, like Export.
* The generics that can be inferred automatically are also deleted.
* Refactor telnet invoke command (#3210)
* refactor telnet invoke command
* add select command for telnet
* fix test case
* Remove deprecated AnnotationBean, please refer #1485 for the new method to replace. (#3232)
* keep TagRouter consistent with 2.6.x
* refactor filterUsingStaticTag using lambda in tagRouter
* Modified to lower camel case (#3003)
* wrong event setting (#3043)
* wrong event setting
* modify event seeting
* modify
* call the util method (#3230)
* Code optimization, call the util method
* mofidy
* modify *
* import package
* Qos heart (#3170)
* qos heart question fix #3165
* modify
* judge if it's a IdleStateEvent
* add UT
* modify
* Merge pull request #3246 from cvictory:2.7.0-release remove gson from dubbo.jar in shading mode , and change to dependency way.
* just for modify comments and imports
* remove gson from dubbo.jar in shading mode, add dependency
* Extract compareTo impl to Router interface and concrete Router only responsible for provide priority. (#3240)
something is waiting for us to disscuss:
1. Every Route implement should set a priority?
2.https://github.com/apache/incubator-dubbo/issues/3249
* Protocol compatibility (#3254)
add default method into Protocol .
* remove getContext() (#3235)
* modify some typos (#3257)
* modify some typos
* fix some other addionalParameterKeys and paramter typos
* Merge 2.6.6 source code into 2.7 (#3241)
* Merge 2.6.6 source code into 2.7
* Fixed logging level for https://github.com/apache/incubator-dubbo/pull/3241#discussion_r248195964
* Change the implementation for apache/incubator-dubbo#3241
* Remove the implementation Ordered, because it does not work in Spring Framework : apache/incubator-dubbo#3241
* Remove the implementation Ordered, because it does not work in Spring Framework : apache/incubator-dubbo#3241
* Only Optimize Imports
* Add activation for the release profile
* Update the Java SE link to Java 8.
* Move the doclint configuration to correct position.
* Deactivate maven release profile.
* Fix final name.
* Optimize the Apollo extension of Config-Center SPI
* must shutdown thread pool when no in use (#3255)
* must shutdown thread pool when no in use
* Update 2.7.0 release notes
* Igonre .patch file.
* Bring back redis auth UT (#3278)
* Optimize code: Fix Constructor to determine illegal logic problems (#3197)
* fix return type (#3284)
* use standardcharset.utf-8 instead of literal (#3285)
* use standardcharset.utf-8 instead of literal
* remove unused import
* Move the iteration of methods of a service config to the if block of the class have method declared not by Object; remove some useless parameter type (#3282)
* Add shutdown command for telnet (#3280)
* telnet add shutdown command
* refactor rename shutDown to shutdown
* remove unregister  in doDestroy
* unregister the ShutdownHook when the shutdown command invoked
* Ignore mvn wrapper binary files.
* Fix typo (#3293)
* Improve/heartbeat (#3276)
* add the notice of code style
* modify the pic
* del teh faq.md, move to dubbo admin
* improve:remove the heartbeat on server side
* improve:change the scope of timer to static
* code optimization (#3297)
* further enhancement for pull request #3297, also fix an issue introduced in this pull request (#3303)
* further enhancement for pull request #3297, also fix an issue introduced
in this pull request
* rename the variable
* enhance the readability
* Fix UT conflicts of merging 2.7.0-release
* Remove usage of classes in Junit 4
* Remove usage of classes in Junit 4
* Remove usage of classes in Junit 4
* Remove usage of classes in Junit 4
* Remove usage of classes in Junit 4
* remove not used import (#3309)
* remove unused import (#3311)
* remove not used import
* remove unused import
* Degrade some UTs in dubbo-config-spring to use junit 4.
* use beforeEach and afterEach
* Merge pull request #3295, unregister consumer url when client destroyed (referenceconfig#destroy).
* fix client reconnect offline provider.
* refactor cancel future.
* fix client reconnect offline provider.
* refactor cancel future.
* fix client reconnect offline provider.
* refactor cancel future.
* fix unregister when client destroyed
* Optimize heartbeat (#3299)
* Optimize heartbeat.
We should cancel the timeout when the client or server is close.
* change the hashedWheelTimer's ticks
* Optimize tasks keeper.
* fix timeout cancel to task cancel.
keep task directly.
* simply telnet command enabled check logic (#3316)
* simply telnet command enabled check
* Add comments, manually merge #3181.
* Fix for loop reference test pass on protostuff (#3252)
* Fix maven compile warning (#3322)
* Merge pull request #3174, make timeout filter not work in async way.
* Merge pull request #3323, fix double-checked locking.
* Merge pull request #2959, fix a bug of service config.
* Fix random ut falling in DubboMonitorTest (#3327)
* Merge pull request #3017, fixes #2981, refresh invocation's attachments in each invoke.
Fixes #2981.
* Merge pull request #3141, optimize outbound event and some code formatting.
* Merge pull request #3333, add @Override for sub-class method.
* Fix thrift protocol, use path to locate exporter. (#3331)
* Fix thrift protocol, use path to locate exporter.
* Fix UT
* fix #2842. remove duplicate SPI definitions for 2.7.x (#3340)
remove duplicate SPI definitions for 2.7.x
* fix org.apache.dubbo replace com.alibaba.dubbo (#3338)
org.apache.dubbo replace com.alibaba.dubbo
* fix the typo of notification mail list address (#3335)
fix the typo of notification mail list address
* Review code of TypeDefinitionBuilder (#3064)
* Review code of TypeDefinitionBuilder
1. use init method to init builds' list
* use single list for all builders.
Seems like the builder is thread-safe, we can keep them static and final.
* clean code.
* Remove futility check code
* add no-argument constructor method to URL.java fix #3342 (#3350)
* Fix NullPointerException when Hessian instantiate URL with JavaDeserializer
* Enable ZookeeperMetadataReportTest (#3360)
* Package name error (#3354)
* some optimize on ExtensionLoader (#3307)
* some optimize on ExtensionLoader
* make ci rerun
* fix compile error
* fix ci failure
* Fix some unit test failure (#3337)
* Fix compilation error fix #3365 (#3366)
* reExport fail fix#900
* modify
* use Objects.equals
* compare URL for all proxy protocol
* delete useless judgment (#3326)
* Fix self assignment (#3301)
* Fix self assignment
* Replace set with list to insure item order
* Minor tweak of codestyle
* Fix #2423, Multicast demo fails with message ""Can't assign requested address""
* temporarily disable ipv6 test
* simplify map empty judgment (#3376)
* redis (#3291)
* enhance unit test and logging (#3374)
* enhance unit test and logging
* enhance logging message
* fix unit test
* make code clean
* follow up for #3291 (#3378)
* correct typos,eg: occured -> occurred (#3380)
LGTM
* follow up for #3376 (#3377)
* first pull request (#3396)
* Modify deprecated class to updated class in some comments (#3402)
* Merge pull request #3341, start to use IdleStateHandler in Netty4.
* Enhancement/logger factory (#3389)
* polishing LoggerFactory
* polishing code using map.computeIfAbsent
* fix ci failure
* remove unnecessary break in switch
* call overloaded method
* update as requested
* add unit test
* move construction of ConfigChangeEvent outside the lambda expression (#3398)
* make ConfigChangeEvent immutable (#3403)
* Fix license issues (#3382)
* Fix license issues
* revert change to Netty's copyright
* fix dubbo nc #936
* modify
* refactor ScriptRouter: (#3404)
1, remove priority field, the same as super class
2, remove getUrl method, the same as super class
3, refactor constructor, extract method: getRule, getEngine
4, refactor route, extract method: createBindings, getRoutedInvokers
* Clean pom.xml file #3186 (#3211)
* update as requested
* add meta space size arguments
* polish
* fix code reviews
* empty
* polish pom.xml (remove test profile and jvm permSize args) (#3407)
* update dubbo samples' link (#3413)
* Acesslog dateformat enhancemnet (#3274)
* #3026 Access log related changed
* Reviwe comment incorporated given by @satansk and removed unuded method
* Incorporated @beiwei30 review comment, incorporated common-lang3 time package modified version
* Added rat entry for common lang3 FastDateFormat related java files
* switch back to jdk's dateformatter
* refactor loadClass method (#3410)
* refactor: expression is always true, remove it
* Update dubbo-common/src/main/java/org/apache/dubbo/common/extension/ExtensionLoader.java
Co-Authored-By: wanghbxxxx <wanghbxxxx@gmail.com>
* Update ExtensionLoader.java
* Update ExtensionLoader.java
* Update ExtensionLoader.java
* Update ExtensionLoader.java
* implement pull request #3412 on master branch (#3418)
* event of response fix#3244 (#3247)
* Use regular expressions to judge fix #3069
*  moved into Constants class
* modify
* Unused import
* modify
* can not put it in front
* catch NumberFormatException and return 'null' if necessary
* remove recursive call
* support .1 and 1.
* modify
* Support multiple shared links (#2457)
* make dubbo support multiple shared links, upgrading RPC throughput
* Fix compilation error
* Fix compilation error
* opti import
* if add {}
* checkstyle fail
* fix getSharedClient referenceCount calculation error bug
* ä¼˜åŒ– import
* Fix the problem that the getSharedClient thread is not safe
* Fix the problem that the getSharedClient thread is not safe
* Try fixing ci error, https://travis-ci.org/apache/incubator-dubbo/jobs/453185295
* å°†DEFAULT_CONNECTIONS_KEYä¿®æ”¹æˆSERVICE_CONNECTIONS_KEY
* dubbo.xsd add shareconnections attribute,
* Optimize code format
* Fix mult connect ghost connect  problem
* format code
* Remove the concept of ghostClientMap and ghost connection. In fact, ghostClient is LazyConnectExchangeClient. At present, the LazyConnectExchangeClient object is added directly in ReferenceCountExchangeClient to realize the mapping relationship with ReferenceCountExchangeClient. The relationship between previous ghostClient and url mapping is not applicable to the current new share. Multiple connections.
* Optimize the ReferenceCountExchangeClient and remove the reference to the lazyConnectExchangeClient because it doesn't make much sense; add locks in the close operation of the AbstractClient, because connect, disconnect, and close should not be done at the same time.
* format code
* try remove close lock
* Restore close method
* Restore ReferenceCountExchangeClient reference to LazyConnectExchangeClient object
* Optimize the logic of using the LazyConnectExchangeClient inside the ReferenceCountExchangeClient; Supplemental shared multi-connected unit test
* remove useless catch exception (#3421)
* remove duplicated import (#3440)
* Update junit to 5.4.0 release version (#3441)
* update junit to 5.4.0 release version
* remove uesles config
* remove duplicated unused method and move unit test (#3446)
* Add checkstyle rule for redundant import (#3444)
* add checkstyle for redundant import and fix all issue in repo
* fix git diff issue
* Enhance the java doc of dubbo-container module (#3437)
Fixes #2994
* refactor adaptive extension class code creation: extract class AdaptiveClassCodeGenerator (#3419)
* refactor adaptive extension class code creation:
extract createAdaptiveExtensionClassCode to class
AdaptiveClassCodeGenerator
* add some comment
* add license and comment
* remove main method
* refactor javassist compiler: extract class CtClassBuilder (#3424)
* refactor JavassistCompiler
* rename variable names
* reformat code
* refactor: prepend modifier of constructor, field and method outside the
JavassistClassInfo
* add null for ClassUtils.getSimpleClassName
* rename JavassistClassInfo to CtClassBuilder
* fix #2619: is there a problem in NettyBackedChannelBuffer.setBytes(...)? (#3448)
* Bugfix/timeout queue full (#3451)
replace ArrayBlockingQueue with LinkedBlockingQueue and remove capacity.
* extract 2 methods: (#3453)
isSetter: test if a method is a setter
getSetterProperty: get property for setter, for instance setVersion
return ""version""
* Add delay export  test case (#3447)
* extract method to cache default extension name (#3456)
* possibly bug fix (#3460)
* Merge pull request #3470, Apache parent pom version is updated to 21.
* A follow up of 6058846, update apache pom version to 21
* Class comment error (#3481)
* enhancement: extract duplicated method calls to variable (#3482)
extract duplicated method calls to variable
* use java7 diamond operator
* replace Collections.sort with List.sort
* extract duplicated code blocks
* use StandardCharsets.UTF_8
* use try-with-resources
* use java7 diamond operator
* enhance log message
* fix unit tests failures
* Branch refactor version (#3471)
* fix typo (#3491)
* Merge pull request #3466, Condition is not properly used.
fixes #1917
* fix issue#1293: A question for ReferenceConfigCache. (#3505)
* Fix invocation of toString on an array (#3507)
Fix invocation of toString on an array
* Fix inefficient use of keySet iterator instead of entrySet iterator (#3508)
Fix inefficient use of keySet iterator instead of entrySet iterator
* Boolean class use method toString() instead of String.valueof() (#3495)
* Merge pull request #3515, add metadataFactory SPI config for all-in-one shade jar.
Fixes #3514, missing redis metadata SPI extension in dubbo.jar.
* Merge pull request  #3513, bump up hessian-lite version
Fixes #3423.
* make getRegistered return unmodifiable collection. #3106
* fix ci failure
* Merge pull request #3527 Bricks-Man/incubator-dubbo, fix accidentally check exchanger in setDispatcher
fixes #3518
* Fix UT error following PR #3527
* Cache CompiledScript #390 (#3524)
* Merge pull request #3532 from beiwei30:use-concurrent-map, avoid using synchronized.
* Fix context filter's bug (#3526)
* Modify MetadataReportRetry ThreadName (#3550)
* fix: rename the thread name from DubboRegistryFailedRetryTimer to DubboMetadataReportRetryTimer in MetadataReportRetry
* fix issue #3533 (#3548)
* fix issue #195: @Reference check=false (#3530)
* Merge pull request #3528, fixes #208, setOnreturn does not work with generic invocation.
* fix issue #274: monitor cluster failsafe(#3523)
* fix issue #274: monitor cluster failsafe
* remove unused import
* Merge pull request #3520, fix #538 polish the process of deciding the ip to bind.
* Fix npe when package is null. (#3557)
* a more elegant way (#3567)
* Correct security report link.
* Add go implementation link.
* fix DubboCodec re-implements Codec2 #2977 (#3547)
* Merge pull request #3566, optimize compareTo of Router to guarantee consistent behaviour.
* Merge pull request #3577, rmi support generic.
Fixes #2779
* Fixes #3367, fail to parse config text with white space (#3589)
*     #3476: NullPointerException happened when using SpringContainer.getContext()
* rollback change for DEFAULT_SPRING_CONFIG
* replace magic string ""dubbo"" with constants (#3602)
* dubbo-parent dubbo, curator-framework dubbo-dependencies zookeeper. (#3516)
* Merge pul request #3607, introduce dubbo-dependencies-zookeeper.
* Merge RestProtocolTest.java (#3597)
* refactor URL to URLBuilder. #3494
* remove unrelated changes
* replace more with URLBuilder
* fix ci failure
* remove unnecessary comment
* Dubbo-3473 Fix Not Properly Closed Resources (#3474)
* Dump TagRouterRule (#3536)
Dump TagRouterRule since the TagRouterRule can be changed to `null` by ConfigCenter
* Merge pull request #3578, fixes #3289, enhance tagRoute:  support ip expression match.
* Merge pull request #2614, follow up for issue #195.
* Merge pull request #3558, check if remoteGroup is empty or not.
Fixes  #3555.
* Fluent style builder API support(#3431) (#3549)
* Update maven central badge.
* Merge pull request #3593, Consul support for Registry and Metadata.
* Merge https://github.com/dubbo/dubbo-registry-etcd into incubator-dubbo
* Add UT to ConfigurationUtilsTest
* rename dubbo-ops to dubbo-admin (#3628)
* typo for AccessLogFilter (#3633)
* Fix some etcd3 registry bugs. (#3632)
* fix some bugs.
* fix typo
* cancel keep alive if recovery failed.
* remove duplicate license header.
* Fixes #3570, NoSuchMethodError are thrown when add custorm Filter using dubbo2.6.5 and JDK1.6 and upgrade to dubbo2.7.0
* Add compatible UT
* fix UT
* Replace RpcStatus to count (#2984) (#3636)
* Fix when qos is disable,log will print every time. (#3397)
* fix when qos is disable,log will print every time.
* change qos server boos thread number 1
* add openjdk to travis (#3300)
* add openjdk to travis
* add openjdk to travis
* Merge pull request #3647, workaround to fix #3646.
* add metrics integration #3598 (#3643)
* add metrics integration
* add license
* Merge pull request #3639, Add equivalent annotation support for MethodConfig.
Fixes #2045
* Fixes #3478, #3477 and #3445
* fix heartbeat internal (#3579)
* Merge pull request #3603, configcenter share zookeeper connection with registry.
Fixes #3288
* correct spelling error (#3645)
* make snakeyaml transitive, governance rule relies on this dependency to work. (#3659)
* check null for path before call rest server (#3665)
* Minor refactor, no functinoal change.
* Separate ConnectionStateListener
* Simplify code
* Fix typo
* Support get external config from etcd config center
* Polish diamond operator
* Initial etcd support as config center
* Add a put interface for JEtcdClient
* Enhanced Etcd config center support with the ability to watch and cancel watch
* Polish code
* Distinguish modification event and delete event
* Add etcd registry and configcenter to dubbo-all
* Watch again when connection is re-established
* Polish code and fix some documentation errors (#3655)
* Improve the checking of lease id. #3684 (#3692)
It looks good.
* Optimize DefaultTpsLimiter (#3654)
* Correct @Parameter config of field of ConfigCenterConfig (#3688)
* fix-3678 (#3681)
* Add unit test for unpack and stick pack of dubbo and telent (#3703)
* fix compile error after merged master branch
* remove useless imports
* add AddressListener into RegistryDirectory";build_debt
HIVE-23268 : Eliminate beanutils transitive dependency;build_debt
Remove unused import (#3826);build_debt
"Clean up: Remove all unused imports (#8766)
### Motivation
Clean up project
### Modifications
- Search All unused imports, and remove them.
- Fixed typo and chunked";build_debt
remove duplicated dependencies from pom.xml and monitor/pom.xml;build_debt
"NIFI-6873: Added support for replacing a process group
 - decoupled flow update request behavior from VersionsResource into new abstract FlowUpdateResource
 - added replace process group functionality in ProcessGroupResource
 - parameterized FlowUpdateResource and created entity hierarchies to allow for maximum code sharing across different update types
 - refactored flow update methods to make use of commonality across different update types whenever possible
 - fixed issues in StandardProcessGroup verify update methods where same components existed in different ancestry chains but were considered a match when they shouldn't be
 - improved StandardProcessGroup to properly match up components on update using generated versioned component ids, when necessary to allow for update flow to efficiently match common components on flow import
This closes #4023.";architecture_debt
Fix some ICC compiler warnings, tested with ICC, clang and gcc;build_debt
missing import (#2151);build_debt
"Avoid deprecated `compile` and `testCompile` (#1023)
* Avoid deprecated `compile` and `testCompile`
* Make groovy-groovysh reply on groovy-templates directly
* Remove unused dependencies";build_debt
Resolved using a @deprecated spring method. Removed unused imports;build_debt
"[FLINK-19165] Refactor the UnilateralSortMerger
This is a preparation for introducing a sorted inputs in BATCH execution
mode. It refactors the UnilateralSortMerger into more composable pieces.
Additionally it adds the option to use a push-based approach instead of
spawning a Reader thread that consumes from an input iterator.
This closes #13357";architecture_debt
"KAFKA-1054; Eliminate Scala Compilation Warnings
Changes:
- Suppressed compiler warnings about type erasure in matching via unboxing
by Jon Riehl.
- Suppressed warning caused by slight difference in input function type
by John Riehl.
- Fix compiler warnings: ServerShutdownTest, DelayedJoinGroup function
signature by Blake Smith.
- Fix Scala 2.11 warnings. `Pair` has been deprecated, `try` without
`catch` and `finally` is useless and initialisation order fix by Ismael
Juma.";build_debt
Clean up unused imports.;build_debt
"fix #6306.  support TypeBuilder sort (#6365)
* fix #6306. support TypeBuilder sort
* fix #6306. support TypeBuilder sort
* fix #6306. support TypeBuilder sort
* remove unused import
* add license for test file";build_debt
"Removed unecessary bits from Apache dependencies in binary NOTICE.
Given http://www.apache.org/dev/licensing-howto.html#bundle-asf-product";build_debt
YARN-7218.  Decouple YARN Services REST API namespace from RM.  (Contributed by Eric Yang);architecture_debt
AMBARI-868. Clean up site.pp generation on the agent and remove the imports in the sample site.pp. (mahadev);build_debt
"Fix sqlline by removing redundant slf4j dependency (log4j-over-slf4j) from cassandra-all
SLF4J initialization was failing due to `NoClassDefFoundError`.";build_debt
"Refactor LocalTaskExecutor (#1033)
* Remove JobExceptionHandler
* Remove ExecutorServiceHandler
* Remove cloud.JobFacade
* Remove useless test suits
* Rename elastic-job to elasticjob
* Decouple LocalCloudJobConfiguration and JobRootConfiguration
* Refactor LocalTaskExecutor
* Remove LocalCloudJobConfiguration";architecture_debt
delete unnecessary import (#404);build_debt
LUCENE-7305 - use macro average in confusion matrix metrics, removed unused import in datasplitter;build_debt
"ISSUE #978: decouple metaformat cmd
Descriptions of the changes in this PR:
- introduce new commands - initnewcluster, nukeexistingcluster, whatisinstanceid
- add testcases initnewcluster and nukeexistingcluster at BookKeeperAdmin level
Master Issue: #978
This closes #979 from reddycharan/splitmetaformat, closes #978";architecture_debt
"Merge pull request #9208 from amaliujia/rw-remove-unneeded-junit
[Build] remove duplicate junit dependency";build_debt
20208: Fix Misc Junit Tests related issues - remove unused imports;build_debt